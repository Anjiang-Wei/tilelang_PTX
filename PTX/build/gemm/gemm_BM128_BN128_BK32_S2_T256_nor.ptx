//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-35583870
// Cuda compilation tools, release 12.8, V12.8.93
// Based on NVVM 7.0.1
//

.version 8.7
.target sm_80
.address_size 64

	// .globl	main_kernel
.global .align 1 .b8 _ZN67_INTERNAL_463d4978_36_gemm_BM128_BN128_BK32_S2_T256_nor_cu_cc9b6e384cute7productE[1];
.global .align 1 .b8 _ZN67_INTERNAL_463d4978_36_gemm_BM128_BN128_BK32_S2_T256_nor_cu_cc9b6e384cute1_E[1];
.global .align 1 .b8 _ZN67_INTERNAL_463d4978_36_gemm_BM128_BN128_BK32_S2_T256_nor_cu_cc9b6e384cuda3std3__45__cpo5beginE[1];
.global .align 1 .b8 _ZN67_INTERNAL_463d4978_36_gemm_BM128_BN128_BK32_S2_T256_nor_cu_cc9b6e384cuda3std3__45__cpo3endE[1];
.global .align 1 .b8 _ZN67_INTERNAL_463d4978_36_gemm_BM128_BN128_BK32_S2_T256_nor_cu_cc9b6e384cuda3std3__45__cpo6cbeginE[1];
.global .align 1 .b8 _ZN67_INTERNAL_463d4978_36_gemm_BM128_BN128_BK32_S2_T256_nor_cu_cc9b6e384cuda3std3__45__cpo4cendE[1];
.global .align 1 .b8 _ZN67_INTERNAL_463d4978_36_gemm_BM128_BN128_BK32_S2_T256_nor_cu_cc9b6e384cuda3std3__419piecewise_constructE[1];
.global .align 1 .b8 _ZN67_INTERNAL_463d4978_36_gemm_BM128_BN128_BK32_S2_T256_nor_cu_cc9b6e384cuda3std3__48in_placeE[1];
.global .align 1 .b8 _ZN67_INTERNAL_463d4978_36_gemm_BM128_BN128_BK32_S2_T256_nor_cu_cc9b6e384cuda3std6ranges3__45__cpo4swapE[1];
.global .align 1 .b8 _ZN67_INTERNAL_463d4978_36_gemm_BM128_BN128_BK32_S2_T256_nor_cu_cc9b6e384cuda3std6ranges3__45__cpo9iter_moveE[1];
.extern .shared .align 1024 .b8 buf_dyn_shmem[];

.visible .entry main_kernel(
	.param .u64 main_kernel_param_0,
	.param .u64 main_kernel_param_1,
	.param .u64 main_kernel_param_2
)
.maxntid 256, 1, 1
.minnctapersm 1
{
	.reg .pred 	%p<4>;
	.reg .b16 	%rs<193>;
	.reg .f32 	%f<961>;
	.reg .b32 	%r<682>;
	.reg .b64 	%rd<40>;


	ld.param.u64 	%rd18, [main_kernel_param_0];
	ld.param.u64 	%rd19, [main_kernel_param_1];
	mov.u32 	%r18, %tid.x;
	shr.s32 	%r19, %r18, 2;
	shl.b32 	%r20, %r19, 6;
	shr.u32 	%r21, %r18, 4;
	and.b32  	%r22, %r18, 2;
	shr.u32 	%r23, %r22, 1;
	add.s32 	%r24, %r23, %r21;
	shl.b32 	%r25, %r24, 5;
	and.b32  	%r26, %r25, 32;
	and.b32  	%r27, %r18, 8;
	shr.u32 	%r28, %r27, 3;
	add.s32 	%r29, %r28, %r18;
	shl.b32 	%r30, %r29, 4;
	and.b32  	%r31, %r30, 16;
	or.b32  	%r32, %r26, %r20;
	or.b32  	%r33, %r32, %r31;
	mov.u32 	%r34, %ctaid.y;
	shl.b32 	%r35, %r34, 19;
	shl.b32 	%r36, %r19, 12;
	shl.b32 	%r37, %r18, 3;
	and.b32  	%r38, %r37, 24;
	add.s32 	%r39, %r36, %r35;
	or.b32  	%r40, %r39, %r38;
	mul.wide.s32 	%rd20, %r40, 2;
	add.s64 	%rd14, %rd18, %rd20;
	mov.u32 	%r41, buf_dyn_shmem;
	add.s32 	%r13, %r41, %r33;
	// begin inline asm
	cp.async.cg.shared.global [%r13], [%rd14], 16;
	// end inline asm
	add.s32 	%r42, %r40, 262144;
	mul.wide.s32 	%rd21, %r42, 2;
	add.s64 	%rd15, %rd18, %rd21;
	add.s32 	%r14, %r13, 4096;
	// begin inline asm
	cp.async.cg.shared.global [%r14], [%rd15], 16;
	// end inline asm
	mov.u32 	%r43, %ctaid.x;
	shl.b32 	%r44, %r43, 19;
	add.s32 	%r45, %r36, %r44;
	or.b32  	%r46, %r45, %r38;
	mul.wide.s32 	%rd22, %r46, 2;
	add.s64 	%rd16, %rd19, %rd22;
	add.s32 	%r15, %r13, 16384;
	// begin inline asm
	cp.async.cg.shared.global [%r15], [%rd16], 16;
	// end inline asm
	add.s32 	%r47, %r46, 262144;
	mul.wide.s32 	%rd23, %r47, 2;
	add.s64 	%rd17, %rd19, %rd23;
	add.s32 	%r16, %r13, 20480;
	// begin inline asm
	cp.async.cg.shared.global [%r16], [%rd17], 16;
	// end inline asm
	// begin inline asm
	cp.async.commit_group;

	// end inline asm
	shr.s32 	%r48, %r18, 31;
	shr.u32 	%r49, %r48, 28;
	add.s32 	%r50, %r18, %r49;
	and.b32  	%r51, %r50, -16;
	sub.s32 	%r52, %r18, %r51;
	shr.u32 	%r53, %r52, 31;
	add.s32 	%r54, %r52, %r53;
	shr.s32 	%r55, %r54, 1;
	shr.s32 	%r56, %r54, 31;
	shr.u32 	%r57, %r56, 30;
	add.s32 	%r58, %r55, %r57;
	and.b32  	%r59, %r58, -4;
	sub.s32 	%r60, %r55, %r59;
	shr.u32 	%r61, %r50, 31;
	shr.s32 	%r62, %r50, 4;
	add.s32 	%r63, %r62, %r61;
	and.b32  	%r64, %r63, -2;
	sub.s32 	%r65, %r62, %r64;
	shl.b32 	%r66, %r60, 6;
	and.b32  	%r67, %r66, 192;
	shl.b32 	%r68, %r65, 3;
	and.b32  	%r69, %r68, 8;
	or.b32  	%r70, %r67, %r69;
	and.b32  	%r71, %r54, 134217726;
	sub.s32 	%r72, %r52, %r71;
	shl.b32 	%r73, %r72, 5;
	shr.s32 	%r74, %r52, 31;
	shr.u32 	%r75, %r74, 29;
	add.s32 	%r76, %r52, %r75;
	shl.b32 	%r77, %r76, 5;
	and.b32  	%r78, %r77, -256;
	add.s32 	%r79, %r73, %r78;
	shr.u32 	%r80, %r48, 27;
	add.s32 	%r81, %r18, %r80;
	shr.u32 	%r82, %r81, 31;
	shr.s32 	%r83, %r81, 5;
	add.s32 	%r84, %r83, %r82;
	and.b32  	%r85, %r84, 8388606;
	sub.s32 	%r86, %r83, %r85;
	shl.b32 	%r87, %r86, 9;
	add.s32 	%r88, %r79, %r87;
	and.b32  	%r89, %r60, 2;
	setp.eq.s32 	%p1, %r89, 0;
	selp.b32 	%r3, 16, -16, %p1;
	shr.u32 	%r90, %r67, 3;
	xor.b32  	%r91, %r70, %r90;
	add.s32 	%r4, %r88, %r91;
	shr.u32 	%r92, %r48, 29;
	add.s32 	%r93, %r18, %r92;
	and.b32  	%r94, %r93, -8;
	sub.s32 	%r95, %r18, %r94;
	shr.u32 	%r96, %r95, 31;
	add.s32 	%r97, %r95, %r96;
	shr.s32 	%r98, %r97, 1;
	mov.u32 	%r681, 0;
	shl.b32 	%r99, %r98, 6;
	and.b32  	%r100, %r99, 192;
	and.b32  	%r101, %r93, 8;
	or.b32  	%r102, %r100, %r101;
	and.b32  	%r103, %r97, 134217726;
	sub.s32 	%r104, %r95, %r103;
	shl.b32 	%r5, %r104, 5;
	shl.b32 	%r6, %r65, 10;
	shr.u32 	%r105, %r48, 26;
	add.s32 	%r106, %r18, %r105;
	shl.b32 	%r107, %r106, 2;
	and.b32  	%r7, %r107, -256;
	and.b32  	%r108, %r98, 2;
	setp.eq.s32 	%p2, %r108, 0;
	selp.b32 	%r8, 16, -16, %p2;
	shr.u32 	%r109, %r100, 3;
	xor.b32  	%r9, %r102, %r109;
	add.s32 	%r110, %r7, %r6;
	add.s32 	%r111, %r110, %r5;
	add.s32 	%r112, %r111, %r9;
	add.s32 	%r10, %r112, 8192;
	or.b32  	%r113, %r38, %r44;
	add.s32 	%r114, %r113, %r36;
	add.s32 	%r115, %r114, 32;
	mul.wide.s32 	%rd24, %r115, 2;
	add.s64 	%rd39, %rd19, %rd24;
	add.s32 	%r116, %r114, 262176;
	mul.wide.s32 	%rd25, %r116, 2;
	add.s64 	%rd38, %rd19, %rd25;
	or.b32  	%r117, %r38, %r35;
	add.s32 	%r118, %r117, %r36;
	add.s32 	%r119, %r118, 32;
	mul.wide.s32 	%rd26, %r119, 2;
	add.s64 	%rd37, %rd18, %rd26;
	add.s32 	%r120, %r118, 262176;
	mul.wide.s32 	%rd27, %r120, 2;
	add.s64 	%rd36, %rd18, %rd27;
	mov.f32 	%f897, 0f00000000;
	mov.f32 	%f898, %f897;
	mov.f32 	%f899, %f897;
	mov.f32 	%f900, %f897;
	mov.f32 	%f901, %f897;
	mov.f32 	%f902, %f897;
	mov.f32 	%f903, %f897;
	mov.f32 	%f904, %f897;
	mov.f32 	%f905, %f897;
	mov.f32 	%f906, %f897;
	mov.f32 	%f907, %f897;
	mov.f32 	%f908, %f897;
	mov.f32 	%f909, %f897;
	mov.f32 	%f910, %f897;
	mov.f32 	%f911, %f897;
	mov.f32 	%f912, %f897;
	mov.f32 	%f913, %f897;
	mov.f32 	%f914, %f897;
	mov.f32 	%f915, %f897;
	mov.f32 	%f916, %f897;
	mov.f32 	%f917, %f897;
	mov.f32 	%f918, %f897;
	mov.f32 	%f919, %f897;
	mov.f32 	%f920, %f897;
	mov.f32 	%f921, %f897;
	mov.f32 	%f922, %f897;
	mov.f32 	%f923, %f897;
	mov.f32 	%f924, %f897;
	mov.f32 	%f925, %f897;
	mov.f32 	%f926, %f897;
	mov.f32 	%f927, %f897;
	mov.f32 	%f928, %f897;
	mov.f32 	%f929, %f897;
	mov.f32 	%f930, %f897;
	mov.f32 	%f931, %f897;
	mov.f32 	%f932, %f897;
	mov.f32 	%f933, %f897;
	mov.f32 	%f934, %f897;
	mov.f32 	%f935, %f897;
	mov.f32 	%f936, %f897;
	mov.f32 	%f937, %f897;
	mov.f32 	%f938, %f897;
	mov.f32 	%f939, %f897;
	mov.f32 	%f940, %f897;
	mov.f32 	%f941, %f897;
	mov.f32 	%f942, %f897;
	mov.f32 	%f943, %f897;
	mov.f32 	%f944, %f897;
	mov.f32 	%f945, %f897;
	mov.f32 	%f946, %f897;
	mov.f32 	%f947, %f897;
	mov.f32 	%f948, %f897;
	mov.f32 	%f949, %f897;
	mov.f32 	%f950, %f897;
	mov.f32 	%f951, %f897;
	mov.f32 	%f952, %f897;
	mov.f32 	%f953, %f897;
	mov.f32 	%f954, %f897;
	mov.f32 	%f955, %f897;
	mov.f32 	%f956, %f897;
	mov.f32 	%f957, %f897;
	mov.f32 	%f958, %f897;
	mov.f32 	%f959, %f897;
	mov.f32 	%f960, %f897;

$L__BB0_1:
	bar.sync 	0;
	shl.b32 	%r377, %r681, 13;
	not.b32 	%r378, %r377;
	and.b32  	%r379, %r378, 8192;
	add.s32 	%r121, %r13, %r379;
	// begin inline asm
	cp.async.cg.shared.global [%r121], [%rd37], 16;
	// end inline asm
	add.s32 	%r122, %r121, 4096;
	// begin inline asm
	cp.async.cg.shared.global [%r122], [%rd36], 16;
	// end inline asm
	add.s32 	%r123, %r15, %r379;
	// begin inline asm
	cp.async.cg.shared.global [%r123], [%rd39], 16;
	// end inline asm
	add.s32 	%r124, %r123, 4096;
	// begin inline asm
	cp.async.cg.shared.global [%r124], [%rd38], 16;
	// end inline asm
	// begin inline asm
	cp.async.commit_group;

	// end inline asm
	// begin inline asm
	cp.async.wait_group 1;

	// end inline asm
	bar.sync 	0;
	shl.b32 	%r380, %r681, 12;
	and.b32  	%r381, %r380, 4096;
	add.s32 	%r382, %r4, %r381;
	add.s32 	%r383, %r10, %r381;
	shl.b32 	%r384, %r382, 1;
	add.s32 	%r129, %r41, %r384;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r125, %r126, %r127, %r128}, [%r129];

	// end inline asm
	add.s32 	%r134, %r129, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r130, %r131, %r132, %r133}, [%r134];

	// end inline asm
	add.s32 	%r139, %r129, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r135, %r136, %r137, %r138}, [%r139];

	// end inline asm
	add.s32 	%r144, %r129, 6144;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r140, %r141, %r142, %r143}, [%r144];

	// end inline asm
	shl.b32 	%r386, %r383, 1;
	add.s32 	%r149, %r41, %r386;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r145, %r146, %r147, %r148}, [%r149];

	// end inline asm
	add.s32 	%r154, %r149, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r150, %r151, %r152, %r153}, [%r154];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f193,  %f194,  %f195,  %f196},{%r125,  %r126,  %r127,  %r128},{%r145,  %r146},{%f960, %f959, %f958, %f957};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f201,  %f202,  %f203,  %f204},{%r130,  %r131,  %r132,  %r133},{%r145,  %r146},{%f956, %f955, %f954, %f953};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f209,  %f210,  %f211,  %f212},{%r135,  %r136,  %r137,  %r138},{%r145,  %r146},{%f952, %f951, %f950, %f949};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f217,  %f218,  %f219,  %f220},{%r140,  %r141,  %r142,  %r143},{%r145,  %r146},{%f948, %f947, %f946, %f945};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f225,  %f226,  %f227,  %f228},{%r140,  %r141,  %r142,  %r143},{%r147,  %r148},{%f932, %f931, %f930, %f929};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f233,  %f234,  %f235,  %f236},{%r135,  %r136,  %r137,  %r138},{%r147,  %r148},{%f936, %f935, %f934, %f933};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f241,  %f242,  %f243,  %f244},{%r130,  %r131,  %r132,  %r133},{%r147,  %r148},{%f940, %f939, %f938, %f937};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f249,  %f250,  %f251,  %f252},{%r125,  %r126,  %r127,  %r128},{%r147,  %r148},{%f944, %f943, %f942, %f941};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f257,  %f258,  %f259,  %f260},{%r125,  %r126,  %r127,  %r128},{%r150,  %r151},{%f928, %f927, %f926, %f925};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f265,  %f266,  %f267,  %f268},{%r130,  %r131,  %r132,  %r133},{%r150,  %r151},{%f924, %f923, %f922, %f921};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f273,  %f274,  %f275,  %f276},{%r135,  %r136,  %r137,  %r138},{%r150,  %r151},{%f920, %f919, %f918, %f917};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f281,  %f282,  %f283,  %f284},{%r140,  %r141,  %r142,  %r143},{%r150,  %r151},{%f916, %f915, %f914, %f913};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f289,  %f290,  %f291,  %f292},{%r140,  %r141,  %r142,  %r143},{%r152,  %r153},{%f900, %f899, %f898, %f897};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f297,  %f298,  %f299,  %f300},{%r135,  %r136,  %r137,  %r138},{%r152,  %r153},{%f904, %f903, %f902, %f901};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f305,  %f306,  %f307,  %f308},{%r130,  %r131,  %r132,  %r133},{%r152,  %r153},{%f908, %f907, %f906, %f905};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f313,  %f314,  %f315,  %f316},{%r125,  %r126,  %r127,  %r128},{%r152,  %r153},{%f912, %f911, %f910, %f909};

	// end inline asm
	shl.b32 	%r387, %r3, 1;
	add.s32 	%r255, %r129, %r387;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r251, %r252, %r253, %r254}, [%r255];

	// end inline asm
	add.s32 	%r260, %r255, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r256, %r257, %r258, %r259}, [%r260];

	// end inline asm
	add.s32 	%r265, %r255, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r261, %r262, %r263, %r264}, [%r265];

	// end inline asm
	add.s32 	%r270, %r255, 6144;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r266, %r267, %r268, %r269}, [%r270];

	// end inline asm
	shl.b32 	%r388, %r8, 1;
	add.s32 	%r275, %r149, %r388;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r271, %r272, %r273, %r274}, [%r275];

	// end inline asm
	add.s32 	%r280, %r275, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r276, %r277, %r278, %r279}, [%r280];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f960,  %f959,  %f958,  %f957},{%r251,  %r252,  %r253,  %r254},{%r271,  %r272},{%f193, %f194, %f195, %f196};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f956,  %f955,  %f954,  %f953},{%r256,  %r257,  %r258,  %r259},{%r271,  %r272},{%f201, %f202, %f203, %f204};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f952,  %f951,  %f950,  %f949},{%r261,  %r262,  %r263,  %r264},{%r271,  %r272},{%f209, %f210, %f211, %f212};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f948,  %f947,  %f946,  %f945},{%r266,  %r267,  %r268,  %r269},{%r271,  %r272},{%f217, %f218, %f219, %f220};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f932,  %f931,  %f930,  %f929},{%r266,  %r267,  %r268,  %r269},{%r273,  %r274},{%f225, %f226, %f227, %f228};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f936,  %f935,  %f934,  %f933},{%r261,  %r262,  %r263,  %r264},{%r273,  %r274},{%f233, %f234, %f235, %f236};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f940,  %f939,  %f938,  %f937},{%r256,  %r257,  %r258,  %r259},{%r273,  %r274},{%f241, %f242, %f243, %f244};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f944,  %f943,  %f942,  %f941},{%r251,  %r252,  %r253,  %r254},{%r273,  %r274},{%f249, %f250, %f251, %f252};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f928,  %f927,  %f926,  %f925},{%r251,  %r252,  %r253,  %r254},{%r276,  %r277},{%f257, %f258, %f259, %f260};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f924,  %f923,  %f922,  %f921},{%r256,  %r257,  %r258,  %r259},{%r276,  %r277},{%f265, %f266, %f267, %f268};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f920,  %f919,  %f918,  %f917},{%r261,  %r262,  %r263,  %r264},{%r276,  %r277},{%f273, %f274, %f275, %f276};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f916,  %f915,  %f914,  %f913},{%r266,  %r267,  %r268,  %r269},{%r276,  %r277},{%f281, %f282, %f283, %f284};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f900,  %f899,  %f898,  %f897},{%r266,  %r267,  %r268,  %r269},{%r278,  %r279},{%f289, %f290, %f291, %f292};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f904,  %f903,  %f902,  %f901},{%r261,  %r262,  %r263,  %r264},{%r278,  %r279},{%f297, %f298, %f299, %f300};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f908,  %f907,  %f906,  %f905},{%r256,  %r257,  %r258,  %r259},{%r278,  %r279},{%f305, %f306, %f307, %f308};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f912,  %f911,  %f910,  %f909},{%r251,  %r252,  %r253,  %r254},{%r278,  %r279},{%f313, %f314, %f315, %f316};

	// end inline asm
	add.s32 	%r681, %r681, 1;
	setp.ne.s32 	%p3, %r681, 127;
	add.s64 	%rd9, %rd39, 64;
	add.s64 	%rd38, %rd39, 524352;
	add.s64 	%rd11, %rd37, 64;
	add.s64 	%rd36, %rd37, 524352;
	mov.u64 	%rd37, %rd11;
	mov.u64 	%rd39, %rd9;
	@%p3 bra 	$L__BB0_1;

	mov.u32 	%r680, %tid.x;
	shr.s32 	%r679, %r680, 31;
	shr.u32 	%r678, %r679, 26;
	add.s32 	%r677, %r680, %r678;
	shl.b32 	%r676, %r677, 2;
	and.b32  	%r675, %r676, -256;
	ld.param.u64 	%rd35, [main_kernel_param_2];
	mov.u32 	%r674, %ctaid.y;
	shl.b32 	%r673, %r674, 19;
	mov.u32 	%r672, %ctaid.x;
	mov.u32 	%r671, %tid.x;
	shl.b32 	%r670, %r8, 1;
	shl.b32 	%r669, %r3, 1;
	// begin inline asm
	cp.async.wait_all;

	// end inline asm
	bar.sync 	0;
	add.s32 	%r641, %r6, %r675;
	add.s32 	%r642, %r641, %r5;
	add.s32 	%r643, %r642, %r9;
	shl.b32 	%r644, %r4, 1;
	add.s32 	%r646, %r41, %r644;
	add.s32 	%r393, %r646, 8192;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r389, %r390, %r391, %r392}, [%r393];

	// end inline asm
	add.s32 	%r398, %r646, 10240;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r394, %r395, %r396, %r397}, [%r398];

	// end inline asm
	add.s32 	%r403, %r646, 12288;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r399, %r400, %r401, %r402}, [%r403];

	// end inline asm
	add.s32 	%r408, %r646, 14336;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r404, %r405, %r406, %r407}, [%r408];

	// end inline asm
	shl.b32 	%r647, %r643, 1;
	add.s32 	%r648, %r41, %r647;
	add.s32 	%r413, %r648, 24576;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r409, %r410, %r411, %r412}, [%r413];

	// end inline asm
	add.s32 	%r418, %r648, 28672;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r414, %r415, %r416, %r417}, [%r418];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f449,  %f450,  %f451,  %f452},{%r389,  %r390,  %r391,  %r392},{%r409,  %r410},{%f960, %f959, %f958, %f957};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f457,  %f458,  %f459,  %f460},{%r394,  %r395,  %r396,  %r397},{%r409,  %r410},{%f956, %f955, %f954, %f953};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f465,  %f466,  %f467,  %f468},{%r399,  %r400,  %r401,  %r402},{%r409,  %r410},{%f952, %f951, %f950, %f949};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f473,  %f474,  %f475,  %f476},{%r404,  %r405,  %r406,  %r407},{%r409,  %r410},{%f948, %f947, %f946, %f945};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f481,  %f482,  %f483,  %f484},{%r404,  %r405,  %r406,  %r407},{%r411,  %r412},{%f932, %f931, %f930, %f929};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f489,  %f490,  %f491,  %f492},{%r399,  %r400,  %r401,  %r402},{%r411,  %r412},{%f936, %f935, %f934, %f933};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f497,  %f498,  %f499,  %f500},{%r394,  %r395,  %r396,  %r397},{%r411,  %r412},{%f940, %f939, %f938, %f937};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f505,  %f506,  %f507,  %f508},{%r389,  %r390,  %r391,  %r392},{%r411,  %r412},{%f944, %f943, %f942, %f941};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f513,  %f514,  %f515,  %f516},{%r389,  %r390,  %r391,  %r392},{%r414,  %r415},{%f928, %f927, %f926, %f925};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f521,  %f522,  %f523,  %f524},{%r394,  %r395,  %r396,  %r397},{%r414,  %r415},{%f924, %f923, %f922, %f921};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f529,  %f530,  %f531,  %f532},{%r399,  %r400,  %r401,  %r402},{%r414,  %r415},{%f920, %f919, %f918, %f917};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f537,  %f538,  %f539,  %f540},{%r404,  %r405,  %r406,  %r407},{%r414,  %r415},{%f916, %f915, %f914, %f913};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f545,  %f546,  %f547,  %f548},{%r404,  %r405,  %r406,  %r407},{%r416,  %r417},{%f900, %f899, %f898, %f897};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f553,  %f554,  %f555,  %f556},{%r399,  %r400,  %r401,  %r402},{%r416,  %r417},{%f904, %f903, %f902, %f901};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f561,  %f562,  %f563,  %f564},{%r394,  %r395,  %r396,  %r397},{%r416,  %r417},{%f908, %f907, %f906, %f905};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f569,  %f570,  %f571,  %f572},{%r389,  %r390,  %r391,  %r392},{%r416,  %r417},{%f912, %f911, %f910, %f909};

	// end inline asm
	add.s32 	%r519, %r393, %r669;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r515, %r516, %r517, %r518}, [%r519];

	// end inline asm
	add.s32 	%r524, %r519, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r520, %r521, %r522, %r523}, [%r524];

	// end inline asm
	add.s32 	%r529, %r519, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r525, %r526, %r527, %r528}, [%r529];

	// end inline asm
	add.s32 	%r534, %r519, 6144;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r530, %r531, %r532, %r533}, [%r534];

	// end inline asm
	add.s32 	%r539, %r413, %r670;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r535, %r536, %r537, %r538}, [%r539];

	// end inline asm
	add.s32 	%r544, %r539, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r540, %r541, %r542, %r543}, [%r544];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f577,  %f578,  %f579,  %f580},{%r515,  %r516,  %r517,  %r518},{%r535,  %r536},{%f449, %f450, %f451, %f452};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f585,  %f586,  %f587,  %f588},{%r520,  %r521,  %r522,  %r523},{%r535,  %r536},{%f457, %f458, %f459, %f460};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f593,  %f594,  %f595,  %f596},{%r525,  %r526,  %r527,  %r528},{%r535,  %r536},{%f465, %f466, %f467, %f468};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f601,  %f602,  %f603,  %f604},{%r530,  %r531,  %r532,  %r533},{%r535,  %r536},{%f473, %f474, %f475, %f476};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f609,  %f610,  %f611,  %f612},{%r530,  %r531,  %r532,  %r533},{%r537,  %r538},{%f481, %f482, %f483, %f484};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f617,  %f618,  %f619,  %f620},{%r525,  %r526,  %r527,  %r528},{%r537,  %r538},{%f489, %f490, %f491, %f492};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f625,  %f626,  %f627,  %f628},{%r520,  %r521,  %r522,  %r523},{%r537,  %r538},{%f497, %f498, %f499, %f500};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f633,  %f634,  %f635,  %f636},{%r515,  %r516,  %r517,  %r518},{%r537,  %r538},{%f505, %f506, %f507, %f508};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f641,  %f642,  %f643,  %f644},{%r515,  %r516,  %r517,  %r518},{%r540,  %r541},{%f513, %f514, %f515, %f516};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f649,  %f650,  %f651,  %f652},{%r520,  %r521,  %r522,  %r523},{%r540,  %r541},{%f521, %f522, %f523, %f524};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f657,  %f658,  %f659,  %f660},{%r525,  %r526,  %r527,  %r528},{%r540,  %r541},{%f529, %f530, %f531, %f532};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f665,  %f666,  %f667,  %f668},{%r530,  %r531,  %r532,  %r533},{%r540,  %r541},{%f537, %f538, %f539, %f540};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f673,  %f674,  %f675,  %f676},{%r530,  %r531,  %r532,  %r533},{%r542,  %r543},{%f545, %f546, %f547, %f548};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f681,  %f682,  %f683,  %f684},{%r525,  %r526,  %r527,  %r528},{%r542,  %r543},{%f553, %f554, %f555, %f556};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f689,  %f690,  %f691,  %f692},{%r520,  %r521,  %r522,  %r523},{%r542,  %r543},{%f561, %f562, %f563, %f564};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f697,  %f698,  %f699,  %f700},{%r515,  %r516,  %r517,  %r518},{%r542,  %r543},{%f569, %f570, %f571, %f572};

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1, %f577;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f706, %rs1;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs4, %f578;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f709, %rs4;}

	// end inline asm
	shl.b32 	%r652, %r671, 11;
	and.b32  	%r653, %r652, 65536;
	shl.b32 	%r654, %r671, 10;
	and.b32  	%r655, %r654, 28672;
	shl.b32 	%r657, %r672, 7;
	shr.s32 	%r658, %r671, 6;
	shl.b32 	%r659, %r658, 3;
	shl.b32 	%r660, %r671, 1;
	and.b32  	%r661, %r660, 6;
	add.s32 	%r664, %r657, %r673;
	add.s32 	%r665, %r664, %r653;
	add.s32 	%r666, %r665, %r659;
	or.b32  	%r667, %r666, %r661;
	add.s32 	%r668, %r667, %r655;
	cvta.to.global.u64 	%rd32, %rd35;
	mul.wide.s32 	%rd33, %r668, 2;
	add.s64 	%rd34, %rd32, %rd33;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs6, %f709;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs3, %f706;}

	// end inline asm
	st.global.v2.u16 	[%rd34], {%rs3, %rs6};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs7, %f579;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f712, %rs7;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs10, %f580;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f715, %rs10;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs12, %f715;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs9, %f712;}

	// end inline asm
	st.global.v2.u16 	[%rd34+65536], {%rs9, %rs12};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs13, %f585;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f718, %rs13;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs16, %f586;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f721, %rs16;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs18, %f721;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs15, %f718;}

	// end inline asm
	st.global.v2.u16 	[%rd34+262144], {%rs15, %rs18};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs19, %f587;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f724, %rs19;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs22, %f588;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f727, %rs22;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs24, %f727;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs21, %f724;}

	// end inline asm
	st.global.v2.u16 	[%rd34+327680], {%rs21, %rs24};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs25, %f593;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f730, %rs25;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs28, %f594;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f733, %rs28;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs30, %f733;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs27, %f730;}

	// end inline asm
	st.global.v2.u16 	[%rd34+524288], {%rs27, %rs30};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs31, %f595;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f736, %rs31;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs34, %f596;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f739, %rs34;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs36, %f739;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs33, %f736;}

	// end inline asm
	st.global.v2.u16 	[%rd34+589824], {%rs33, %rs36};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs37, %f601;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f742, %rs37;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs40, %f602;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f745, %rs40;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs42, %f745;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs39, %f742;}

	// end inline asm
	st.global.v2.u16 	[%rd34+786432], {%rs39, %rs42};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs43, %f603;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f748, %rs43;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs46, %f604;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f751, %rs46;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs48, %f751;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs45, %f748;}

	// end inline asm
	st.global.v2.u16 	[%rd34+851968], {%rs45, %rs48};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs49, %f633;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f754, %rs49;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs52, %f634;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f757, %rs52;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs54, %f757;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs51, %f754;}

	// end inline asm
	st.global.v2.u16 	[%rd34+64], {%rs51, %rs54};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs55, %f635;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f760, %rs55;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs58, %f636;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f763, %rs58;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs60, %f763;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs57, %f760;}

	// end inline asm
	st.global.v2.u16 	[%rd34+65600], {%rs57, %rs60};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs61, %f625;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f766, %rs61;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs64, %f626;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f769, %rs64;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs66, %f769;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs63, %f766;}

	// end inline asm
	st.global.v2.u16 	[%rd34+262208], {%rs63, %rs66};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs67, %f627;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f772, %rs67;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs70, %f628;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f775, %rs70;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs72, %f775;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs69, %f772;}

	// end inline asm
	st.global.v2.u16 	[%rd34+327744], {%rs69, %rs72};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs73, %f617;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f778, %rs73;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs76, %f618;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f781, %rs76;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs78, %f781;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs75, %f778;}

	// end inline asm
	st.global.v2.u16 	[%rd34+524352], {%rs75, %rs78};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs79, %f619;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f784, %rs79;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs82, %f620;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f787, %rs82;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs84, %f787;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs81, %f784;}

	// end inline asm
	st.global.v2.u16 	[%rd34+589888], {%rs81, %rs84};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs85, %f609;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f790, %rs85;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs88, %f610;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f793, %rs88;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs90, %f793;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs87, %f790;}

	// end inline asm
	st.global.v2.u16 	[%rd34+786496], {%rs87, %rs90};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs91, %f611;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f796, %rs91;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs94, %f612;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f799, %rs94;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs96, %f799;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs93, %f796;}

	// end inline asm
	st.global.v2.u16 	[%rd34+852032], {%rs93, %rs96};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs97, %f641;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f802, %rs97;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs100, %f642;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f805, %rs100;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs102, %f805;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs99, %f802;}

	// end inline asm
	st.global.v2.u16 	[%rd34+128], {%rs99, %rs102};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs103, %f643;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f808, %rs103;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs106, %f644;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f811, %rs106;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs108, %f811;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs105, %f808;}

	// end inline asm
	st.global.v2.u16 	[%rd34+65664], {%rs105, %rs108};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs109, %f649;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f814, %rs109;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs112, %f650;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f817, %rs112;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs114, %f817;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs111, %f814;}

	// end inline asm
	st.global.v2.u16 	[%rd34+262272], {%rs111, %rs114};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs115, %f651;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f820, %rs115;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs118, %f652;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f823, %rs118;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs120, %f823;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs117, %f820;}

	// end inline asm
	st.global.v2.u16 	[%rd34+327808], {%rs117, %rs120};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs121, %f657;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f826, %rs121;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs124, %f658;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f829, %rs124;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs126, %f829;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs123, %f826;}

	// end inline asm
	st.global.v2.u16 	[%rd34+524416], {%rs123, %rs126};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs127, %f659;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f832, %rs127;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs130, %f660;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f835, %rs130;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs132, %f835;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs129, %f832;}

	// end inline asm
	st.global.v2.u16 	[%rd34+589952], {%rs129, %rs132};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs133, %f665;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f838, %rs133;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs136, %f666;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f841, %rs136;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs138, %f841;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs135, %f838;}

	// end inline asm
	st.global.v2.u16 	[%rd34+786560], {%rs135, %rs138};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs139, %f667;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f844, %rs139;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs142, %f668;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f847, %rs142;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs144, %f847;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs141, %f844;}

	// end inline asm
	st.global.v2.u16 	[%rd34+852096], {%rs141, %rs144};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs145, %f697;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f850, %rs145;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs148, %f698;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f853, %rs148;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs150, %f853;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs147, %f850;}

	// end inline asm
	st.global.v2.u16 	[%rd34+192], {%rs147, %rs150};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs151, %f699;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f856, %rs151;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs154, %f700;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f859, %rs154;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs156, %f859;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs153, %f856;}

	// end inline asm
	st.global.v2.u16 	[%rd34+65728], {%rs153, %rs156};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs157, %f689;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f862, %rs157;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs160, %f690;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f865, %rs160;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs162, %f865;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs159, %f862;}

	// end inline asm
	st.global.v2.u16 	[%rd34+262336], {%rs159, %rs162};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs163, %f691;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f868, %rs163;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs166, %f692;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f871, %rs166;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs168, %f871;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs165, %f868;}

	// end inline asm
	st.global.v2.u16 	[%rd34+327872], {%rs165, %rs168};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs169, %f681;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f874, %rs169;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs172, %f682;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f877, %rs172;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs174, %f877;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs171, %f874;}

	// end inline asm
	st.global.v2.u16 	[%rd34+524480], {%rs171, %rs174};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs175, %f683;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f880, %rs175;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs178, %f684;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f883, %rs178;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs180, %f883;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs177, %f880;}

	// end inline asm
	st.global.v2.u16 	[%rd34+590016], {%rs177, %rs180};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs181, %f673;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f886, %rs181;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs184, %f674;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f889, %rs184;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs186, %f889;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs183, %f886;}

	// end inline asm
	st.global.v2.u16 	[%rd34+786624], {%rs183, %rs186};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs187, %f675;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f892, %rs187;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs190, %f676;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f895, %rs190;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs192, %f895;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs189, %f892;}

	// end inline asm
	st.global.v2.u16 	[%rd34+852160], {%rs189, %rs192};
	ret;

}

