//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-35583870
// Cuda compilation tools, release 12.8, V12.8.93
// Based on NVVM 7.0.1
//

.version 8.7
.target sm_80
.address_size 64

	// .globl	main_kernel
.global .align 1 .b8 _ZN67_INTERNAL_1db4787a_36_gemm_basic_BM64_BN64_BK32_S1_T128_cu_cc9b6e384cute7productE[1];
.global .align 1 .b8 _ZN67_INTERNAL_1db4787a_36_gemm_basic_BM64_BN64_BK32_S1_T128_cu_cc9b6e384cute1_E[1];
.global .align 1 .b8 _ZN67_INTERNAL_1db4787a_36_gemm_basic_BM64_BN64_BK32_S1_T128_cu_cc9b6e384cuda3std3__45__cpo5beginE[1];
.global .align 1 .b8 _ZN67_INTERNAL_1db4787a_36_gemm_basic_BM64_BN64_BK32_S1_T128_cu_cc9b6e384cuda3std3__45__cpo3endE[1];
.global .align 1 .b8 _ZN67_INTERNAL_1db4787a_36_gemm_basic_BM64_BN64_BK32_S1_T128_cu_cc9b6e384cuda3std3__45__cpo6cbeginE[1];
.global .align 1 .b8 _ZN67_INTERNAL_1db4787a_36_gemm_basic_BM64_BN64_BK32_S1_T128_cu_cc9b6e384cuda3std3__45__cpo4cendE[1];
.global .align 1 .b8 _ZN67_INTERNAL_1db4787a_36_gemm_basic_BM64_BN64_BK32_S1_T128_cu_cc9b6e384cuda3std3__419piecewise_constructE[1];
.global .align 1 .b8 _ZN67_INTERNAL_1db4787a_36_gemm_basic_BM64_BN64_BK32_S1_T128_cu_cc9b6e384cuda3std3__48in_placeE[1];
.global .align 1 .b8 _ZN67_INTERNAL_1db4787a_36_gemm_basic_BM64_BN64_BK32_S1_T128_cu_cc9b6e384cuda3std6ranges3__45__cpo4swapE[1];
.global .align 1 .b8 _ZN67_INTERNAL_1db4787a_36_gemm_basic_BM64_BN64_BK32_S1_T128_cu_cc9b6e384cuda3std6ranges3__45__cpo9iter_moveE[1];
.extern .shared .align 1024 .b8 buf_dyn_shmem[];

.visible .entry main_kernel(
	.param .u64 main_kernel_param_0,
	.param .u64 main_kernel_param_1,
	.param .u64 main_kernel_param_2
)
.maxntid 128, 1, 1
.minnctapersm 1
{
	.reg .pred 	%p<3>;
	.reg .b16 	%rs<97>;
	.reg .f32 	%f<289>;
	.reg .b32 	%r<89>;
	.reg .b64 	%rd<14>;


	ld.param.u64 	%rd1, [main_kernel_param_0];
	ld.param.u64 	%rd2, [main_kernel_param_1];
	mov.u32 	%r86, 0;
	mov.f32 	%f257, 0f00000000;
	mov.u32 	%r10, %tid.x;
	shl.b32 	%r11, %r10, 6;
	and.b32  	%r12, %r11, 4032;
	mov.u32 	%r13, buf_dyn_shmem;
	add.s32 	%r14, %r13, %r12;
	add.s32 	%r2, %r14, 4096;
	cvta.to.global.u64 	%rd4, %rd1;
	shl.b32 	%r25, %r10, 4;
	add.s32 	%r26, %r13, %r25;
	cvta.to.global.u64 	%rd7, %rd2;
	mov.f32 	%f258, %f257;
	mov.f32 	%f259, %f257;
	mov.f32 	%f260, %f257;
	mov.f32 	%f261, %f257;
	mov.f32 	%f262, %f257;
	mov.f32 	%f263, %f257;
	mov.f32 	%f264, %f257;
	mov.f32 	%f265, %f257;
	mov.f32 	%f266, %f257;
	mov.f32 	%f267, %f257;
	mov.f32 	%f268, %f257;
	mov.f32 	%f269, %f257;
	mov.f32 	%f270, %f257;
	mov.f32 	%f271, %f257;
	mov.f32 	%f272, %f257;
	mov.f32 	%f273, %f257;
	mov.f32 	%f274, %f257;
	mov.f32 	%f275, %f257;
	mov.f32 	%f276, %f257;
	mov.f32 	%f277, %f257;
	mov.f32 	%f278, %f257;
	mov.f32 	%f279, %f257;
	mov.f32 	%f280, %f257;
	mov.f32 	%f281, %f257;
	mov.f32 	%f282, %f257;
	mov.f32 	%f283, %f257;
	mov.f32 	%f284, %f257;
	mov.f32 	%f285, %f257;
	mov.f32 	%f286, %f257;
	mov.f32 	%f287, %f257;
	mov.f32 	%f288, %f257;

$L__BB0_1:
	mov.u32 	%r15, %ctaid.y;
	shl.b32 	%r16, %r15, 18;
	shl.b32 	%r17, %r10, 10;
	and.b32  	%r18, %r17, -4096;
	add.s32 	%r19, %r18, %r16;
	shl.b32 	%r20, %r10, 3;
	and.b32  	%r21, %r20, 24;
	or.b32  	%r22, %r19, %r21;
	shl.b32 	%r23, %r86, 5;
	add.s32 	%r24, %r22, %r23;
	mul.wide.s32 	%rd5, %r24, 2;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.nc.v4.u32 	{%r27, %r28, %r29, %r30}, [%rd6];
	st.shared.v4.u32 	[%r26], {%r27, %r28, %r29, %r30};
	ld.global.nc.v4.u32 	{%r35, %r36, %r37, %r38}, [%rd6+262144];
	mov.u32 	%r88, 2048;
	st.shared.v4.u32 	[%r26+2048], {%r35, %r36, %r37, %r38};
	mov.u32 	%r43, %ctaid.x;
	shl.b32 	%r44, %r43, 18;
	add.s32 	%r45, %r18, %r44;
	or.b32  	%r46, %r45, %r21;
	add.s32 	%r47, %r46, %r23;
	mul.wide.s32 	%rd8, %r47, 2;
	add.s64 	%rd9, %rd7, %rd8;
	ld.global.nc.v4.u32 	{%r48, %r49, %r50, %r51}, [%rd9];
	st.shared.v4.u32 	[%r26+4096], {%r48, %r49, %r50, %r51};
	ld.global.nc.v4.u32 	{%r56, %r57, %r58, %r59}, [%rd9+262144];
	st.shared.v4.u32 	[%r26+6144], {%r56, %r57, %r58, %r59};
	bar.sync 	0;
	mov.u32 	%r87, %r2;

$L__BB0_2:
	mov.u32 	%r81, buf_dyn_shmem;
	and.b32  	%r65, %r10, -64;
	add.s32 	%r67, %r81, %r65;
	add.s32 	%r68, %r67, %r88;
	ld.shared.u16 	%rs1, [%r68+-2048];
	// begin inline asm
	{  cvt.f32.f16 %f129, %rs1;}

	// end inline asm
	ld.shared.u16 	%rs2, [%r87];
	// begin inline asm
	{  cvt.f32.f16 %f130, %rs2;}

	// end inline asm
	fma.rn.f32 	%f288, %f129, %f130, %f288;
	ld.shared.u16 	%rs3, [%r68+-1920];
	// begin inline asm
	{  cvt.f32.f16 %f131, %rs3;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f132, %rs2;}

	// end inline asm
	fma.rn.f32 	%f287, %f131, %f132, %f287;
	ld.shared.u16 	%rs5, [%r68+-1792];
	// begin inline asm
	{  cvt.f32.f16 %f133, %rs5;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f134, %rs2;}

	// end inline asm
	fma.rn.f32 	%f286, %f133, %f134, %f286;
	ld.shared.u16 	%rs7, [%r68+-1664];
	// begin inline asm
	{  cvt.f32.f16 %f135, %rs7;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f136, %rs2;}

	// end inline asm
	fma.rn.f32 	%f285, %f135, %f136, %f285;
	ld.shared.u16 	%rs9, [%r68+-1536];
	// begin inline asm
	{  cvt.f32.f16 %f137, %rs9;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f138, %rs2;}

	// end inline asm
	fma.rn.f32 	%f284, %f137, %f138, %f284;
	ld.shared.u16 	%rs11, [%r68+-1408];
	// begin inline asm
	{  cvt.f32.f16 %f139, %rs11;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f140, %rs2;}

	// end inline asm
	fma.rn.f32 	%f283, %f139, %f140, %f283;
	ld.shared.u16 	%rs13, [%r68+-1280];
	// begin inline asm
	{  cvt.f32.f16 %f141, %rs13;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f142, %rs2;}

	// end inline asm
	fma.rn.f32 	%f282, %f141, %f142, %f282;
	ld.shared.u16 	%rs15, [%r68+-1152];
	// begin inline asm
	{  cvt.f32.f16 %f143, %rs15;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f144, %rs2;}

	// end inline asm
	fma.rn.f32 	%f281, %f143, %f144, %f281;
	ld.shared.u16 	%rs17, [%r68+-1024];
	// begin inline asm
	{  cvt.f32.f16 %f145, %rs17;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f146, %rs2;}

	// end inline asm
	fma.rn.f32 	%f280, %f145, %f146, %f280;
	ld.shared.u16 	%rs19, [%r68+-896];
	// begin inline asm
	{  cvt.f32.f16 %f147, %rs19;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f148, %rs2;}

	// end inline asm
	fma.rn.f32 	%f279, %f147, %f148, %f279;
	ld.shared.u16 	%rs21, [%r68+-768];
	// begin inline asm
	{  cvt.f32.f16 %f149, %rs21;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f150, %rs2;}

	// end inline asm
	fma.rn.f32 	%f278, %f149, %f150, %f278;
	ld.shared.u16 	%rs23, [%r68+-640];
	// begin inline asm
	{  cvt.f32.f16 %f151, %rs23;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f152, %rs2;}

	// end inline asm
	fma.rn.f32 	%f277, %f151, %f152, %f277;
	ld.shared.u16 	%rs25, [%r68+-512];
	// begin inline asm
	{  cvt.f32.f16 %f153, %rs25;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f154, %rs2;}

	// end inline asm
	fma.rn.f32 	%f276, %f153, %f154, %f276;
	ld.shared.u16 	%rs27, [%r68+-384];
	// begin inline asm
	{  cvt.f32.f16 %f155, %rs27;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f156, %rs2;}

	// end inline asm
	fma.rn.f32 	%f275, %f155, %f156, %f275;
	ld.shared.u16 	%rs29, [%r68+-256];
	// begin inline asm
	{  cvt.f32.f16 %f157, %rs29;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f158, %rs2;}

	// end inline asm
	fma.rn.f32 	%f274, %f157, %f158, %f274;
	ld.shared.u16 	%rs31, [%r68+-128];
	// begin inline asm
	{  cvt.f32.f16 %f159, %rs31;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f160, %rs2;}

	// end inline asm
	fma.rn.f32 	%f273, %f159, %f160, %f273;
	ld.shared.u16 	%rs33, [%r68];
	// begin inline asm
	{  cvt.f32.f16 %f161, %rs33;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f162, %rs2;}

	// end inline asm
	fma.rn.f32 	%f272, %f161, %f162, %f272;
	ld.shared.u16 	%rs35, [%r68+128];
	// begin inline asm
	{  cvt.f32.f16 %f163, %rs35;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f164, %rs2;}

	// end inline asm
	fma.rn.f32 	%f271, %f163, %f164, %f271;
	ld.shared.u16 	%rs37, [%r68+256];
	// begin inline asm
	{  cvt.f32.f16 %f165, %rs37;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f166, %rs2;}

	// end inline asm
	fma.rn.f32 	%f270, %f165, %f166, %f270;
	ld.shared.u16 	%rs39, [%r68+384];
	// begin inline asm
	{  cvt.f32.f16 %f167, %rs39;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f168, %rs2;}

	// end inline asm
	fma.rn.f32 	%f269, %f167, %f168, %f269;
	ld.shared.u16 	%rs41, [%r68+512];
	// begin inline asm
	{  cvt.f32.f16 %f169, %rs41;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f170, %rs2;}

	// end inline asm
	fma.rn.f32 	%f268, %f169, %f170, %f268;
	ld.shared.u16 	%rs43, [%r68+640];
	// begin inline asm
	{  cvt.f32.f16 %f171, %rs43;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f172, %rs2;}

	// end inline asm
	fma.rn.f32 	%f267, %f171, %f172, %f267;
	ld.shared.u16 	%rs45, [%r68+768];
	// begin inline asm
	{  cvt.f32.f16 %f173, %rs45;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f174, %rs2;}

	// end inline asm
	fma.rn.f32 	%f266, %f173, %f174, %f266;
	ld.shared.u16 	%rs47, [%r68+896];
	// begin inline asm
	{  cvt.f32.f16 %f175, %rs47;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f176, %rs2;}

	// end inline asm
	fma.rn.f32 	%f265, %f175, %f176, %f265;
	ld.shared.u16 	%rs49, [%r68+1024];
	// begin inline asm
	{  cvt.f32.f16 %f177, %rs49;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f178, %rs2;}

	// end inline asm
	fma.rn.f32 	%f264, %f177, %f178, %f264;
	ld.shared.u16 	%rs51, [%r68+1152];
	// begin inline asm
	{  cvt.f32.f16 %f179, %rs51;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f180, %rs2;}

	// end inline asm
	fma.rn.f32 	%f263, %f179, %f180, %f263;
	ld.shared.u16 	%rs53, [%r68+1280];
	// begin inline asm
	{  cvt.f32.f16 %f181, %rs53;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f182, %rs2;}

	// end inline asm
	fma.rn.f32 	%f262, %f181, %f182, %f262;
	ld.shared.u16 	%rs55, [%r68+1408];
	// begin inline asm
	{  cvt.f32.f16 %f183, %rs55;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f184, %rs2;}

	// end inline asm
	fma.rn.f32 	%f261, %f183, %f184, %f261;
	ld.shared.u16 	%rs57, [%r68+1536];
	// begin inline asm
	{  cvt.f32.f16 %f185, %rs57;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f186, %rs2;}

	// end inline asm
	fma.rn.f32 	%f260, %f185, %f186, %f260;
	ld.shared.u16 	%rs59, [%r68+1664];
	// begin inline asm
	{  cvt.f32.f16 %f187, %rs59;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f188, %rs2;}

	// end inline asm
	fma.rn.f32 	%f259, %f187, %f188, %f259;
	ld.shared.u16 	%rs61, [%r68+1792];
	// begin inline asm
	{  cvt.f32.f16 %f189, %rs61;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f190, %rs2;}

	// end inline asm
	fma.rn.f32 	%f258, %f189, %f190, %f258;
	ld.shared.u16 	%rs63, [%r68+1920];
	// begin inline asm
	{  cvt.f32.f16 %f191, %rs63;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f192, %rs2;}

	// end inline asm
	fma.rn.f32 	%f257, %f191, %f192, %f257;
	add.s32 	%r87, %r87, 2;
	add.s32 	%r88, %r88, 2;
	setp.ne.s32 	%p1, %r88, 2112;
	@%p1 bra 	$L__BB0_2;

	bar.sync 	0;
	add.s32 	%r86, %r86, 1;
	setp.lt.u32 	%p2, %r86, 128;
	@%p2 bra 	$L__BB0_1;

	ld.param.u64 	%rd13, [main_kernel_param_2];
	mov.u32 	%r85, %ctaid.y;
	shl.b32 	%r84, %r85, 18;
	mov.u32 	%r83, %ctaid.x;
	shl.b32 	%r82, %r10, 6;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs65, %f288;}

	// end inline asm
	and.b32  	%r71, %r82, -4096;
	shl.b32 	%r73, %r83, 6;
	add.s32 	%r76, %r73, %r84;
	and.b32  	%r77, %r10, 63;
	or.b32  	%r78, %r76, %r77;
	add.s32 	%r79, %r78, %r71;
	cvta.to.global.u64 	%rd10, %rd13;
	mul.wide.s32 	%rd11, %r79, 2;
	add.s64 	%rd12, %rd10, %rd11;
	st.global.u16 	[%rd12], %rs65;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs66, %f287;}

	// end inline asm
	st.global.u16 	[%rd12+16384], %rs66;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs67, %f286;}

	// end inline asm
	st.global.u16 	[%rd12+32768], %rs67;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs68, %f285;}

	// end inline asm
	st.global.u16 	[%rd12+49152], %rs68;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs69, %f284;}

	// end inline asm
	st.global.u16 	[%rd12+65536], %rs69;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs70, %f283;}

	// end inline asm
	st.global.u16 	[%rd12+81920], %rs70;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs71, %f282;}

	// end inline asm
	st.global.u16 	[%rd12+98304], %rs71;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs72, %f281;}

	// end inline asm
	st.global.u16 	[%rd12+114688], %rs72;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs73, %f280;}

	// end inline asm
	st.global.u16 	[%rd12+131072], %rs73;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs74, %f279;}

	// end inline asm
	st.global.u16 	[%rd12+147456], %rs74;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs75, %f278;}

	// end inline asm
	st.global.u16 	[%rd12+163840], %rs75;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs76, %f277;}

	// end inline asm
	st.global.u16 	[%rd12+180224], %rs76;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs77, %f276;}

	// end inline asm
	st.global.u16 	[%rd12+196608], %rs77;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs78, %f275;}

	// end inline asm
	st.global.u16 	[%rd12+212992], %rs78;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs79, %f274;}

	// end inline asm
	st.global.u16 	[%rd12+229376], %rs79;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs80, %f273;}

	// end inline asm
	st.global.u16 	[%rd12+245760], %rs80;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs81, %f272;}

	// end inline asm
	st.global.u16 	[%rd12+262144], %rs81;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs82, %f271;}

	// end inline asm
	st.global.u16 	[%rd12+278528], %rs82;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs83, %f270;}

	// end inline asm
	st.global.u16 	[%rd12+294912], %rs83;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs84, %f269;}

	// end inline asm
	st.global.u16 	[%rd12+311296], %rs84;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs85, %f268;}

	// end inline asm
	st.global.u16 	[%rd12+327680], %rs85;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs86, %f267;}

	// end inline asm
	st.global.u16 	[%rd12+344064], %rs86;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs87, %f266;}

	// end inline asm
	st.global.u16 	[%rd12+360448], %rs87;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs88, %f265;}

	// end inline asm
	st.global.u16 	[%rd12+376832], %rs88;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs89, %f264;}

	// end inline asm
	st.global.u16 	[%rd12+393216], %rs89;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs90, %f263;}

	// end inline asm
	st.global.u16 	[%rd12+409600], %rs90;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs91, %f262;}

	// end inline asm
	st.global.u16 	[%rd12+425984], %rs91;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs92, %f261;}

	// end inline asm
	st.global.u16 	[%rd12+442368], %rs92;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs93, %f260;}

	// end inline asm
	st.global.u16 	[%rd12+458752], %rs93;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs94, %f259;}

	// end inline asm
	st.global.u16 	[%rd12+475136], %rs94;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs95, %f258;}

	// end inline asm
	st.global.u16 	[%rd12+491520], %rs95;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs96, %f257;}

	// end inline asm
	st.global.u16 	[%rd12+507904], %rs96;
	ret;

}

