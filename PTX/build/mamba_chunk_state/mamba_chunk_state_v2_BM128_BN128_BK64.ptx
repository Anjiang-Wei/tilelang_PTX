//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-35583870
// Cuda compilation tools, release 12.8, V12.8.93
// Based on NVVM 7.0.1
//

.version 8.7
.target sm_80
.address_size 64

	// .globl	main_kernel
.global .align 1 .b8 _ZN71_INTERNAL_8be48b79_40_mamba_chunk_state_v2_BM128_BN128_BK64_cu_cc9b6e384cute7productE[1];
.global .align 1 .b8 _ZN71_INTERNAL_8be48b79_40_mamba_chunk_state_v2_BM128_BN128_BK64_cu_cc9b6e384cute1_E[1];
.global .align 1 .b8 _ZN71_INTERNAL_8be48b79_40_mamba_chunk_state_v2_BM128_BN128_BK64_cu_cc9b6e384cuda3std3__45__cpo5beginE[1];
.global .align 1 .b8 _ZN71_INTERNAL_8be48b79_40_mamba_chunk_state_v2_BM128_BN128_BK64_cu_cc9b6e384cuda3std3__45__cpo3endE[1];
.global .align 1 .b8 _ZN71_INTERNAL_8be48b79_40_mamba_chunk_state_v2_BM128_BN128_BK64_cu_cc9b6e384cuda3std3__45__cpo6cbeginE[1];
.global .align 1 .b8 _ZN71_INTERNAL_8be48b79_40_mamba_chunk_state_v2_BM128_BN128_BK64_cu_cc9b6e384cuda3std3__45__cpo4cendE[1];
.global .align 1 .b8 _ZN71_INTERNAL_8be48b79_40_mamba_chunk_state_v2_BM128_BN128_BK64_cu_cc9b6e384cuda3std3__419piecewise_constructE[1];
.global .align 1 .b8 _ZN71_INTERNAL_8be48b79_40_mamba_chunk_state_v2_BM128_BN128_BK64_cu_cc9b6e384cuda3std3__48in_placeE[1];
.global .align 1 .b8 _ZN71_INTERNAL_8be48b79_40_mamba_chunk_state_v2_BM128_BN128_BK64_cu_cc9b6e384cuda3std6ranges3__45__cpo4swapE[1];
.global .align 1 .b8 _ZN71_INTERNAL_8be48b79_40_mamba_chunk_state_v2_BM128_BN128_BK64_cu_cc9b6e384cuda3std6ranges3__45__cpo9iter_moveE[1];
.extern .shared .align 1024 .b8 buf_dyn_shmem[];

.visible .entry main_kernel(
	.param .u64 main_kernel_param_0,
	.param .u64 main_kernel_param_1,
	.param .u64 main_kernel_param_2
)
.maxntid 256, 1, 1
.minnctapersm 1
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<193>;
	.reg .f32 	%f<961>;
	.reg .b32 	%r<719>;
	.reg .b64 	%rd<15>;


	ld.param.u64 	%rd4, [main_kernel_param_0];
	ld.param.u64 	%rd5, [main_kernel_param_1];
	cvta.to.global.u64 	%rd1, %rd5;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r34, %tid.x;
	shr.s32 	%r35, %r34, 3;
	shl.b32 	%r36, %r35, 6;
	and.b32  	%r1, %r34, 32;
	shr.u32 	%r37, %r1, 5;
	and.b32  	%r38, %r34, 4;
	shr.u32 	%r39, %r38, 2;
	add.s32 	%r40, %r37, %r39;
	shl.b32 	%r41, %r40, 5;
	and.b32  	%r42, %r41, 32;
	shr.u32 	%r43, %r34, 4;
	and.b32  	%r44, %r34, 2;
	shr.u32 	%r45, %r44, 1;
	add.s32 	%r46, %r45, %r43;
	shl.b32 	%r47, %r46, 4;
	and.b32  	%r48, %r47, 16;
	and.b32  	%r49, %r34, 8;
	shr.u32 	%r50, %r49, 3;
	add.s32 	%r51, %r50, %r34;
	shl.b32 	%r52, %r51, 3;
	and.b32  	%r53, %r52, 8;
	or.b32  	%r54, %r42, %r36;
	or.b32  	%r55, %r54, %r48;
	or.b32  	%r56, %r55, %r53;
	mov.u32 	%r57, %ctaid.y;
	shl.b32 	%r2, %r57, 17;
	shl.b32 	%r58, %r35, 10;
	shl.b32 	%r59, %r34, 3;
	and.b32  	%r60, %r59, 56;
	add.s32 	%r61, %r58, %r2;
	or.b32  	%r3, %r61, %r60;
	mov.u32 	%r4, %ctaid.x;
	shl.b32 	%r62, %r4, 17;
	add.s32 	%r63, %r58, %r62;
	or.b32  	%r5, %r63, %r60;
	shr.s32 	%r64, %r34, 31;
	shr.u32 	%r65, %r64, 28;
	add.s32 	%r66, %r34, %r65;
	and.b32  	%r67, %r66, -16;
	sub.s32 	%r68, %r34, %r67;
	shr.s32 	%r69, %r68, 31;
	shr.u32 	%r70, %r69, 29;
	add.s32 	%r71, %r68, %r70;
	and.b32  	%r72, %r71, -8;
	sub.s32 	%r73, %r68, %r72;
	shr.u32 	%r74, %r66, 31;
	shr.s32 	%r75, %r66, 4;
	add.s32 	%r76, %r75, %r74;
	and.b32  	%r77, %r76, -2;
	sub.s32 	%r78, %r75, %r77;
	shl.b32 	%r79, %r73, 6;
	and.b32  	%r80, %r79, 448;
	shl.b32 	%r81, %r78, 3;
	and.b32  	%r82, %r81, 8;
	or.b32  	%r83, %r80, %r82;
	shl.b32 	%r84, %r71, 6;
	and.b32  	%r85, %r84, 2147483136;
	shr.u32 	%r86, %r64, 27;
	add.s32 	%r87, %r34, %r86;
	shr.u32 	%r88, %r87, 31;
	shr.s32 	%r89, %r87, 5;
	add.s32 	%r90, %r89, %r88;
	and.b32  	%r91, %r90, 2097150;
	sub.s32 	%r92, %r89, %r91;
	shl.b32 	%r93, %r92, 10;
	and.b32  	%r94, %r73, 2;
	setp.eq.s32 	%p1, %r94, 0;
	and.b32  	%r95, %r73, 4;
	setp.eq.s32 	%p2, %r95, 0;
	shr.u32 	%r96, %r80, 3;
	xor.b32  	%r97, %r83, %r96;
	shr.u32 	%r98, %r64, 29;
	add.s32 	%r99, %r34, %r98;
	and.b32  	%r100, %r99, -8;
	sub.s32 	%r101, %r34, %r100;
	mov.u32 	%r718, 0;
	shl.b32 	%r102, %r101, 6;
	and.b32  	%r103, %r102, 448;
	and.b32  	%r104, %r99, 8;
	or.b32  	%r105, %r104, %r103;
	shl.b32 	%r106, %r78, 11;
	shr.u32 	%r107, %r64, 26;
	add.s32 	%r108, %r34, %r107;
	shl.b32 	%r109, %r108, 3;
	and.b32  	%r110, %r109, 2147483136;
	and.b32  	%r111, %r101, 2;
	setp.eq.s32 	%p3, %r111, 0;
	and.b32  	%r112, %r101, 4;
	setp.eq.s32 	%p4, %r112, 0;
	shr.u32 	%r113, %r103, 3;
	xor.b32  	%r114, %r105, %r113;
	shl.b32 	%r115, %r56, 1;
	mov.u32 	%r116, buf_dyn_shmem;
	add.s32 	%r6, %r116, %r115;
	add.s32 	%r117, %r85, %r93;
	or.b32  	%r118, %r117, %r97;
	shl.b32 	%r119, %r118, 1;
	add.s32 	%r7, %r116, %r119;
	add.s32 	%r8, %r7, 4096;
	add.s32 	%r9, %r7, 8192;
	add.s32 	%r10, %r7, 12288;
	add.s32 	%r120, %r106, %r110;
	or.b32  	%r121, %r120, %r114;
	shl.b32 	%r122, %r121, 1;
	add.s32 	%r123, %r116, %r122;
	add.s32 	%r11, %r123, 16384;
	add.s32 	%r12, %r123, 24576;
	selp.b32 	%r124, 32, -32, %p1;
	add.s32 	%r13, %r7, %r124;
	add.s32 	%r14, %r13, 4096;
	add.s32 	%r15, %r13, 8192;
	add.s32 	%r16, %r13, 12288;
	selp.b32 	%r125, 32, -32, %p3;
	add.s32 	%r17, %r11, %r125;
	add.s32 	%r18, %r17, 8192;
	selp.b32 	%r126, 64, -64, %p2;
	add.s32 	%r19, %r7, %r126;
	add.s32 	%r20, %r19, 4096;
	add.s32 	%r21, %r19, 8192;
	add.s32 	%r22, %r19, 12288;
	selp.b32 	%r127, 64, -64, %p4;
	add.s32 	%r23, %r11, %r127;
	add.s32 	%r24, %r23, 8192;
	add.s32 	%r25, %r19, %r124;
	add.s32 	%r26, %r25, 4096;
	add.s32 	%r27, %r25, 8192;
	add.s32 	%r28, %r25, 12288;
	add.s32 	%r29, %r23, %r125;
	add.s32 	%r30, %r29, 8192;
	mov.f32 	%f897, 0f00000000;
	mov.f32 	%f898, %f897;
	mov.f32 	%f899, %f897;
	mov.f32 	%f900, %f897;
	mov.f32 	%f901, %f897;
	mov.f32 	%f902, %f897;
	mov.f32 	%f903, %f897;
	mov.f32 	%f904, %f897;
	mov.f32 	%f905, %f897;
	mov.f32 	%f906, %f897;
	mov.f32 	%f907, %f897;
	mov.f32 	%f908, %f897;
	mov.f32 	%f909, %f897;
	mov.f32 	%f910, %f897;
	mov.f32 	%f911, %f897;
	mov.f32 	%f912, %f897;
	mov.f32 	%f913, %f897;
	mov.f32 	%f914, %f897;
	mov.f32 	%f915, %f897;
	mov.f32 	%f916, %f897;
	mov.f32 	%f917, %f897;
	mov.f32 	%f918, %f897;
	mov.f32 	%f919, %f897;
	mov.f32 	%f920, %f897;
	mov.f32 	%f921, %f897;
	mov.f32 	%f922, %f897;
	mov.f32 	%f923, %f897;
	mov.f32 	%f924, %f897;
	mov.f32 	%f925, %f897;
	mov.f32 	%f926, %f897;
	mov.f32 	%f927, %f897;
	mov.f32 	%f928, %f897;
	mov.f32 	%f929, %f897;
	mov.f32 	%f930, %f897;
	mov.f32 	%f931, %f897;
	mov.f32 	%f932, %f897;
	mov.f32 	%f933, %f897;
	mov.f32 	%f934, %f897;
	mov.f32 	%f935, %f897;
	mov.f32 	%f936, %f897;
	mov.f32 	%f937, %f897;
	mov.f32 	%f938, %f897;
	mov.f32 	%f939, %f897;
	mov.f32 	%f940, %f897;
	mov.f32 	%f941, %f897;
	mov.f32 	%f942, %f897;
	mov.f32 	%f943, %f897;
	mov.f32 	%f944, %f897;
	mov.f32 	%f945, %f897;
	mov.f32 	%f946, %f897;
	mov.f32 	%f947, %f897;
	mov.f32 	%f948, %f897;
	mov.f32 	%f949, %f897;
	mov.f32 	%f950, %f897;
	mov.f32 	%f951, %f897;
	mov.f32 	%f952, %f897;
	mov.f32 	%f953, %f897;
	mov.f32 	%f954, %f897;
	mov.f32 	%f955, %f897;
	mov.f32 	%f956, %f897;
	mov.f32 	%f957, %f897;
	mov.f32 	%f958, %f897;
	mov.f32 	%f959, %f897;
	mov.f32 	%f960, %f897;

$L__BB0_1:
	bar.sync 	0;
	shl.b32 	%r632, %r718, 6;
	add.s32 	%r633, %r3, %r632;
	mul.wide.s32 	%rd7, %r633, 2;
	add.s64 	%rd8, %rd2, %rd7;
	ld.global.nc.v4.u32 	{%r634, %r635, %r636, %r637}, [%rd8];
	st.shared.v4.u32 	[%r6], {%r634, %r635, %r636, %r637};
	ld.global.nc.v4.u32 	{%r642, %r643, %r644, %r645}, [%rd8+65536];
	st.shared.v4.u32 	[%r6+4096], {%r642, %r643, %r644, %r645};
	ld.global.nc.v4.u32 	{%r650, %r651, %r652, %r653}, [%rd8+131072];
	st.shared.v4.u32 	[%r6+8192], {%r650, %r651, %r652, %r653};
	ld.global.nc.v4.u32 	{%r658, %r659, %r660, %r661}, [%rd8+196608];
	st.shared.v4.u32 	[%r6+12288], {%r658, %r659, %r660, %r661};
	add.s32 	%r666, %r5, %r632;
	mul.wide.s32 	%rd9, %r666, 2;
	add.s64 	%rd10, %rd1, %rd9;
	ld.global.nc.v4.u32 	{%r667, %r668, %r669, %r670}, [%rd10];
	st.shared.v4.u32 	[%r6+16384], {%r667, %r668, %r669, %r670};
	ld.global.nc.v4.u32 	{%r675, %r676, %r677, %r678}, [%rd10+65536];
	st.shared.v4.u32 	[%r6+20480], {%r675, %r676, %r677, %r678};
	ld.global.nc.v4.u32 	{%r683, %r684, %r685, %r686}, [%rd10+131072];
	st.shared.v4.u32 	[%r6+24576], {%r683, %r684, %r685, %r686};
	ld.global.nc.v4.u32 	{%r691, %r692, %r693, %r694}, [%rd10+196608];
	st.shared.v4.u32 	[%r6+28672], {%r691, %r692, %r693, %r694};
	bar.sync 	0;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r128, %r129, %r130, %r131}, [%r7];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r133, %r134, %r135, %r136}, [%r8];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r138, %r139, %r140, %r141}, [%r9];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r143, %r144, %r145, %r146}, [%r10];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r148, %r149, %r150, %r151}, [%r11];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r153, %r154, %r155, %r156}, [%r12];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f193,  %f194,  %f195,  %f196},{%r128,  %r129,  %r130,  %r131},{%r148,  %r149},{%f960, %f959, %f958, %f957};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f201,  %f202,  %f203,  %f204},{%r133,  %r134,  %r135,  %r136},{%r148,  %r149},{%f956, %f955, %f954, %f953};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f209,  %f210,  %f211,  %f212},{%r138,  %r139,  %r140,  %r141},{%r148,  %r149},{%f952, %f951, %f950, %f949};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f217,  %f218,  %f219,  %f220},{%r143,  %r144,  %r145,  %r146},{%r148,  %r149},{%f948, %f947, %f946, %f945};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f225,  %f226,  %f227,  %f228},{%r143,  %r144,  %r145,  %r146},{%r150,  %r151},{%f932, %f931, %f930, %f929};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f233,  %f234,  %f235,  %f236},{%r138,  %r139,  %r140,  %r141},{%r150,  %r151},{%f936, %f935, %f934, %f933};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f241,  %f242,  %f243,  %f244},{%r133,  %r134,  %r135,  %r136},{%r150,  %r151},{%f940, %f939, %f938, %f937};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f249,  %f250,  %f251,  %f252},{%r128,  %r129,  %r130,  %r131},{%r150,  %r151},{%f944, %f943, %f942, %f941};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f257,  %f258,  %f259,  %f260},{%r128,  %r129,  %r130,  %r131},{%r153,  %r154},{%f928, %f927, %f926, %f925};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f265,  %f266,  %f267,  %f268},{%r133,  %r134,  %r135,  %r136},{%r153,  %r154},{%f924, %f923, %f922, %f921};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f273,  %f274,  %f275,  %f276},{%r138,  %r139,  %r140,  %r141},{%r153,  %r154},{%f920, %f919, %f918, %f917};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f281,  %f282,  %f283,  %f284},{%r143,  %r144,  %r145,  %r146},{%r153,  %r154},{%f916, %f915, %f914, %f913};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f289,  %f290,  %f291,  %f292},{%r143,  %r144,  %r145,  %r146},{%r155,  %r156},{%f900, %f899, %f898, %f897};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f297,  %f298,  %f299,  %f300},{%r138,  %r139,  %r140,  %r141},{%r155,  %r156},{%f904, %f903, %f902, %f901};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f305,  %f306,  %f307,  %f308},{%r133,  %r134,  %r135,  %r136},{%r155,  %r156},{%f908, %f907, %f906, %f905};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f313,  %f314,  %f315,  %f316},{%r128,  %r129,  %r130,  %r131},{%r155,  %r156},{%f912, %f911, %f910, %f909};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r254, %r255, %r256, %r257}, [%r13];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r259, %r260, %r261, %r262}, [%r14];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r264, %r265, %r266, %r267}, [%r15];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r269, %r270, %r271, %r272}, [%r16];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r274, %r275, %r276, %r277}, [%r17];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r279, %r280, %r281, %r282}, [%r18];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f321,  %f322,  %f323,  %f324},{%r254,  %r255,  %r256,  %r257},{%r274,  %r275},{%f193, %f194, %f195, %f196};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f329,  %f330,  %f331,  %f332},{%r259,  %r260,  %r261,  %r262},{%r274,  %r275},{%f201, %f202, %f203, %f204};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f337,  %f338,  %f339,  %f340},{%r264,  %r265,  %r266,  %r267},{%r274,  %r275},{%f209, %f210, %f211, %f212};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f345,  %f346,  %f347,  %f348},{%r269,  %r270,  %r271,  %r272},{%r274,  %r275},{%f217, %f218, %f219, %f220};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f353,  %f354,  %f355,  %f356},{%r269,  %r270,  %r271,  %r272},{%r276,  %r277},{%f225, %f226, %f227, %f228};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f361,  %f362,  %f363,  %f364},{%r264,  %r265,  %r266,  %r267},{%r276,  %r277},{%f233, %f234, %f235, %f236};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f369,  %f370,  %f371,  %f372},{%r259,  %r260,  %r261,  %r262},{%r276,  %r277},{%f241, %f242, %f243, %f244};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f377,  %f378,  %f379,  %f380},{%r254,  %r255,  %r256,  %r257},{%r276,  %r277},{%f249, %f250, %f251, %f252};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f385,  %f386,  %f387,  %f388},{%r254,  %r255,  %r256,  %r257},{%r279,  %r280},{%f257, %f258, %f259, %f260};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f393,  %f394,  %f395,  %f396},{%r259,  %r260,  %r261,  %r262},{%r279,  %r280},{%f265, %f266, %f267, %f268};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f401,  %f402,  %f403,  %f404},{%r264,  %r265,  %r266,  %r267},{%r279,  %r280},{%f273, %f274, %f275, %f276};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f409,  %f410,  %f411,  %f412},{%r269,  %r270,  %r271,  %r272},{%r279,  %r280},{%f281, %f282, %f283, %f284};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f417,  %f418,  %f419,  %f420},{%r269,  %r270,  %r271,  %r272},{%r281,  %r282},{%f289, %f290, %f291, %f292};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f425,  %f426,  %f427,  %f428},{%r264,  %r265,  %r266,  %r267},{%r281,  %r282},{%f297, %f298, %f299, %f300};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f433,  %f434,  %f435,  %f436},{%r259,  %r260,  %r261,  %r262},{%r281,  %r282},{%f305, %f306, %f307, %f308};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f441,  %f442,  %f443,  %f444},{%r254,  %r255,  %r256,  %r257},{%r281,  %r282},{%f313, %f314, %f315, %f316};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r380, %r381, %r382, %r383}, [%r19];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r385, %r386, %r387, %r388}, [%r20];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r390, %r391, %r392, %r393}, [%r21];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r395, %r396, %r397, %r398}, [%r22];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r400, %r401, %r402, %r403}, [%r23];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r405, %r406, %r407, %r408}, [%r24];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f449,  %f450,  %f451,  %f452},{%r380,  %r381,  %r382,  %r383},{%r400,  %r401},{%f321, %f322, %f323, %f324};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f457,  %f458,  %f459,  %f460},{%r385,  %r386,  %r387,  %r388},{%r400,  %r401},{%f329, %f330, %f331, %f332};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f465,  %f466,  %f467,  %f468},{%r390,  %r391,  %r392,  %r393},{%r400,  %r401},{%f337, %f338, %f339, %f340};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f473,  %f474,  %f475,  %f476},{%r395,  %r396,  %r397,  %r398},{%r400,  %r401},{%f345, %f346, %f347, %f348};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f481,  %f482,  %f483,  %f484},{%r395,  %r396,  %r397,  %r398},{%r402,  %r403},{%f353, %f354, %f355, %f356};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f489,  %f490,  %f491,  %f492},{%r390,  %r391,  %r392,  %r393},{%r402,  %r403},{%f361, %f362, %f363, %f364};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f497,  %f498,  %f499,  %f500},{%r385,  %r386,  %r387,  %r388},{%r402,  %r403},{%f369, %f370, %f371, %f372};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f505,  %f506,  %f507,  %f508},{%r380,  %r381,  %r382,  %r383},{%r402,  %r403},{%f377, %f378, %f379, %f380};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f513,  %f514,  %f515,  %f516},{%r380,  %r381,  %r382,  %r383},{%r405,  %r406},{%f385, %f386, %f387, %f388};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f521,  %f522,  %f523,  %f524},{%r385,  %r386,  %r387,  %r388},{%r405,  %r406},{%f393, %f394, %f395, %f396};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f529,  %f530,  %f531,  %f532},{%r390,  %r391,  %r392,  %r393},{%r405,  %r406},{%f401, %f402, %f403, %f404};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f537,  %f538,  %f539,  %f540},{%r395,  %r396,  %r397,  %r398},{%r405,  %r406},{%f409, %f410, %f411, %f412};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f545,  %f546,  %f547,  %f548},{%r395,  %r396,  %r397,  %r398},{%r407,  %r408},{%f417, %f418, %f419, %f420};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f553,  %f554,  %f555,  %f556},{%r390,  %r391,  %r392,  %r393},{%r407,  %r408},{%f425, %f426, %f427, %f428};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f561,  %f562,  %f563,  %f564},{%r385,  %r386,  %r387,  %r388},{%r407,  %r408},{%f433, %f434, %f435, %f436};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f569,  %f570,  %f571,  %f572},{%r380,  %r381,  %r382,  %r383},{%r407,  %r408},{%f441, %f442, %f443, %f444};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r506, %r507, %r508, %r509}, [%r25];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r511, %r512, %r513, %r514}, [%r26];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r516, %r517, %r518, %r519}, [%r27];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r521, %r522, %r523, %r524}, [%r28];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r526, %r527, %r528, %r529}, [%r29];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r531, %r532, %r533, %r534}, [%r30];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f960,  %f959,  %f958,  %f957},{%r506,  %r507,  %r508,  %r509},{%r526,  %r527},{%f449, %f450, %f451, %f452};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f956,  %f955,  %f954,  %f953},{%r511,  %r512,  %r513,  %r514},{%r526,  %r527},{%f457, %f458, %f459, %f460};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f952,  %f951,  %f950,  %f949},{%r516,  %r517,  %r518,  %r519},{%r526,  %r527},{%f465, %f466, %f467, %f468};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f948,  %f947,  %f946,  %f945},{%r521,  %r522,  %r523,  %r524},{%r526,  %r527},{%f473, %f474, %f475, %f476};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f932,  %f931,  %f930,  %f929},{%r521,  %r522,  %r523,  %r524},{%r528,  %r529},{%f481, %f482, %f483, %f484};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f936,  %f935,  %f934,  %f933},{%r516,  %r517,  %r518,  %r519},{%r528,  %r529},{%f489, %f490, %f491, %f492};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f940,  %f939,  %f938,  %f937},{%r511,  %r512,  %r513,  %r514},{%r528,  %r529},{%f497, %f498, %f499, %f500};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f944,  %f943,  %f942,  %f941},{%r506,  %r507,  %r508,  %r509},{%r528,  %r529},{%f505, %f506, %f507, %f508};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f928,  %f927,  %f926,  %f925},{%r506,  %r507,  %r508,  %r509},{%r531,  %r532},{%f513, %f514, %f515, %f516};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f924,  %f923,  %f922,  %f921},{%r511,  %r512,  %r513,  %r514},{%r531,  %r532},{%f521, %f522, %f523, %f524};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f920,  %f919,  %f918,  %f917},{%r516,  %r517,  %r518,  %r519},{%r531,  %r532},{%f529, %f530, %f531, %f532};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f916,  %f915,  %f914,  %f913},{%r521,  %r522,  %r523,  %r524},{%r531,  %r532},{%f537, %f538, %f539, %f540};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f900,  %f899,  %f898,  %f897},{%r521,  %r522,  %r523,  %r524},{%r533,  %r534},{%f545, %f546, %f547, %f548};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f904,  %f903,  %f902,  %f901},{%r516,  %r517,  %r518,  %r519},{%r533,  %r534},{%f553, %f554, %f555, %f556};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f908,  %f907,  %f906,  %f905},{%r511,  %r512,  %r513,  %r514},{%r533,  %r534},{%f561, %f562, %f563, %f564};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f912,  %f911,  %f910,  %f909},{%r506,  %r507,  %r508,  %r509},{%r533,  %r534},{%f569, %f570, %f571, %f572};

	// end inline asm
	add.s32 	%r718, %r718, 1;
	setp.ne.s32 	%p5, %r718, 16;
	@%p5 bra 	$L__BB0_1;

	mov.u32 	%r717, %tid.x;
	ld.param.u64 	%rd14, [main_kernel_param_2];
	cvta.to.global.u64 	%rd13, %rd14;
	and.b32  	%r716, %r717, 32;
	mov.u32 	%r715, %ctaid.y;
	shl.b32 	%r714, %r715, 17;
	mov.u32 	%r713, %ctaid.x;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1, %f960;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f706, %rs1;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs4, %f959;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f709, %rs4;}

	// end inline asm
	shl.b32 	%r700, %r717, 8;
	and.b32  	%r701, %r700, 7168;
	shr.s32 	%r702, %r717, 6;
	shl.b32 	%r703, %r702, 3;
	shl.b32 	%r704, %r717, 1;
	and.b32  	%r705, %r704, 6;
	shl.b32 	%r706, %r713, 7;
	add.s32 	%r707, %r706, %r714;
	shl.b32 	%r708, %r716, 9;
	add.s32 	%r709, %r707, %r708;
	add.s32 	%r710, %r709, %r703;
	add.s32 	%r711, %r710, %r705;
	add.s32 	%r712, %r711, %r701;
	mul.wide.s32 	%rd11, %r712, 2;
	add.s64 	%rd12, %rd13, %rd11;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs6, %f709;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs3, %f706;}

	// end inline asm
	st.global.v2.u16 	[%rd12], {%rs3, %rs6};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs7, %f958;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f712, %rs7;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs10, %f957;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f715, %rs10;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs12, %f715;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs9, %f712;}

	// end inline asm
	st.global.v2.u16 	[%rd12+16384], {%rs9, %rs12};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs13, %f956;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f718, %rs13;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs16, %f955;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f721, %rs16;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs18, %f721;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs15, %f718;}

	// end inline asm
	st.global.v2.u16 	[%rd12+65536], {%rs15, %rs18};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs19, %f954;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f724, %rs19;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs22, %f953;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f727, %rs22;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs24, %f727;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs21, %f724;}

	// end inline asm
	st.global.v2.u16 	[%rd12+81920], {%rs21, %rs24};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs25, %f952;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f730, %rs25;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs28, %f951;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f733, %rs28;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs30, %f733;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs27, %f730;}

	// end inline asm
	st.global.v2.u16 	[%rd12+131072], {%rs27, %rs30};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs31, %f950;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f736, %rs31;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs34, %f949;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f739, %rs34;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs36, %f739;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs33, %f736;}

	// end inline asm
	st.global.v2.u16 	[%rd12+147456], {%rs33, %rs36};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs37, %f948;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f742, %rs37;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs40, %f947;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f745, %rs40;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs42, %f745;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs39, %f742;}

	// end inline asm
	st.global.v2.u16 	[%rd12+196608], {%rs39, %rs42};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs43, %f946;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f748, %rs43;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs46, %f945;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f751, %rs46;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs48, %f751;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs45, %f748;}

	// end inline asm
	st.global.v2.u16 	[%rd12+212992], {%rs45, %rs48};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs49, %f944;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f754, %rs49;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs52, %f943;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f757, %rs52;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs54, %f757;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs51, %f754;}

	// end inline asm
	st.global.v2.u16 	[%rd12+64], {%rs51, %rs54};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs55, %f942;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f760, %rs55;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs58, %f941;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f763, %rs58;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs60, %f763;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs57, %f760;}

	// end inline asm
	st.global.v2.u16 	[%rd12+16448], {%rs57, %rs60};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs61, %f940;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f766, %rs61;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs64, %f939;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f769, %rs64;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs66, %f769;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs63, %f766;}

	// end inline asm
	st.global.v2.u16 	[%rd12+65600], {%rs63, %rs66};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs67, %f938;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f772, %rs67;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs70, %f937;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f775, %rs70;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs72, %f775;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs69, %f772;}

	// end inline asm
	st.global.v2.u16 	[%rd12+81984], {%rs69, %rs72};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs73, %f936;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f778, %rs73;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs76, %f935;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f781, %rs76;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs78, %f781;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs75, %f778;}

	// end inline asm
	st.global.v2.u16 	[%rd12+131136], {%rs75, %rs78};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs79, %f934;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f784, %rs79;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs82, %f933;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f787, %rs82;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs84, %f787;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs81, %f784;}

	// end inline asm
	st.global.v2.u16 	[%rd12+147520], {%rs81, %rs84};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs85, %f932;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f790, %rs85;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs88, %f931;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f793, %rs88;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs90, %f793;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs87, %f790;}

	// end inline asm
	st.global.v2.u16 	[%rd12+196672], {%rs87, %rs90};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs91, %f930;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f796, %rs91;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs94, %f929;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f799, %rs94;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs96, %f799;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs93, %f796;}

	// end inline asm
	st.global.v2.u16 	[%rd12+213056], {%rs93, %rs96};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs97, %f928;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f802, %rs97;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs100, %f927;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f805, %rs100;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs102, %f805;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs99, %f802;}

	// end inline asm
	st.global.v2.u16 	[%rd12+128], {%rs99, %rs102};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs103, %f926;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f808, %rs103;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs106, %f925;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f811, %rs106;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs108, %f811;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs105, %f808;}

	// end inline asm
	st.global.v2.u16 	[%rd12+16512], {%rs105, %rs108};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs109, %f924;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f814, %rs109;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs112, %f923;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f817, %rs112;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs114, %f817;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs111, %f814;}

	// end inline asm
	st.global.v2.u16 	[%rd12+65664], {%rs111, %rs114};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs115, %f922;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f820, %rs115;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs118, %f921;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f823, %rs118;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs120, %f823;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs117, %f820;}

	// end inline asm
	st.global.v2.u16 	[%rd12+82048], {%rs117, %rs120};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs121, %f920;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f826, %rs121;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs124, %f919;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f829, %rs124;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs126, %f829;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs123, %f826;}

	// end inline asm
	st.global.v2.u16 	[%rd12+131200], {%rs123, %rs126};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs127, %f918;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f832, %rs127;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs130, %f917;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f835, %rs130;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs132, %f835;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs129, %f832;}

	// end inline asm
	st.global.v2.u16 	[%rd12+147584], {%rs129, %rs132};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs133, %f916;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f838, %rs133;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs136, %f915;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f841, %rs136;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs138, %f841;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs135, %f838;}

	// end inline asm
	st.global.v2.u16 	[%rd12+196736], {%rs135, %rs138};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs139, %f914;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f844, %rs139;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs142, %f913;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f847, %rs142;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs144, %f847;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs141, %f844;}

	// end inline asm
	st.global.v2.u16 	[%rd12+213120], {%rs141, %rs144};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs145, %f912;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f850, %rs145;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs148, %f911;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f853, %rs148;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs150, %f853;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs147, %f850;}

	// end inline asm
	st.global.v2.u16 	[%rd12+192], {%rs147, %rs150};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs151, %f910;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f856, %rs151;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs154, %f909;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f859, %rs154;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs156, %f859;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs153, %f856;}

	// end inline asm
	st.global.v2.u16 	[%rd12+16576], {%rs153, %rs156};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs157, %f908;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f862, %rs157;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs160, %f907;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f865, %rs160;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs162, %f865;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs159, %f862;}

	// end inline asm
	st.global.v2.u16 	[%rd12+65728], {%rs159, %rs162};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs163, %f906;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f868, %rs163;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs166, %f905;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f871, %rs166;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs168, %f871;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs165, %f868;}

	// end inline asm
	st.global.v2.u16 	[%rd12+82112], {%rs165, %rs168};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs169, %f904;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f874, %rs169;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs172, %f903;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f877, %rs172;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs174, %f877;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs171, %f874;}

	// end inline asm
	st.global.v2.u16 	[%rd12+131264], {%rs171, %rs174};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs175, %f902;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f880, %rs175;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs178, %f901;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f883, %rs178;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs180, %f883;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs177, %f880;}

	// end inline asm
	st.global.v2.u16 	[%rd12+147648], {%rs177, %rs180};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs181, %f900;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f886, %rs181;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs184, %f899;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f889, %rs184;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs186, %f889;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs183, %f886;}

	// end inline asm
	st.global.v2.u16 	[%rd12+196800], {%rs183, %rs186};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs187, %f898;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f892, %rs187;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs190, %f897;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f895, %rs190;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs192, %f895;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs189, %f892;}

	// end inline asm
	st.global.v2.u16 	[%rd12+213184], {%rs189, %rs192};
	ret;

}

