//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-35583870
// Cuda compilation tools, release 12.8, V12.8.93
// Based on NVVM 7.0.1
//

.version 8.7
.target sm_80
.address_size 64

	// .globl	chunk_linear_attn_bwd_kernel
.global .align 1 .b8 _ZN61_INTERNAL_2ad75aeb_30_linear_attn_bwd_v2_swizzled_cu_cc9b6e384cute7productE[1];
.global .align 1 .b8 _ZN61_INTERNAL_2ad75aeb_30_linear_attn_bwd_v2_swizzled_cu_cc9b6e384cute1_E[1];
.global .align 1 .b8 _ZN61_INTERNAL_2ad75aeb_30_linear_attn_bwd_v2_swizzled_cu_cc9b6e384cuda3std3__45__cpo5beginE[1];
.global .align 1 .b8 _ZN61_INTERNAL_2ad75aeb_30_linear_attn_bwd_v2_swizzled_cu_cc9b6e384cuda3std3__45__cpo3endE[1];
.global .align 1 .b8 _ZN61_INTERNAL_2ad75aeb_30_linear_attn_bwd_v2_swizzled_cu_cc9b6e384cuda3std3__45__cpo6cbeginE[1];
.global .align 1 .b8 _ZN61_INTERNAL_2ad75aeb_30_linear_attn_bwd_v2_swizzled_cu_cc9b6e384cuda3std3__45__cpo4cendE[1];
.global .align 1 .b8 _ZN61_INTERNAL_2ad75aeb_30_linear_attn_bwd_v2_swizzled_cu_cc9b6e384cuda3std3__419piecewise_constructE[1];
.global .align 1 .b8 _ZN61_INTERNAL_2ad75aeb_30_linear_attn_bwd_v2_swizzled_cu_cc9b6e384cuda3std3__48in_placeE[1];
.global .align 1 .b8 _ZN61_INTERNAL_2ad75aeb_30_linear_attn_bwd_v2_swizzled_cu_cc9b6e384cuda3std6ranges3__45__cpo4swapE[1];
.global .align 1 .b8 _ZN61_INTERNAL_2ad75aeb_30_linear_attn_bwd_v2_swizzled_cu_cc9b6e384cuda3std6ranges3__45__cpo9iter_moveE[1];
.extern .shared .align 1024 .b8 buf_dyn_shmem[];

.visible .entry chunk_linear_attn_bwd_kernel(
	.param .u64 chunk_linear_attn_bwd_kernel_param_0,
	.param .u64 chunk_linear_attn_bwd_kernel_param_1,
	.param .u64 chunk_linear_attn_bwd_kernel_param_2,
	.param .u64 chunk_linear_attn_bwd_kernel_param_3,
	.param .u64 chunk_linear_attn_bwd_kernel_param_4,
	.param .u64 chunk_linear_attn_bwd_kernel_param_5,
	.param .u64 chunk_linear_attn_bwd_kernel_param_6
)
.maxntid 128, 1, 1
.minnctapersm 1
{
	.reg .pred 	%p<67>;
	.reg .b16 	%rs<705>;
	.reg .f32 	%f<2881>;
	.reg .b32 	%r<2988>;
	.reg .b64 	%rd<50>;


	ld.param.u64 	%rd1, [chunk_linear_attn_bwd_kernel_param_0];
	ld.param.u64 	%rd2, [chunk_linear_attn_bwd_kernel_param_1];
	ld.param.u64 	%rd3, [chunk_linear_attn_bwd_kernel_param_2];
	ld.param.u64 	%rd4, [chunk_linear_attn_bwd_kernel_param_3];
	ld.param.u64 	%rd5, [chunk_linear_attn_bwd_kernel_param_4];
	ld.param.u64 	%rd6, [chunk_linear_attn_bwd_kernel_param_5];
	ld.param.u64 	%rd7, [chunk_linear_attn_bwd_kernel_param_6];
	mov.u32 	%r1, %nctaid.x;
	mov.u32 	%r9, %ctaid.y;
	mov.u32 	%r10, %ctaid.x;
	mad.lo.s32 	%r2, %r9, %r1, %r10;
	mov.u32 	%r11, %nctaid.y;
	mul.lo.s32 	%r3, %r1, %r11;
	mul.lo.s32 	%r4, %r1, 10;
	mov.u32 	%r2987, 10;
	div.u32 	%r5, %r2, %r4;
	add.s32 	%r12, %r3, %r4;
	add.s32 	%r13, %r12, -1;
	div.s32 	%r14, %r13, %r4;
	add.s32 	%r15, %r5, 1;
	setp.lt.u32 	%p1, %r15, %r14;
	@%p1 bra 	$L__BB0_2;

	mul.lo.s32 	%r16, %r5, %r4;
	sub.s32 	%r17, %r3, %r16;
	div.u32 	%r2987, %r17, %r1;

$L__BB0_2:
	cvta.to.global.u64 	%rd32, %rd6;
	cvta.to.global.u64 	%rd33, %rd4;
	cvta.to.global.u64 	%rd34, %rd2;
	cvta.to.global.u64 	%rd35, %rd7;
	rem.u32 	%r2614, %r2, %r4;
	and.b32  	%r2615, %r5, 1;
	setp.eq.b32 	%p2, %r2615, 1;
	div.u32 	%r2616, %r2614, %r2987;
	not.b32 	%r2617, %r2616;
	add.s32 	%r2618, %r1, %r2617;
	selp.b32 	%r2619, %r2618, %r2616, %p2;
	mul.lo.s32 	%r2620, %r2616, %r2987;
	sub.s32 	%r2621, %r2614, %r2620;
	mad.lo.s32 	%r2622, %r5, 10, %r2621;
	mov.u32 	%r2623, %tid.x;
	shr.s32 	%r2624, %r2623, 2;
	shl.b32 	%r2625, %r2624, 6;
	shr.u32 	%r2626, %r2623, 4;
	and.b32  	%r2627, %r2623, 2;
	shr.u32 	%r2628, %r2627, 1;
	add.s32 	%r2629, %r2628, %r2626;
	shl.b32 	%r2630, %r2629, 5;
	and.b32  	%r2631, %r2630, 32;
	and.b32  	%r2632, %r2623, 8;
	shr.u32 	%r2633, %r2632, 3;
	add.s32 	%r2634, %r2633, %r2623;
	shl.b32 	%r2635, %r2634, 4;
	and.b32  	%r2636, %r2635, 16;
	or.b32  	%r2637, %r2625, %r2631;
	add.s32 	%r2638, %r2637, 14336;
	or.b32  	%r2639, %r2638, %r2636;
	mov.u32 	%r2640, %ctaid.z;
	shl.b32 	%r2641, %r2640, 13;
	and.b32  	%r2642, %r2641, -32768;
	shl.b32 	%r2643, %r2624, 8;
	shl.b32 	%r2644, %r2640, 6;
	and.b32  	%r2645, %r2644, 192;
	shl.b32 	%r2646, %r2619, 5;
	shl.b32 	%r2647, %r2623, 3;
	and.b32  	%r2648, %r2647, 24;
	add.s32 	%r2649, %r2643, %r2642;
	or.b32  	%r2650, %r2649, %r2645;
	or.b32  	%r2651, %r2650, %r2648;
	add.s32 	%r2652, %r2651, %r2646;
	mul.wide.s32 	%rd36, %r2652, 2;
	add.s64 	%rd30, %rd5, %rd36;
	mov.u32 	%r2653, buf_dyn_shmem;
	add.s32 	%r1784, %r2653, %r2639;
	// begin inline asm
	cp.async.cg.shared.global [%r1784], [%rd30], 16;
	// end inline asm
	add.s32 	%r2654, %r2652, 8192;
	mul.wide.s32 	%rd37, %r2654, 2;
	add.s64 	%rd31, %rd5, %rd37;
	add.s32 	%r1785, %r1784, 2048;
	// begin inline asm
	cp.async.cg.shared.global [%r1785], [%rd31], 16;
	// end inline asm
	// begin inline asm
	cp.async.commit_group;

	// end inline asm
	add.s32 	%r2655, %r2637, 6144;
	or.b32  	%r2656, %r2655, %r2636;
	shl.b32 	%r2657, %r2622, 5;
	add.s32 	%r2658, %r2651, %r2657;
	mul.wide.s32 	%rd38, %r2658, 2;
	add.s64 	%rd28, %rd1, %rd38;
	add.s32 	%r1694, %r2653, %r2656;
	// begin inline asm
	cp.async.cg.shared.global [%r1694], [%rd28], 16;
	// end inline asm
	add.s32 	%r2659, %r2658, 8192;
	mul.wide.s32 	%rd39, %r2659, 2;
	add.s64 	%rd29, %rd1, %rd39;
	add.s32 	%r1695, %r1694, 2048;
	// begin inline asm
	cp.async.cg.shared.global [%r1695], [%rd29], 16;
	// end inline asm
	add.s32 	%r2660, %r2637, 2048;
	or.b32  	%r2661, %r2660, %r2636;
	add.s64 	%rd26, %rd3, %rd36;
	add.s32 	%r1322, %r2653, %r2661;
	// begin inline asm
	cp.async.cg.shared.global [%r1322], [%rd26], 16;
	// end inline asm
	add.s64 	%rd27, %rd3, %rd37;
	add.s32 	%r1323, %r1322, 2048;
	// begin inline asm
	cp.async.cg.shared.global [%r1323], [%rd27], 16;
	// end inline asm
	// begin inline asm
	cp.async.commit_group;

	// end inline asm
	add.s32 	%r2662, %r2649, 16384;
	or.b32  	%r2663, %r2662, %r2645;
	or.b32  	%r2664, %r2663, %r2648;
	add.s32 	%r2665, %r2664, %r2646;
	mul.wide.s32 	%rd40, %r2665, 2;
	add.s64 	%rd24, %rd5, %rd40;
	// begin inline asm
	cp.async.cg.shared.global [%r1784], [%rd24], 16;
	// end inline asm
	add.s32 	%r2666, %r2665, 8192;
	mul.wide.s32 	%rd41, %r2666, 2;
	add.s64 	%rd25, %rd5, %rd41;
	// begin inline asm
	cp.async.cg.shared.global [%r1785], [%rd25], 16;
	// end inline asm
	// begin inline asm
	cp.async.commit_group;

	// end inline asm
	add.s32 	%r2667, %r2664, %r2657;
	mul.wide.s32 	%rd42, %r2667, 2;
	add.s64 	%rd22, %rd1, %rd42;
	// begin inline asm
	cp.async.cg.shared.global [%r1694], [%rd22], 16;
	// end inline asm
	add.s32 	%r2668, %r2667, 8192;
	mul.wide.s32 	%rd43, %r2668, 2;
	add.s64 	%rd23, %rd1, %rd43;
	// begin inline asm
	cp.async.cg.shared.global [%r1695], [%rd23], 16;
	// end inline asm
	add.s64 	%rd20, %rd3, %rd40;
	// begin inline asm
	cp.async.cg.shared.global [%r1322], [%rd20], 16;
	// end inline asm
	add.s64 	%rd21, %rd3, %rd41;
	// begin inline asm
	cp.async.cg.shared.global [%r1323], [%rd21], 16;
	// end inline asm
	// begin inline asm
	cp.async.commit_group;

	// end inline asm
	// begin inline asm
	cp.async.wait_group 2;

	// end inline asm
	bar.sync 	0;
	shr.s32 	%r2669, %r2623, 31;
	shr.u32 	%r2670, %r2669, 28;
	add.s32 	%r2671, %r2623, %r2670;
	and.b32  	%r2672, %r2671, -16;
	sub.s32 	%r2673, %r2623, %r2672;
	shr.u32 	%r2674, %r2673, 31;
	add.s32 	%r2675, %r2673, %r2674;
	shr.s32 	%r2676, %r2675, 1;
	shr.s32 	%r2677, %r2675, 31;
	shr.u32 	%r2678, %r2677, 30;
	add.s32 	%r2679, %r2676, %r2678;
	and.b32  	%r2680, %r2679, -4;
	sub.s32 	%r2681, %r2676, %r2680;
	shr.u32 	%r2682, %r2671, 31;
	shr.s32 	%r2683, %r2671, 4;
	add.s32 	%r2684, %r2683, %r2682;
	and.b32  	%r2685, %r2684, -2;
	sub.s32 	%r2686, %r2683, %r2685;
	shl.b32 	%r2687, %r2681, 6;
	and.b32  	%r2688, %r2687, 192;
	shl.b32 	%r2689, %r2686, 3;
	and.b32  	%r2690, %r2689, 8;
	or.b32  	%r2691, %r2688, %r2690;
	and.b32  	%r2692, %r2675, 134217726;
	sub.s32 	%r2693, %r2673, %r2692;
	shl.b32 	%r2694, %r2693, 5;
	shr.s32 	%r2695, %r2673, 31;
	shr.u32 	%r2696, %r2695, 29;
	add.s32 	%r2697, %r2673, %r2696;
	shr.s32 	%r2698, %r2697, 3;
	shl.b32 	%r2699, %r2698, 8;
	add.s32 	%r2700, %r2694, %r2699;
	shr.u32 	%r2701, %r2669, 27;
	add.s32 	%r2702, %r2623, %r2701;
	shr.u32 	%r2703, %r2702, 31;
	shr.s32 	%r2704, %r2702, 5;
	add.s32 	%r2705, %r2704, %r2703;
	and.b32  	%r2706, %r2705, -2;
	sub.s32 	%r2707, %r2704, %r2706;
	shl.b32 	%r2708, %r2707, 9;
	add.s32 	%r2709, %r2700, %r2708;
	shr.u32 	%r2710, %r2688, 3;
	xor.b32  	%r2711, %r2691, %r2710;
	shr.u32 	%r2712, %r2669, 29;
	add.s32 	%r2713, %r2623, %r2712;
	and.b32  	%r2714, %r2713, -8;
	sub.s32 	%r2715, %r2623, %r2714;
	shr.u32 	%r2716, %r2715, 31;
	add.s32 	%r2717, %r2715, %r2716;
	shr.s32 	%r2718, %r2717, 1;
	shl.b32 	%r2719, %r2718, 6;
	and.b32  	%r2720, %r2719, 192;
	and.b32  	%r2721, %r2713, 8;
	or.b32  	%r2722, %r2720, %r2721;
	and.b32  	%r2723, %r2717, 134217726;
	sub.s32 	%r2724, %r2715, %r2723;
	shl.b32 	%r2725, %r2724, 5;
	shl.b32 	%r2726, %r2686, 9;
	shr.u32 	%r2727, %r2669, 26;
	add.s32 	%r2728, %r2623, %r2727;
	shr.s32 	%r2729, %r2728, 6;
	shl.b32 	%r2730, %r2729, 8;
	add.s32 	%r2731, %r2726, %r2730;
	add.s32 	%r2732, %r2731, %r2725;
	shr.u32 	%r2733, %r2720, 3;
	xor.b32  	%r2734, %r2722, %r2733;
	and.b32  	%r2735, %r2718, 2;
	setp.eq.s32 	%p3, %r2735, 0;
	and.b32  	%r2736, %r2681, 2;
	setp.eq.s32 	%p4, %r2736, 0;
	add.s32 	%r2737, %r2709, %r2711;
	add.s32 	%r2738, %r2732, %r2734;
	shl.b32 	%r2739, %r2737, 1;
	add.s32 	%r2740, %r2653, 14336;
	add.s32 	%r784, %r2740, %r2739;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r30, %r31, %r32, %r33}, [%r784];

	// end inline asm
	add.s32 	%r789, %r784, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r35, %r36, %r37, %r38}, [%r789];

	// end inline asm
	shl.b32 	%r2741, %r2738, 1;
	add.s32 	%r2742, %r2653, 2048;
	add.s32 	%r502, %r2742, %r2741;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r40, %r41, %r42, %r43}, [%r502];

	// end inline asm
	add.s32 	%r507, %r502, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r45, %r46, %r47, %r48}, [%r507];

	// end inline asm
	mov.f32 	%f2560, 0f00000000;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1,  %f2,  %f3,  %f4},{%r30,  %r31,  %r32,  %r33},{%r40,  %r41},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f9,  %f10,  %f11,  %f12},{%r35,  %r36,  %r37,  %r38},{%r40,  %r41},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f17,  %f18,  %f19,  %f20},{%r35,  %r36,  %r37,  %r38},{%r42,  %r43},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f25,  %f26,  %f27,  %f28},{%r30,  %r31,  %r32,  %r33},{%r42,  %r43},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f33,  %f34,  %f35,  %f36},{%r30,  %r31,  %r32,  %r33},{%r45,  %r46},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f41,  %f42,  %f43,  %f44},{%r35,  %r36,  %r37,  %r38},{%r45,  %r46},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f49,  %f50,  %f51,  %f52},{%r35,  %r36,  %r37,  %r38},{%r47,  %r48},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f57,  %f58,  %f59,  %f60},{%r30,  %r31,  %r32,  %r33},{%r47,  %r48},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	selp.b32 	%r2743, 32, -32, %p4;
	add.s32 	%r823, %r784, %r2743;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r98, %r99, %r100, %r101}, [%r823];

	// end inline asm
	add.s32 	%r828, %r823, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r103, %r104, %r105, %r106}, [%r828];

	// end inline asm
	selp.b32 	%r2744, 32, -32, %p3;
	add.s32 	%r570, %r502, %r2744;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r108, %r109, %r110, %r111}, [%r570];

	// end inline asm
	add.s32 	%r575, %r570, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r113, %r114, %r115, %r116}, [%r575];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f65,  %f66,  %f67,  %f68},{%r98,  %r99,  %r100,  %r101},{%r108,  %r109},{%f1, %f2, %f3, %f4};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f73,  %f74,  %f75,  %f76},{%r103,  %r104,  %r105,  %r106},{%r108,  %r109},{%f9, %f10, %f11, %f12};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f81,  %f82,  %f83,  %f84},{%r103,  %r104,  %r105,  %r106},{%r110,  %r111},{%f17, %f18, %f19, %f20};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f89,  %f90,  %f91,  %f92},{%r98,  %r99,  %r100,  %r101},{%r110,  %r111},{%f25, %f26, %f27, %f28};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f97,  %f98,  %f99,  %f100},{%r98,  %r99,  %r100,  %r101},{%r113,  %r114},{%f33, %f34, %f35, %f36};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f105,  %f106,  %f107,  %f108},{%r103,  %r104,  %r105,  %r106},{%r113,  %r114},{%f41, %f42, %f43, %f44};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f113,  %f114,  %f115,  %f116},{%r103,  %r104,  %r105,  %r106},{%r115,  %r116},{%f49, %f50, %f51, %f52};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f121,  %f122,  %f123,  %f124},{%r98,  %r99,  %r100,  %r101},{%r115,  %r116},{%f57, %f58, %f59, %f60};

	// end inline asm
	bar.sync 	0;
	shl.b32 	%r2745, %r2623, 1;
	and.b32  	%r2746, %r2745, 6;
	shr.s32 	%r2747, %r2623, 6;
	shl.b32 	%r2748, %r2747, 3;
	or.b32  	%r2749, %r2746, %r2748;
	and.b32  	%r2750, %r2623, 32;
	shr.u32 	%r2751, %r2750, 1;
	and.b32  	%r2752, %r2623, 31;
	shr.u32 	%r2753, %r2752, 2;
	or.b32  	%r2754, %r2753, %r2751;
	shl.b32 	%r2755, %r2753, 6;
	shr.u32 	%r2756, %r2623, 6;
	and.b32  	%r2757, %r2623, 4;
	shr.u32 	%r2758, %r2757, 2;
	add.s32 	%r2759, %r2758, %r2756;
	shl.b32 	%r2760, %r2759, 3;
	and.b32  	%r2761, %r2760, 8;
	setp.gt.s32 	%p5, %r2749, %r2754;
	selp.f32 	%f129, 0f00000000, %f65, %p5;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1, %f129;}

	// end inline asm
	shr.u32 	%r2762, %r2749, 5;
	add.s32 	%r2763, %r2762, %r2626;
	and.b32  	%r2764, %r2763, 1;
	or.b32  	%r2765, %r2764, %r2750;
	shl.b32 	%r2766, %r2765, 5;
	and.b32  	%r2767, %r2745, 16;
	or.b32  	%r2768, %r2766, %r2767;
	or.b32  	%r2769, %r2768, %r2761;
	or.b32  	%r2770, %r2769, %r2755;
	or.b32  	%r2771, %r2770, %r2746;
	shl.b32 	%r2772, %r2771, 1;
	add.s32 	%r2773, %r2653, %r2772;
	st.shared.u16 	[%r2773+18432], %rs1;
	or.b32  	%r2774, %r2749, 1;
	setp.lt.s32 	%p6, %r2749, %r2754;
	selp.f32 	%f130, %f66, 0f00000000, %p6;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs2, %f130;}

	// end inline asm
	shr.u32 	%r2775, %r2774, 5;
	add.s32 	%r2776, %r2775, %r2626;
	and.b32  	%r2777, %r2776, 1;
	or.b32  	%r2778, %r2777, %r2750;
	shl.b32 	%r2779, %r2778, 5;
	or.b32  	%r2780, %r2779, %r2767;
	or.b32  	%r2781, %r2780, %r2761;
	or.b32  	%r2782, %r2781, %r2755;
	or.b32  	%r2783, %r2782, %r2746;
	shl.b32 	%r2784, %r2783, 1;
	add.s32 	%r2785, %r2653, %r2784;
	st.shared.u16 	[%r2785+18434], %rs2;
	or.b32  	%r2786, %r2754, 8;
	setp.gt.s32 	%p7, %r2749, %r2786;
	selp.f32 	%f131, 0f00000000, %f67, %p7;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs3, %f131;}

	// end inline asm
	st.shared.u16 	[%r2773+19456], %rs3;
	setp.lt.s32 	%p8, %r2749, %r2786;
	selp.f32 	%f132, %f68, 0f00000000, %p8;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs4, %f132;}

	// end inline asm
	st.shared.u16 	[%r2785+19458], %rs4;
	or.b32  	%r2787, %r2754, 32;
	setp.gt.s32 	%p9, %r2749, %r2787;
	selp.f32 	%f133, 0f00000000, %f73, %p9;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs5, %f133;}

	// end inline asm
	st.shared.u16 	[%r2773+22528], %rs5;
	setp.lt.s32 	%p10, %r2749, %r2787;
	selp.f32 	%f134, %f74, 0f00000000, %p10;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs6, %f134;}

	// end inline asm
	st.shared.u16 	[%r2785+22530], %rs6;
	or.b32  	%r2788, %r2754, 40;
	setp.gt.s32 	%p11, %r2749, %r2788;
	selp.f32 	%f135, 0f00000000, %f75, %p11;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs7, %f135;}

	// end inline asm
	st.shared.u16 	[%r2773+23552], %rs7;
	setp.lt.s32 	%p12, %r2749, %r2788;
	selp.f32 	%f136, %f76, 0f00000000, %p12;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs8, %f136;}

	// end inline asm
	st.shared.u16 	[%r2785+23554], %rs8;
	add.s32 	%r2789, %r2749, 16;
	xor.b32  	%r2790, %r2767, 16;
	setp.gt.s32 	%p13, %r2789, %r2754;
	selp.f32 	%f137, 0f00000000, %f89, %p13;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs9, %f137;}

	// end inline asm
	shr.u32 	%r2791, %r2789, 5;
	add.s32 	%r2792, %r2791, %r2626;
	and.b32  	%r2793, %r2792, 1;
	or.b32  	%r2794, %r2793, %r2750;
	shl.b32 	%r2795, %r2794, 5;
	or.b32  	%r2796, %r2795, %r2790;
	or.b32  	%r2797, %r2796, %r2761;
	or.b32  	%r2798, %r2797, %r2755;
	or.b32  	%r2799, %r2798, %r2746;
	shl.b32 	%r2800, %r2799, 1;
	add.s32 	%r2801, %r2653, %r2800;
	st.shared.u16 	[%r2801+18432], %rs9;
	add.s32 	%r2802, %r2749, 17;
	setp.gt.s32 	%p14, %r2802, %r2754;
	selp.f32 	%f138, 0f00000000, %f90, %p14;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs10, %f138;}

	// end inline asm
	shr.u32 	%r2803, %r2802, 5;
	add.s32 	%r2804, %r2803, %r2626;
	and.b32  	%r2805, %r2804, 1;
	or.b32  	%r2806, %r2805, %r2750;
	shl.b32 	%r2807, %r2806, 5;
	or.b32  	%r2808, %r2807, %r2790;
	or.b32  	%r2809, %r2808, %r2761;
	or.b32  	%r2810, %r2809, %r2755;
	or.b32  	%r2811, %r2810, %r2746;
	shl.b32 	%r2812, %r2811, 1;
	add.s32 	%r2813, %r2653, %r2812;
	st.shared.u16 	[%r2813+18434], %rs10;
	setp.gt.s32 	%p15, %r2789, %r2786;
	selp.f32 	%f139, 0f00000000, %f91, %p15;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs11, %f139;}

	// end inline asm
	st.shared.u16 	[%r2801+19456], %rs11;
	setp.gt.s32 	%p16, %r2802, %r2786;
	selp.f32 	%f140, 0f00000000, %f92, %p16;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs12, %f140;}

	// end inline asm
	st.shared.u16 	[%r2813+19458], %rs12;
	setp.gt.s32 	%p17, %r2789, %r2787;
	selp.f32 	%f141, 0f00000000, %f81, %p17;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs13, %f141;}

	// end inline asm
	st.shared.u16 	[%r2801+22528], %rs13;
	setp.gt.s32 	%p18, %r2802, %r2787;
	selp.f32 	%f142, 0f00000000, %f82, %p18;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs14, %f142;}

	// end inline asm
	st.shared.u16 	[%r2813+22530], %rs14;
	setp.gt.s32 	%p19, %r2789, %r2788;
	selp.f32 	%f143, 0f00000000, %f83, %p19;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs15, %f143;}

	// end inline asm
	st.shared.u16 	[%r2801+23552], %rs15;
	setp.gt.s32 	%p20, %r2802, %r2788;
	selp.f32 	%f144, 0f00000000, %f84, %p20;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs16, %f144;}

	// end inline asm
	st.shared.u16 	[%r2813+23554], %rs16;
	add.s32 	%r2814, %r2749, 32;
	setp.gt.s32 	%p21, %r2814, %r2754;
	selp.f32 	%f145, 0f00000000, %f97, %p21;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs17, %f145;}

	// end inline asm
	shr.u32 	%r2815, %r2814, 5;
	add.s32 	%r2816, %r2815, %r2626;
	and.b32  	%r2817, %r2816, 1;
	or.b32  	%r2818, %r2817, %r2750;
	shl.b32 	%r2819, %r2818, 5;
	or.b32  	%r2820, %r2819, %r2767;
	or.b32  	%r2821, %r2820, %r2761;
	or.b32  	%r2822, %r2821, %r2755;
	or.b32  	%r2823, %r2822, %r2746;
	shl.b32 	%r2824, %r2823, 1;
	add.s32 	%r2825, %r2653, %r2824;
	st.shared.u16 	[%r2825+18432], %rs17;
	add.s32 	%r2826, %r2749, 33;
	setp.gt.s32 	%p22, %r2826, %r2754;
	selp.f32 	%f146, 0f00000000, %f98, %p22;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs18, %f146;}

	// end inline asm
	shr.u32 	%r2827, %r2826, 5;
	add.s32 	%r2828, %r2827, %r2626;
	and.b32  	%r2829, %r2828, 1;
	or.b32  	%r2830, %r2829, %r2750;
	shl.b32 	%r2831, %r2830, 5;
	or.b32  	%r2832, %r2831, %r2767;
	or.b32  	%r2833, %r2832, %r2761;
	or.b32  	%r2834, %r2833, %r2755;
	or.b32  	%r2835, %r2834, %r2746;
	shl.b32 	%r2836, %r2835, 1;
	add.s32 	%r2837, %r2653, %r2836;
	st.shared.u16 	[%r2837+18434], %rs18;
	setp.gt.s32 	%p23, %r2814, %r2786;
	selp.f32 	%f147, 0f00000000, %f99, %p23;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs19, %f147;}

	// end inline asm
	st.shared.u16 	[%r2825+19456], %rs19;
	setp.gt.s32 	%p24, %r2826, %r2786;
	selp.f32 	%f148, 0f00000000, %f100, %p24;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs20, %f148;}

	// end inline asm
	st.shared.u16 	[%r2837+19458], %rs20;
	setp.gt.s32 	%p25, %r2814, %r2787;
	selp.f32 	%f149, 0f00000000, %f105, %p25;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs21, %f149;}

	// end inline asm
	st.shared.u16 	[%r2825+22528], %rs21;
	setp.gt.s32 	%p26, %r2826, %r2787;
	selp.f32 	%f150, 0f00000000, %f106, %p26;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs22, %f150;}

	// end inline asm
	st.shared.u16 	[%r2837+22530], %rs22;
	setp.gt.s32 	%p27, %r2814, %r2788;
	selp.f32 	%f151, 0f00000000, %f107, %p27;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs23, %f151;}

	// end inline asm
	st.shared.u16 	[%r2825+23552], %rs23;
	setp.gt.s32 	%p28, %r2826, %r2788;
	selp.f32 	%f152, 0f00000000, %f108, %p28;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs24, %f152;}

	// end inline asm
	st.shared.u16 	[%r2837+23554], %rs24;
	add.s32 	%r2838, %r2749, 48;
	setp.gt.s32 	%p29, %r2838, %r2754;
	selp.f32 	%f153, 0f00000000, %f121, %p29;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs25, %f153;}

	// end inline asm
	shr.u32 	%r2839, %r2838, 5;
	add.s32 	%r2840, %r2839, %r2626;
	and.b32  	%r2841, %r2840, 1;
	or.b32  	%r2842, %r2841, %r2750;
	shl.b32 	%r2843, %r2842, 5;
	or.b32  	%r2844, %r2843, %r2790;
	or.b32  	%r2845, %r2844, %r2761;
	or.b32  	%r2846, %r2845, %r2755;
	or.b32  	%r2847, %r2846, %r2746;
	shl.b32 	%r2848, %r2847, 1;
	add.s32 	%r2849, %r2653, %r2848;
	st.shared.u16 	[%r2849+18432], %rs25;
	add.s32 	%r2850, %r2749, 49;
	setp.gt.s32 	%p30, %r2850, %r2754;
	selp.f32 	%f154, 0f00000000, %f122, %p30;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs26, %f154;}

	// end inline asm
	shr.u32 	%r2851, %r2850, 5;
	add.s32 	%r2852, %r2851, %r2626;
	and.b32  	%r2853, %r2852, 1;
	or.b32  	%r2854, %r2853, %r2750;
	shl.b32 	%r2855, %r2854, 5;
	or.b32  	%r2856, %r2855, %r2790;
	or.b32  	%r2857, %r2856, %r2761;
	or.b32  	%r2858, %r2857, %r2755;
	or.b32  	%r2859, %r2858, %r2746;
	shl.b32 	%r2860, %r2859, 1;
	add.s32 	%r2861, %r2653, %r2860;
	st.shared.u16 	[%r2861+18434], %rs26;
	setp.gt.s32 	%p31, %r2838, %r2786;
	selp.f32 	%f155, 0f00000000, %f123, %p31;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs27, %f155;}

	// end inline asm
	st.shared.u16 	[%r2849+19456], %rs27;
	setp.gt.s32 	%p32, %r2850, %r2786;
	selp.f32 	%f156, 0f00000000, %f124, %p32;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs28, %f156;}

	// end inline asm
	st.shared.u16 	[%r2861+19458], %rs28;
	setp.gt.s32 	%p33, %r2838, %r2787;
	selp.f32 	%f157, 0f00000000, %f113, %p33;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs29, %f157;}

	// end inline asm
	st.shared.u16 	[%r2849+22528], %rs29;
	setp.gt.s32 	%p34, %r2850, %r2787;
	selp.f32 	%f158, 0f00000000, %f114, %p34;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs30, %f158;}

	// end inline asm
	st.shared.u16 	[%r2861+22530], %rs30;
	setp.gt.s32 	%p35, %r2838, %r2788;
	selp.f32 	%f159, 0f00000000, %f115, %p35;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs31, %f159;}

	// end inline asm
	st.shared.u16 	[%r2849+23552], %rs31;
	setp.gt.s32 	%p36, %r2850, %r2788;
	selp.f32 	%f160, 0f00000000, %f116, %p36;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs32, %f160;}

	// end inline asm
	st.shared.u16 	[%r2861+23554], %rs32;
	// begin inline asm
	cp.async.wait_group 2;

	// end inline asm
	bar.sync 	0;
	and.b32  	%r2862, %r2697, -8;
	sub.s32 	%r2863, %r2673, %r2862;
	shl.b32 	%r2864, %r2863, 6;
	and.b32  	%r2865, %r2864, 448;
	or.b32  	%r2866, %r2865, %r2690;
	shl.b32 	%r2867, %r2686, 4;
	and.b32  	%r2868, %r2867, 16;
	shl.b32 	%r2869, %r2729, 3;
	and.b32  	%r2870, %r2869, 8;
	or.b32  	%r2871, %r2868, %r2870;
	or.b32  	%r2872, %r2871, %r2688;
	xor.b32  	%r2873, %r2872, %r2710;
	shr.u32 	%r2874, %r2865, 3;
	and.b32  	%r2875, %r2863, 4;
	setp.eq.s32 	%p37, %r2875, 0;
	and.b32  	%r2876, %r2863, 2;
	setp.eq.s32 	%p38, %r2876, 0;
	xor.b32  	%r2877, %r2866, %r2874;
	add.s32 	%r2878, %r2700, %r2873;
	shl.b32 	%r2879, %r2698, 9;
	shl.b32 	%r2880, %r2707, 10;
	add.s32 	%r2881, %r2879, %r2880;
	or.b32  	%r2882, %r2881, %r2877;
	shl.b32 	%r2883, %r2882, 1;
	add.s32 	%r2884, %r2653, %r2883;
	add.s32 	%r170, %r2884, 18432;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r166, %r167, %r168, %r169}, [%r170];

	// end inline asm
	add.s32 	%r175, %r2884, 22528;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r171, %r172, %r173, %r174}, [%r175];

	// end inline asm
	shl.b32 	%r2885, %r2878, 1;
	add.s32 	%r2886, %r2653, 6144;
	add.s32 	%r867, %r2886, %r2885;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r176, %r177, %r178, %r179}, [%r867];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f161,  %f162,  %f163,  %f164},{%r166,  %r167,  %r168,  %r169},{%r176,  %r177},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f169,  %f170,  %f171,  %f172},{%r171,  %r172,  %r173,  %r174},{%r176,  %r177},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f177,  %f178,  %f179,  %f180},{%r171,  %r172,  %r173,  %r174},{%r178,  %r179},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f185,  %f186,  %f187,  %f188},{%r166,  %r167,  %r168,  %r169},{%r178,  %r179},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	selp.b32 	%r2887, 32, -32, %p38;
	add.s32 	%r2335, %r170, %r2887;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r205, %r206, %r207, %r208}, [%r2335];

	// end inline asm
	add.s32 	%r2340, %r2335, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r210, %r211, %r212, %r213}, [%r2340];

	// end inline asm
	add.s32 	%r889, %r867, 1024;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r215, %r216, %r217, %r218}, [%r889];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f193,  %f194,  %f195,  %f196},{%r205,  %r206,  %r207,  %r208},{%r215,  %r216},{%f161, %f162, %f163, %f164};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f201,  %f202,  %f203,  %f204},{%r210,  %r211,  %r212,  %r213},{%r215,  %r216},{%f169, %f170, %f171, %f172};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f209,  %f210,  %f211,  %f212},{%r210,  %r211,  %r212,  %r213},{%r217,  %r218},{%f177, %f178, %f179, %f180};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f217,  %f218,  %f219,  %f220},{%r205,  %r206,  %r207,  %r208},{%r217,  %r218},{%f185, %f186, %f187, %f188};

	// end inline asm
	selp.b32 	%r2888, 64, -64, %p37;
	add.s32 	%r2374, %r170, %r2888;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r244, %r245, %r246, %r247}, [%r2374];

	// end inline asm
	add.s32 	%r2379, %r2374, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r249, %r250, %r251, %r252}, [%r2379];

	// end inline asm
	add.s32 	%r911, %r867, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r254, %r255, %r256, %r257}, [%r911];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f225,  %f226,  %f227,  %f228},{%r244,  %r245,  %r246,  %r247},{%r254,  %r255},{%f193, %f194, %f195, %f196};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f233,  %f234,  %f235,  %f236},{%r249,  %r250,  %r251,  %r252},{%r254,  %r255},{%f201, %f202, %f203, %f204};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f241,  %f242,  %f243,  %f244},{%r249,  %r250,  %r251,  %r252},{%r256,  %r257},{%f209, %f210, %f211, %f212};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f249,  %f250,  %f251,  %f252},{%r244,  %r245,  %r246,  %r247},{%r256,  %r257},{%f217, %f218, %f219, %f220};

	// end inline asm
	add.s32 	%r2413, %r2374, %r2887;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r283, %r284, %r285, %r286}, [%r2413];

	// end inline asm
	add.s32 	%r2418, %r2413, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r288, %r289, %r290, %r291}, [%r2418];

	// end inline asm
	add.s32 	%r933, %r867, 3072;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r293, %r294, %r295, %r296}, [%r933];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f257,  %f258,  %f259,  %f260},{%r283,  %r284,  %r285,  %r286},{%r293,  %r294},{%f225, %f226, %f227, %f228};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f265,  %f266,  %f267,  %f268},{%r288,  %r289,  %r290,  %r291},{%r293,  %r294},{%f233, %f234, %f235, %f236};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f273,  %f274,  %f275,  %f276},{%r288,  %r289,  %r290,  %r291},{%r295,  %r296},{%f241, %f242, %f243, %f244};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f281,  %f282,  %f283,  %f284},{%r283,  %r284,  %r285,  %r286},{%r295,  %r296},{%f249, %f250, %f251, %f252};

	// end inline asm
	bar.sync 	0;
	shl.b32 	%r2889, %r2753, 5;
	add.s32 	%r2890, %r2633, %r2756;
	shl.b32 	%r2891, %r2890, 3;
	and.b32  	%r2892, %r2891, 8;
	or.b32  	%r2893, %r2746, %r2889;
	or.b32  	%r2894, %r2893, %r2892;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs33, %f2560;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f290, %rs33;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs36, %f2560;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f293, %rs36;}

	// end inline asm
	and.b32  	%r2895, %r2626, 1;
	or.b32  	%r2896, %r2895, %r2750;
	shl.b32 	%r2897, %r2896, 4;
	or.b32  	%r2898, %r2894, %r2897;
	shl.b32 	%r2899, %r2898, 1;
	add.s32 	%r2900, %r2653, %r2899;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs38, %f293;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs35, %f290;}

	// end inline asm
	st.shared.v2.u16 	[%r2900+12288], {%rs35, %rs38};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs39, %f2560;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f296, %rs39;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs42, %f2560;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f299, %rs42;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs44, %f299;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs41, %f296;}

	// end inline asm
	st.shared.v2.u16 	[%r2900+12800], {%rs41, %rs44};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs45, %f2560;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f302, %rs45;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs48, %f2560;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f305, %rs48;}

	// end inline asm
	xor.b32  	%r2901, %r2895, 1;
	or.b32  	%r2902, %r2901, %r2750;
	shl.b32 	%r2903, %r2902, 4;
	or.b32  	%r2904, %r2894, %r2903;
	shl.b32 	%r2905, %r2904, 1;
	add.s32 	%r2906, %r2653, %r2905;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs50, %f305;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs47, %f302;}

	// end inline asm
	st.shared.v2.u16 	[%r2906+12288], {%rs47, %rs50};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs51, %f2560;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f308, %rs51;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs54, %f2560;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f311, %rs54;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs56, %f311;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs53, %f308;}

	// end inline asm
	st.shared.v2.u16 	[%r2906+12800], {%rs53, %rs56};
	// begin inline asm
	cp.async.wait_group 3;

	// end inline asm
	bar.sync 	0;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r322, %r323, %r324, %r325}, [%r784];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r327, %r328, %r329, %r330}, [%r789];

	// end inline asm
	add.s32 	%r2462, %r2653, %r2885;
	add.s32 	%r336, %r2462, 12288;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r332, %r333, %r334, %r335}, [%r336];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f313,  %f314,  %f315,  %f316},{%r322,  %r323,  %r324,  %r325},{%r332,  %r333},{%f257, %f258, %f259, %f260};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f321,  %f322,  %f323,  %f324},{%r327,  %r328,  %r329,  %r330},{%r332,  %r333},{%f265, %f266, %f267, %f268};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f329,  %f330,  %f331,  %f332},{%r327,  %r328,  %r329,  %r330},{%r334,  %r335},{%f273, %f274, %f275, %f276};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f337,  %f338,  %f339,  %f340},{%r322,  %r323,  %r324,  %r325},{%r334,  %r335},{%f281, %f282, %f283, %f284};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r361, %r362, %r363, %r364}, [%r823];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r366, %r367, %r368, %r369}, [%r828];

	// end inline asm
	add.s32 	%r375, %r2462, 13312;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r371, %r372, %r373, %r374}, [%r375];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f345,  %f346,  %f347,  %f348},{%r361,  %r362,  %r363,  %r364},{%r371,  %r372},{%f313, %f314, %f315, %f316};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f353,  %f354,  %f355,  %f356},{%r366,  %r367,  %r368,  %r369},{%r371,  %r372},{%f321, %f322, %f323, %f324};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f361,  %f362,  %f363,  %f364},{%r366,  %r367,  %r368,  %r369},{%r373,  %r374},{%f329, %f330, %f331, %f332};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f369,  %f370,  %f371,  %f372},{%r361,  %r362,  %r363,  %r364},{%r373,  %r374},{%f337, %f338, %f339, %f340};

	// end inline asm
	// begin inline asm
	cp.async.wait_group 2;

	// end inline asm
	bar.sync 	0;
	shl.b32 	%r2907, %r2707, 4;
	and.b32  	%r2908, %r2907, 16;
	or.b32  	%r2909, %r2721, %r2908;
	or.b32  	%r2910, %r2909, %r2720;
	shl.b32 	%r2911, %r2686, 8;
	add.s32 	%r2912, %r2725, %r2911;
	xor.b32  	%r2913, %r2910, %r2733;
	add.s32 	%r2914, %r2912, %r2913;
	shl.b32 	%r2915, %r2914, 1;
	add.s32 	%r862, %r2742, %r2915;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r400, %r401, %r402, %r403}, [%r862];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r405, %r406, %r407, %r408}, [%r867];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f377,  %f378,  %f379,  %f380},{%r400,  %r401,  %r402,  %r403},{%r405,  %r406},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f385,  %f386,  %f387,  %f388},{%r400,  %r401,  %r402,  %r403},{%r407,  %r408},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	add.s32 	%r884, %r862, 1024;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r422, %r423, %r424, %r425}, [%r884];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r427, %r428, %r429, %r430}, [%r889];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f393,  %f394,  %f395,  %f396},{%r422,  %r423,  %r424,  %r425},{%r427,  %r428},{%f377, %f378, %f379, %f380};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f401,  %f402,  %f403,  %f404},{%r422,  %r423,  %r424,  %r425},{%r429,  %r430},{%f385, %f386, %f387, %f388};

	// end inline asm
	add.s32 	%r906, %r862, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r444, %r445, %r446, %r447}, [%r906];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r449, %r450, %r451, %r452}, [%r911];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f409,  %f410,  %f411,  %f412},{%r444,  %r445,  %r446,  %r447},{%r449,  %r450},{%f393, %f394, %f395, %f396};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f417,  %f418,  %f419,  %f420},{%r444,  %r445,  %r446,  %r447},{%r451,  %r452},{%f401, %f402, %f403, %f404};

	// end inline asm
	add.s32 	%r928, %r862, 3072;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r466, %r467, %r468, %r469}, [%r928];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r471, %r472, %r473, %r474}, [%r933];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f425,  %f426,  %f427,  %f428},{%r466,  %r467,  %r468,  %r469},{%r471,  %r472},{%f409, %f410, %f411, %f412};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f433,  %f434,  %f435,  %f436},{%r466,  %r467,  %r468,  %r469},{%r473,  %r474},{%f417, %f418, %f419, %f420};

	// end inline asm
	mul.f32 	%f441, %f345, 0f3E000000;
	mul.f32 	%f444, %f346, 0f3E000000;
	mul.f32 	%f447, %f347, 0f3E000000;
	mul.f32 	%f450, %f348, 0f3E000000;
	mul.f32 	%f453, %f353, 0f3E000000;
	mul.f32 	%f456, %f354, 0f3E000000;
	mul.f32 	%f459, %f355, 0f3E000000;
	mul.f32 	%f462, %f356, 0f3E000000;
	mul.f32 	%f465, %f369, 0f3E000000;
	mul.f32 	%f468, %f370, 0f3E000000;
	mul.f32 	%f471, %f371, 0f3E000000;
	mul.f32 	%f474, %f372, 0f3E000000;
	mul.f32 	%f477, %f361, 0f3E000000;
	mul.f32 	%f480, %f362, 0f3E000000;
	mul.f32 	%f483, %f363, 0f3E000000;
	mul.f32 	%f486, %f364, 0f3E000000;
	shl.b32 	%r2916, %r2619, 16;
	shl.b32 	%r2917, %r2623, 7;
	and.b32  	%r2918, %r2917, 4096;
	shl.b32 	%r2919, %r2753, 8;
	or.b32  	%r2920, %r2642, %r2918;
	or.b32  	%r2921, %r2920, %r2645;
	add.s32 	%r2922, %r2749, %r2921;
	add.s32 	%r2923, %r2922, %r2919;
	add.s32 	%r2924, %r2923, %r2916;
	add.s32 	%r2925, %r2924, %r2657;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs57, %f441;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f442, %rs57;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs60, %f444;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f445, %rs60;}

	// end inline asm
	mul.wide.s32 	%rd44, %r2925, 2;
	add.s64 	%rd45, %rd32, %rd44;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs62, %f445;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs59, %f442;}

	// end inline asm
	st.global.v2.u16 	[%rd45], {%rs59, %rs62};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs63, %f447;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f448, %rs63;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs66, %f450;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f451, %rs66;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs68, %f451;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs65, %f448;}

	// end inline asm
	st.global.v2.u16 	[%rd45+4096], {%rs65, %rs68};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs69, %f453;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f454, %rs69;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs72, %f456;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f457, %rs72;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs74, %f457;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs71, %f454;}

	// end inline asm
	st.global.v2.u16 	[%rd45+16384], {%rs71, %rs74};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs75, %f459;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f460, %rs75;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs78, %f462;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f463, %rs78;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs80, %f463;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs77, %f460;}

	// end inline asm
	st.global.v2.u16 	[%rd45+20480], {%rs77, %rs80};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs81, %f465;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f466, %rs81;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs84, %f468;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f469, %rs84;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs86, %f469;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs83, %f466;}

	// end inline asm
	st.global.v2.u16 	[%rd45+32], {%rs83, %rs86};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs87, %f471;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f472, %rs87;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs90, %f474;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f475, %rs90;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs92, %f475;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs89, %f472;}

	// end inline asm
	st.global.v2.u16 	[%rd45+4128], {%rs89, %rs92};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs93, %f477;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f478, %rs93;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs96, %f480;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f481, %rs96;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs98, %f481;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs95, %f478;}

	// end inline asm
	st.global.v2.u16 	[%rd45+16416], {%rs95, %rs98};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs99, %f483;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f484, %rs99;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs102, %f486;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f487, %rs102;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs104, %f487;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs101, %f484;}

	// end inline asm
	st.global.v2.u16 	[%rd45+20512], {%rs101, %rs104};
	// begin inline asm
	cp.async.wait_all;

	// end inline asm
	bar.sync 	0;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r488, %r489, %r490, %r491}, [%r784];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r493, %r494, %r495, %r496}, [%r789];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r498, %r499, %r500, %r501}, [%r502];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r503, %r504, %r505, %r506}, [%r507];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f489,  %f490,  %f491,  %f492},{%r488,  %r489,  %r490,  %r491},{%r498,  %r499},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f497,  %f498,  %f499,  %f500},{%r493,  %r494,  %r495,  %r496},{%r498,  %r499},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f505,  %f506,  %f507,  %f508},{%r493,  %r494,  %r495,  %r496},{%r500,  %r501},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f513,  %f514,  %f515,  %f516},{%r488,  %r489,  %r490,  %r491},{%r500,  %r501},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f521,  %f522,  %f523,  %f524},{%r488,  %r489,  %r490,  %r491},{%r503,  %r504},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f529,  %f530,  %f531,  %f532},{%r493,  %r494,  %r495,  %r496},{%r503,  %r504},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f537,  %f538,  %f539,  %f540},{%r493,  %r494,  %r495,  %r496},{%r505,  %r506},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f545,  %f546,  %f547,  %f548},{%r488,  %r489,  %r490,  %r491},{%r505,  %r506},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r556, %r557, %r558, %r559}, [%r823];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r561, %r562, %r563, %r564}, [%r828];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r566, %r567, %r568, %r569}, [%r570];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r571, %r572, %r573, %r574}, [%r575];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f553,  %f554,  %f555,  %f556},{%r556,  %r557,  %r558,  %r559},{%r566,  %r567},{%f489, %f490, %f491, %f492};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f561,  %f562,  %f563,  %f564},{%r561,  %r562,  %r563,  %r564},{%r566,  %r567},{%f497, %f498, %f499, %f500};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f569,  %f570,  %f571,  %f572},{%r561,  %r562,  %r563,  %r564},{%r568,  %r569},{%f505, %f506, %f507, %f508};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f577,  %f578,  %f579,  %f580},{%r556,  %r557,  %r558,  %r559},{%r568,  %r569},{%f513, %f514, %f515, %f516};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f585,  %f586,  %f587,  %f588},{%r556,  %r557,  %r558,  %r559},{%r571,  %r572},{%f521, %f522, %f523, %f524};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f593,  %f594,  %f595,  %f596},{%r561,  %r562,  %r563,  %r564},{%r571,  %r572},{%f529, %f530, %f531, %f532};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f601,  %f602,  %f603,  %f604},{%r561,  %r562,  %r563,  %r564},{%r573,  %r574},{%f537, %f538, %f539, %f540};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f609,  %f610,  %f611,  %f612},{%r556,  %r557,  %r558,  %r559},{%r573,  %r574},{%f545, %f546, %f547, %f548};

	// end inline asm
	bar.sync 	0;
	selp.f32 	%f617, 0f00000000, %f553, %p5;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs105, %f617;}

	// end inline asm
	st.shared.u16 	[%r2773+18432], %rs105;
	selp.f32 	%f618, %f554, 0f00000000, %p6;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs106, %f618;}

	// end inline asm
	st.shared.u16 	[%r2785+18434], %rs106;
	selp.f32 	%f619, 0f00000000, %f555, %p7;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs107, %f619;}

	// end inline asm
	st.shared.u16 	[%r2773+19456], %rs107;
	selp.f32 	%f620, %f556, 0f00000000, %p8;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs108, %f620;}

	// end inline asm
	st.shared.u16 	[%r2785+19458], %rs108;
	selp.f32 	%f621, 0f00000000, %f561, %p9;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs109, %f621;}

	// end inline asm
	st.shared.u16 	[%r2773+22528], %rs109;
	selp.f32 	%f622, %f562, 0f00000000, %p10;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs110, %f622;}

	// end inline asm
	st.shared.u16 	[%r2785+22530], %rs110;
	selp.f32 	%f623, 0f00000000, %f563, %p11;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs111, %f623;}

	// end inline asm
	st.shared.u16 	[%r2773+23552], %rs111;
	selp.f32 	%f624, %f564, 0f00000000, %p12;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs112, %f624;}

	// end inline asm
	st.shared.u16 	[%r2785+23554], %rs112;
	selp.f32 	%f625, 0f00000000, %f577, %p13;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs113, %f625;}

	// end inline asm
	st.shared.u16 	[%r2801+18432], %rs113;
	selp.f32 	%f626, 0f00000000, %f578, %p14;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs114, %f626;}

	// end inline asm
	st.shared.u16 	[%r2813+18434], %rs114;
	selp.f32 	%f627, 0f00000000, %f579, %p15;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs115, %f627;}

	// end inline asm
	st.shared.u16 	[%r2801+19456], %rs115;
	selp.f32 	%f628, 0f00000000, %f580, %p16;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs116, %f628;}

	// end inline asm
	st.shared.u16 	[%r2813+19458], %rs116;
	selp.f32 	%f629, 0f00000000, %f569, %p17;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs117, %f629;}

	// end inline asm
	st.shared.u16 	[%r2801+22528], %rs117;
	selp.f32 	%f630, 0f00000000, %f570, %p18;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs118, %f630;}

	// end inline asm
	st.shared.u16 	[%r2813+22530], %rs118;
	selp.f32 	%f631, 0f00000000, %f571, %p19;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs119, %f631;}

	// end inline asm
	st.shared.u16 	[%r2801+23552], %rs119;
	selp.f32 	%f632, 0f00000000, %f572, %p20;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs120, %f632;}

	// end inline asm
	st.shared.u16 	[%r2813+23554], %rs120;
	selp.f32 	%f633, 0f00000000, %f585, %p21;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs121, %f633;}

	// end inline asm
	st.shared.u16 	[%r2825+18432], %rs121;
	selp.f32 	%f634, 0f00000000, %f586, %p22;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs122, %f634;}

	// end inline asm
	st.shared.u16 	[%r2837+18434], %rs122;
	selp.f32 	%f635, 0f00000000, %f587, %p23;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs123, %f635;}

	// end inline asm
	st.shared.u16 	[%r2825+19456], %rs123;
	selp.f32 	%f636, 0f00000000, %f588, %p24;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs124, %f636;}

	// end inline asm
	st.shared.u16 	[%r2837+19458], %rs124;
	selp.f32 	%f637, 0f00000000, %f593, %p25;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs125, %f637;}

	// end inline asm
	st.shared.u16 	[%r2825+22528], %rs125;
	selp.f32 	%f638, 0f00000000, %f594, %p26;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs126, %f638;}

	// end inline asm
	st.shared.u16 	[%r2837+22530], %rs126;
	selp.f32 	%f639, 0f00000000, %f595, %p27;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs127, %f639;}

	// end inline asm
	st.shared.u16 	[%r2825+23552], %rs127;
	selp.f32 	%f640, 0f00000000, %f596, %p28;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs128, %f640;}

	// end inline asm
	st.shared.u16 	[%r2837+23554], %rs128;
	selp.f32 	%f641, 0f00000000, %f609, %p29;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs129, %f641;}

	// end inline asm
	st.shared.u16 	[%r2849+18432], %rs129;
	selp.f32 	%f642, 0f00000000, %f610, %p30;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs130, %f642;}

	// end inline asm
	st.shared.u16 	[%r2861+18434], %rs130;
	selp.f32 	%f643, 0f00000000, %f611, %p31;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs131, %f643;}

	// end inline asm
	st.shared.u16 	[%r2849+19456], %rs131;
	selp.f32 	%f644, 0f00000000, %f612, %p32;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs132, %f644;}

	// end inline asm
	st.shared.u16 	[%r2861+19458], %rs132;
	selp.f32 	%f645, 0f00000000, %f601, %p33;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs133, %f645;}

	// end inline asm
	st.shared.u16 	[%r2849+22528], %rs133;
	selp.f32 	%f646, 0f00000000, %f602, %p34;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs134, %f646;}

	// end inline asm
	st.shared.u16 	[%r2861+22530], %rs134;
	selp.f32 	%f647, 0f00000000, %f603, %p35;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs135, %f647;}

	// end inline asm
	st.shared.u16 	[%r2849+23552], %rs135;
	selp.f32 	%f648, 0f00000000, %f604, %p36;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs136, %f648;}

	// end inline asm
	st.shared.u16 	[%r2861+23554], %rs136;
	// begin inline asm
	cp.async.wait_all;

	// end inline asm
	bar.sync 	0;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r624, %r625, %r626, %r627}, [%r170];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r629, %r630, %r631, %r632}, [%r175];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r634, %r635, %r636, %r637}, [%r867];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f649,  %f650,  %f651,  %f652},{%r624,  %r625,  %r626,  %r627},{%r634,  %r635},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f657,  %f658,  %f659,  %f660},{%r629,  %r630,  %r631,  %r632},{%r634,  %r635},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f665,  %f666,  %f667,  %f668},{%r629,  %r630,  %r631,  %r632},{%r636,  %r637},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f673,  %f674,  %f675,  %f676},{%r624,  %r625,  %r626,  %r627},{%r636,  %r637},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r663, %r664, %r665, %r666}, [%r2335];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r668, %r669, %r670, %r671}, [%r2340];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r673, %r674, %r675, %r676}, [%r889];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f681,  %f682,  %f683,  %f684},{%r663,  %r664,  %r665,  %r666},{%r673,  %r674},{%f649, %f650, %f651, %f652};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f689,  %f690,  %f691,  %f692},{%r668,  %r669,  %r670,  %r671},{%r673,  %r674},{%f657, %f658, %f659, %f660};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f697,  %f698,  %f699,  %f700},{%r668,  %r669,  %r670,  %r671},{%r675,  %r676},{%f665, %f666, %f667, %f668};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f705,  %f706,  %f707,  %f708},{%r663,  %r664,  %r665,  %r666},{%r675,  %r676},{%f673, %f674, %f675, %f676};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r702, %r703, %r704, %r705}, [%r2374];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r707, %r708, %r709, %r710}, [%r2379];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r712, %r713, %r714, %r715}, [%r911];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f713,  %f714,  %f715,  %f716},{%r702,  %r703,  %r704,  %r705},{%r712,  %r713},{%f681, %f682, %f683, %f684};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f721,  %f722,  %f723,  %f724},{%r707,  %r708,  %r709,  %r710},{%r712,  %r713},{%f689, %f690, %f691, %f692};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f729,  %f730,  %f731,  %f732},{%r707,  %r708,  %r709,  %r710},{%r714,  %r715},{%f697, %f698, %f699, %f700};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f737,  %f738,  %f739,  %f740},{%r702,  %r703,  %r704,  %r705},{%r714,  %r715},{%f705, %f706, %f707, %f708};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r741, %r742, %r743, %r744}, [%r2413];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r746, %r747, %r748, %r749}, [%r2418];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r751, %r752, %r753, %r754}, [%r933];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f745,  %f746,  %f747,  %f748},{%r741,  %r742,  %r743,  %r744},{%r751,  %r752},{%f713, %f714, %f715, %f716};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f753,  %f754,  %f755,  %f756},{%r746,  %r747,  %r748,  %r749},{%r751,  %r752},{%f721, %f722, %f723, %f724};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f761,  %f762,  %f763,  %f764},{%r746,  %r747,  %r748,  %r749},{%r753,  %r754},{%f729, %f730, %f731, %f732};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f769,  %f770,  %f771,  %f772},{%r741,  %r742,  %r743,  %r744},{%r753,  %r754},{%f737, %f738, %f739, %f740};

	// end inline asm
	bar.sync 	0;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs137, %f425;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f778, %rs137;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs140, %f426;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f781, %rs140;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs142, %f781;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs139, %f778;}

	// end inline asm
	st.shared.v2.u16 	[%r2900+12288], {%rs139, %rs142};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs143, %f427;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f784, %rs143;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs146, %f428;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f787, %rs146;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs148, %f787;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs145, %f784;}

	// end inline asm
	st.shared.v2.u16 	[%r2900+12800], {%rs145, %rs148};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs149, %f433;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f790, %rs149;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs152, %f434;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f793, %rs152;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs154, %f793;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs151, %f790;}

	// end inline asm
	st.shared.v2.u16 	[%r2906+12288], {%rs151, %rs154};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs155, %f435;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f796, %rs155;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs158, %f436;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f799, %rs158;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs160, %f799;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs157, %f796;}

	// end inline asm
	st.shared.v2.u16 	[%r2906+12800], {%rs157, %rs160};
	// begin inline asm
	cp.async.wait_group 1;

	// end inline asm
	bar.sync 	0;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r780, %r781, %r782, %r783}, [%r784];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r785, %r786, %r787, %r788}, [%r789];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r790, %r791, %r792, %r793}, [%r336];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f801,  %f802,  %f803,  %f804},{%r780,  %r781,  %r782,  %r783},{%r790,  %r791},{%f745, %f746, %f747, %f748};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f809,  %f810,  %f811,  %f812},{%r785,  %r786,  %r787,  %r788},{%r790,  %r791},{%f753, %f754, %f755, %f756};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f817,  %f818,  %f819,  %f820},{%r785,  %r786,  %r787,  %r788},{%r792,  %r793},{%f761, %f762, %f763, %f764};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f825,  %f826,  %f827,  %f828},{%r780,  %r781,  %r782,  %r783},{%r792,  %r793},{%f769, %f770, %f771, %f772};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r819, %r820, %r821, %r822}, [%r823];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r824, %r825, %r826, %r827}, [%r828];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r829, %r830, %r831, %r832}, [%r375];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f833,  %f834,  %f835,  %f836},{%r819,  %r820,  %r821,  %r822},{%r829,  %r830},{%f801, %f802, %f803, %f804};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f841,  %f842,  %f843,  %f844},{%r824,  %r825,  %r826,  %r827},{%r829,  %r830},{%f809, %f810, %f811, %f812};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f849,  %f850,  %f851,  %f852},{%r824,  %r825,  %r826,  %r827},{%r831,  %r832},{%f817, %f818, %f819, %f820};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f857,  %f858,  %f859,  %f860},{%r819,  %r820,  %r821,  %r822},{%r831,  %r832},{%f825, %f826, %f827, %f828};

	// end inline asm
	// begin inline asm
	cp.async.wait_all;

	// end inline asm
	bar.sync 	0;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r858, %r859, %r860, %r861}, [%r862];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r863, %r864, %r865, %r866}, [%r867];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f865,  %f866,  %f867,  %f868},{%r858,  %r859,  %r860,  %r861},{%r863,  %r864},{%f425, %f426, %f427, %f428};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f873,  %f874,  %f875,  %f876},{%r858,  %r859,  %r860,  %r861},{%r865,  %r866},{%f433, %f434, %f435, %f436};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r880, %r881, %r882, %r883}, [%r884];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r885, %r886, %r887, %r888}, [%r889];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f881,  %f882,  %f883,  %f884},{%r880,  %r881,  %r882,  %r883},{%r885,  %r886},{%f865, %f866, %f867, %f868};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f889,  %f890,  %f891,  %f892},{%r880,  %r881,  %r882,  %r883},{%r887,  %r888},{%f873, %f874, %f875, %f876};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r902, %r903, %r904, %r905}, [%r906];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r907, %r908, %r909, %r910}, [%r911];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f897,  %f898,  %f899,  %f900},{%r902,  %r903,  %r904,  %r905},{%r907,  %r908},{%f881, %f882, %f883, %f884};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f905,  %f906,  %f907,  %f908},{%r902,  %r903,  %r904,  %r905},{%r909,  %r910},{%f889, %f890, %f891, %f892};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r924, %r925, %r926, %r927}, [%r928];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r929, %r930, %r931, %r932}, [%r933];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f913,  %f914,  %f915,  %f916},{%r924,  %r925,  %r926,  %r927},{%r929,  %r930},{%f897, %f898, %f899, %f900};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f921,  %f922,  %f923,  %f924},{%r924,  %r925,  %r926,  %r927},{%r931,  %r932},{%f905, %f906, %f907, %f908};

	// end inline asm
	mul.f32 	%f929, %f833, 0f3E000000;
	mul.f32 	%f932, %f834, 0f3E000000;
	mul.f32 	%f935, %f835, 0f3E000000;
	mul.f32 	%f938, %f836, 0f3E000000;
	mul.f32 	%f941, %f841, 0f3E000000;
	mul.f32 	%f944, %f842, 0f3E000000;
	mul.f32 	%f947, %f843, 0f3E000000;
	mul.f32 	%f950, %f844, 0f3E000000;
	mul.f32 	%f953, %f857, 0f3E000000;
	mul.f32 	%f956, %f858, 0f3E000000;
	mul.f32 	%f959, %f859, 0f3E000000;
	mul.f32 	%f962, %f860, 0f3E000000;
	mul.f32 	%f965, %f849, 0f3E000000;
	mul.f32 	%f968, %f850, 0f3E000000;
	mul.f32 	%f971, %f851, 0f3E000000;
	mul.f32 	%f974, %f852, 0f3E000000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs161, %f929;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f930, %rs161;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs164, %f932;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f933, %rs164;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs166, %f933;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs163, %f930;}

	// end inline asm
	st.global.v2.u16 	[%rd45+32768], {%rs163, %rs166};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs167, %f935;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f936, %rs167;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs170, %f938;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f939, %rs170;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs172, %f939;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs169, %f936;}

	// end inline asm
	st.global.v2.u16 	[%rd45+36864], {%rs169, %rs172};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs173, %f941;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f942, %rs173;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs176, %f944;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f945, %rs176;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs178, %f945;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs175, %f942;}

	// end inline asm
	st.global.v2.u16 	[%rd45+49152], {%rs175, %rs178};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs179, %f947;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f948, %rs179;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs182, %f950;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f951, %rs182;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs184, %f951;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs181, %f948;}

	// end inline asm
	st.global.v2.u16 	[%rd45+53248], {%rs181, %rs184};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs185, %f953;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f954, %rs185;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs188, %f956;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f957, %rs188;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs190, %f957;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs187, %f954;}

	// end inline asm
	st.global.v2.u16 	[%rd45+32800], {%rs187, %rs190};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs191, %f959;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f960, %rs191;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs194, %f962;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f963, %rs194;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs196, %f963;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs193, %f960;}

	// end inline asm
	st.global.v2.u16 	[%rd45+36896], {%rs193, %rs196};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs197, %f965;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f966, %rs197;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs200, %f968;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f969, %rs200;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs202, %f969;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs199, %f966;}

	// end inline asm
	st.global.v2.u16 	[%rd45+49184], {%rs199, %rs202};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs203, %f971;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f972, %rs203;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs206, %f974;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f975, %rs206;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs208, %f975;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs205, %f972;}

	// end inline asm
	st.global.v2.u16 	[%rd45+53280], {%rs205, %rs208};
	bar.sync 	0;
	// begin inline asm
	cp.async.cg.shared.global [%r1322], [%rd20], 16;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [%r1323], [%rd21], 16;
	// end inline asm
	// begin inline asm
	cp.async.commit_group;

	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [%r1694], [%rd22], 16;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [%r1695], [%rd23], 16;
	// end inline asm
	// begin inline asm
	cp.async.commit_group;

	// end inline asm
	shl.b32 	%r2926, %r2624, 5;
	shl.b32 	%r2927, %r2629, 4;
	and.b32  	%r2928, %r2927, 16;
	shl.b32 	%r2929, %r2634, 3;
	and.b32  	%r2930, %r2929, 8;
	add.s64 	%rd46, %rd34, %rd38;
	ld.global.nc.v4.u32 	{%r2931, %r2932, %r2933, %r2934}, [%rd46+32768];
	mov.b32 	{%rs209, %rs210}, %r2931;
	// begin inline asm
	{  cvt.f32.f16 %f977, %rs209;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f978, %rs210;}

	// end inline asm
	mov.b32 	{%rs211, %rs212}, %r2932;
	// begin inline asm
	{  cvt.f32.f16 %f979, %rs211;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f980, %rs212;}

	// end inline asm
	mov.b32 	{%rs213, %rs214}, %r2933;
	// begin inline asm
	{  cvt.f32.f16 %f981, %rs213;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f982, %rs214;}

	// end inline asm
	mov.b32 	{%rs215, %rs216}, %r2934;
	// begin inline asm
	{  cvt.f32.f16 %f983, %rs215;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f984, %rs216;}

	// end inline asm
	mul.f32 	%f985, %f977, 0f3E000000;
	mul.f32 	%f988, %f978, 0f3E000000;
	mul.f32 	%f991, %f979, 0f3E000000;
	mul.f32 	%f994, %f980, 0f3E000000;
	mul.f32 	%f997, %f981, 0f3E000000;
	mul.f32 	%f1000, %f982, 0f3E000000;
	mul.f32 	%f1003, %f983, 0f3E000000;
	mul.f32 	%f1006, %f984, 0f3E000000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs217, %f985;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f986, %rs217;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs220, %f988;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f989, %rs220;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs223, %f991;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f992, %rs223;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs226, %f994;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f995, %rs226;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs229, %f997;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f998, %rs229;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs232, %f1000;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1001, %rs232;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs235, %f1003;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1004, %rs235;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs238, %f1006;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1007, %rs238;}

	// end inline asm
	or.b32  	%r2939, %r2930, %r2926;
	or.b32  	%r2940, %r2939, %r2928;
	shl.b32 	%r2941, %r2940, 1;
	add.s32 	%r2942, %r2653, %r2941;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs222, %f989;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs219, %f986;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs228, %f995;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs225, %f992;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs234, %f1001;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs231, %f998;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs240, %f1007;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs237, %f1004;}

	// end inline asm
	mov.b32 	%r2943, {%rs237, %rs240};
	mov.b32 	%r2944, {%rs231, %rs234};
	mov.b32 	%r2945, {%rs225, %rs228};
	mov.b32 	%r2946, {%rs219, %rs222};
	st.shared.v4.u32 	[%r2942+10240], {%r2946, %r2945, %r2944, %r2943};
	ld.global.nc.v4.u32 	{%r2947, %r2948, %r2949, %r2950}, [%rd46+49152];
	mov.b32 	{%rs241, %rs242}, %r2947;
	// begin inline asm
	{  cvt.f32.f16 %f1009, %rs241;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1010, %rs242;}

	// end inline asm
	mov.b32 	{%rs243, %rs244}, %r2948;
	// begin inline asm
	{  cvt.f32.f16 %f1011, %rs243;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1012, %rs244;}

	// end inline asm
	mov.b32 	{%rs245, %rs246}, %r2949;
	// begin inline asm
	{  cvt.f32.f16 %f1013, %rs245;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1014, %rs246;}

	// end inline asm
	mov.b32 	{%rs247, %rs248}, %r2950;
	// begin inline asm
	{  cvt.f32.f16 %f1015, %rs247;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1016, %rs248;}

	// end inline asm
	mul.f32 	%f1017, %f1009, 0f3E000000;
	mul.f32 	%f1020, %f1010, 0f3E000000;
	mul.f32 	%f1023, %f1011, 0f3E000000;
	mul.f32 	%f1026, %f1012, 0f3E000000;
	mul.f32 	%f1029, %f1013, 0f3E000000;
	mul.f32 	%f1032, %f1014, 0f3E000000;
	mul.f32 	%f1035, %f1015, 0f3E000000;
	mul.f32 	%f1038, %f1016, 0f3E000000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs249, %f1017;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1018, %rs249;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs252, %f1020;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1021, %rs252;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs255, %f1023;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1024, %rs255;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs258, %f1026;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1027, %rs258;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs261, %f1029;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1030, %rs261;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs264, %f1032;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1033, %rs264;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs267, %f1035;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1036, %rs267;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs270, %f1038;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1039, %rs270;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs254, %f1021;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs251, %f1018;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs260, %f1027;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs257, %f1024;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs266, %f1033;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs263, %f1030;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs272, %f1039;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs269, %f1036;}

	// end inline asm
	mov.b32 	%r2955, {%rs269, %rs272};
	mov.b32 	%r2956, {%rs263, %rs266};
	mov.b32 	%r2957, {%rs257, %rs260};
	mov.b32 	%r2958, {%rs251, %rs254};
	st.shared.v4.u32 	[%r2942+12288], {%r2958, %r2957, %r2956, %r2955};
	// begin inline asm
	cp.async.cg.shared.global [%r1784], [%rd24], 16;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [%r1785], [%rd25], 16;
	// end inline asm
	// begin inline asm
	cp.async.commit_group;

	// end inline asm
	// begin inline asm
	cp.async.wait_all;

	// end inline asm
	bar.sync 	0;
	add.s32 	%r2082, %r2742, %r2739;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r952, %r953, %r954, %r955}, [%r2082];

	// end inline asm
	add.s32 	%r2087, %r2082, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r957, %r958, %r959, %r960}, [%r2087];

	// end inline asm
	add.s32 	%r1800, %r2740, %r2741;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r962, %r963, %r964, %r965}, [%r1800];

	// end inline asm
	add.s32 	%r1805, %r1800, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r967, %r968, %r969, %r970}, [%r1805];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1041,  %f1042,  %f1043,  %f1044},{%r952,  %r953,  %r954,  %r955},{%r962,  %r963},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1049,  %f1050,  %f1051,  %f1052},{%r957,  %r958,  %r959,  %r960},{%r962,  %r963},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1057,  %f1058,  %f1059,  %f1060},{%r957,  %r958,  %r959,  %r960},{%r964,  %r965},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1065,  %f1066,  %f1067,  %f1068},{%r952,  %r953,  %r954,  %r955},{%r964,  %r965},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1073,  %f1074,  %f1075,  %f1076},{%r952,  %r953,  %r954,  %r955},{%r967,  %r968},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1081,  %f1082,  %f1083,  %f1084},{%r957,  %r958,  %r959,  %r960},{%r967,  %r968},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1089,  %f1090,  %f1091,  %f1092},{%r957,  %r958,  %r959,  %r960},{%r969,  %r970},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1097,  %f1098,  %f1099,  %f1100},{%r952,  %r953,  %r954,  %r955},{%r969,  %r970},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	add.s32 	%r2121, %r2082, %r2743;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1020, %r1021, %r1022, %r1023}, [%r2121];

	// end inline asm
	add.s32 	%r2126, %r2121, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1025, %r1026, %r1027, %r1028}, [%r2126];

	// end inline asm
	add.s32 	%r1868, %r1800, %r2744;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1030, %r1031, %r1032, %r1033}, [%r1868];

	// end inline asm
	add.s32 	%r1873, %r1868, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1035, %r1036, %r1037, %r1038}, [%r1873];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1105,  %f1106,  %f1107,  %f1108},{%r1020,  %r1021,  %r1022,  %r1023},{%r1030,  %r1031},{%f1041, %f1042, %f1043, %f1044};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1113,  %f1114,  %f1115,  %f1116},{%r1025,  %r1026,  %r1027,  %r1028},{%r1030,  %r1031},{%f1049, %f1050, %f1051, %f1052};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1121,  %f1122,  %f1123,  %f1124},{%r1025,  %r1026,  %r1027,  %r1028},{%r1032,  %r1033},{%f1057, %f1058, %f1059, %f1060};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1129,  %f1130,  %f1131,  %f1132},{%r1020,  %r1021,  %r1022,  %r1023},{%r1032,  %r1033},{%f1065, %f1066, %f1067, %f1068};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1137,  %f1138,  %f1139,  %f1140},{%r1020,  %r1021,  %r1022,  %r1023},{%r1035,  %r1036},{%f1073, %f1074, %f1075, %f1076};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1145,  %f1146,  %f1147,  %f1148},{%r1025,  %r1026,  %r1027,  %r1028},{%r1035,  %r1036},{%f1081, %f1082, %f1083, %f1084};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1153,  %f1154,  %f1155,  %f1156},{%r1025,  %r1026,  %r1027,  %r1028},{%r1037,  %r1038},{%f1089, %f1090, %f1091, %f1092};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1161,  %f1162,  %f1163,  %f1164},{%r1020,  %r1021,  %r1022,  %r1023},{%r1037,  %r1038},{%f1097, %f1098, %f1099, %f1100};

	// end inline asm
	bar.sync 	0;
	selp.f32 	%f1169, 0f00000000, %f1105, %p6;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs273, %f1169;}

	// end inline asm
	st.shared.u16 	[%r2773+18432], %rs273;
	setp.gt.s32 	%p39, %r2754, %r2774;
	selp.f32 	%f1170, 0f00000000, %f1106, %p39;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs274, %f1170;}

	// end inline asm
	st.shared.u16 	[%r2785+18434], %rs274;
	selp.f32 	%f1171, 0f00000000, %f1107, %p8;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs275, %f1171;}

	// end inline asm
	st.shared.u16 	[%r2773+19456], %rs275;
	setp.gt.s32 	%p40, %r2786, %r2774;
	selp.f32 	%f1172, 0f00000000, %f1108, %p40;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs276, %f1172;}

	// end inline asm
	st.shared.u16 	[%r2785+19458], %rs276;
	selp.f32 	%f1173, 0f00000000, %f1113, %p10;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs277, %f1173;}

	// end inline asm
	st.shared.u16 	[%r2773+22528], %rs277;
	setp.gt.s32 	%p41, %r2787, %r2774;
	selp.f32 	%f1174, 0f00000000, %f1114, %p41;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs278, %f1174;}

	// end inline asm
	st.shared.u16 	[%r2785+22530], %rs278;
	selp.f32 	%f1175, 0f00000000, %f1115, %p12;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs279, %f1175;}

	// end inline asm
	st.shared.u16 	[%r2773+23552], %rs279;
	setp.gt.s32 	%p42, %r2788, %r2774;
	selp.f32 	%f1176, 0f00000000, %f1116, %p42;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs280, %f1176;}

	// end inline asm
	st.shared.u16 	[%r2785+23554], %rs280;
	setp.gt.s32 	%p43, %r2754, %r2789;
	selp.f32 	%f1177, 0f00000000, %f1129, %p43;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs281, %f1177;}

	// end inline asm
	st.shared.u16 	[%r2801+18432], %rs281;
	setp.gt.s32 	%p44, %r2754, %r2802;
	selp.f32 	%f1178, 0f00000000, %f1130, %p44;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs282, %f1178;}

	// end inline asm
	st.shared.u16 	[%r2813+18434], %rs282;
	setp.gt.s32 	%p45, %r2786, %r2789;
	selp.f32 	%f1179, 0f00000000, %f1131, %p45;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs283, %f1179;}

	// end inline asm
	st.shared.u16 	[%r2801+19456], %rs283;
	setp.gt.s32 	%p46, %r2786, %r2802;
	selp.f32 	%f1180, 0f00000000, %f1132, %p46;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs284, %f1180;}

	// end inline asm
	st.shared.u16 	[%r2813+19458], %rs284;
	setp.gt.s32 	%p47, %r2787, %r2789;
	selp.f32 	%f1181, 0f00000000, %f1121, %p47;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs285, %f1181;}

	// end inline asm
	st.shared.u16 	[%r2801+22528], %rs285;
	setp.gt.s32 	%p48, %r2787, %r2802;
	selp.f32 	%f1182, 0f00000000, %f1122, %p48;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs286, %f1182;}

	// end inline asm
	st.shared.u16 	[%r2813+22530], %rs286;
	setp.gt.s32 	%p49, %r2788, %r2789;
	selp.f32 	%f1183, 0f00000000, %f1123, %p49;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs287, %f1183;}

	// end inline asm
	st.shared.u16 	[%r2801+23552], %rs287;
	setp.gt.s32 	%p50, %r2788, %r2802;
	selp.f32 	%f1184, 0f00000000, %f1124, %p50;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs288, %f1184;}

	// end inline asm
	st.shared.u16 	[%r2813+23554], %rs288;
	setp.gt.s32 	%p51, %r2754, %r2814;
	selp.f32 	%f1185, 0f00000000, %f1137, %p51;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs289, %f1185;}

	// end inline asm
	st.shared.u16 	[%r2825+18432], %rs289;
	setp.gt.s32 	%p52, %r2754, %r2826;
	selp.f32 	%f1186, 0f00000000, %f1138, %p52;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs290, %f1186;}

	// end inline asm
	st.shared.u16 	[%r2837+18434], %rs290;
	setp.gt.s32 	%p53, %r2786, %r2814;
	selp.f32 	%f1187, 0f00000000, %f1139, %p53;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs291, %f1187;}

	// end inline asm
	st.shared.u16 	[%r2825+19456], %rs291;
	setp.gt.s32 	%p54, %r2786, %r2826;
	selp.f32 	%f1188, 0f00000000, %f1140, %p54;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs292, %f1188;}

	// end inline asm
	st.shared.u16 	[%r2837+19458], %rs292;
	setp.gt.s32 	%p55, %r2787, %r2814;
	selp.f32 	%f1189, 0f00000000, %f1145, %p55;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs293, %f1189;}

	// end inline asm
	st.shared.u16 	[%r2825+22528], %rs293;
	setp.gt.s32 	%p56, %r2787, %r2826;
	selp.f32 	%f1190, 0f00000000, %f1146, %p56;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs294, %f1190;}

	// end inline asm
	st.shared.u16 	[%r2837+22530], %rs294;
	setp.gt.s32 	%p57, %r2788, %r2814;
	selp.f32 	%f1191, 0f00000000, %f1147, %p57;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs295, %f1191;}

	// end inline asm
	st.shared.u16 	[%r2825+23552], %rs295;
	setp.gt.s32 	%p58, %r2788, %r2826;
	selp.f32 	%f1192, 0f00000000, %f1148, %p58;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs296, %f1192;}

	// end inline asm
	st.shared.u16 	[%r2837+23554], %rs296;
	setp.gt.s32 	%p59, %r2754, %r2838;
	selp.f32 	%f1193, 0f00000000, %f1161, %p59;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs297, %f1193;}

	// end inline asm
	st.shared.u16 	[%r2849+18432], %rs297;
	setp.gt.s32 	%p60, %r2754, %r2850;
	selp.f32 	%f1194, 0f00000000, %f1162, %p60;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs298, %f1194;}

	// end inline asm
	st.shared.u16 	[%r2861+18434], %rs298;
	setp.gt.s32 	%p61, %r2786, %r2838;
	selp.f32 	%f1195, 0f00000000, %f1163, %p61;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs299, %f1195;}

	// end inline asm
	st.shared.u16 	[%r2849+19456], %rs299;
	setp.gt.s32 	%p62, %r2786, %r2850;
	selp.f32 	%f1196, 0f00000000, %f1164, %p62;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs300, %f1196;}

	// end inline asm
	st.shared.u16 	[%r2861+19458], %rs300;
	setp.gt.s32 	%p63, %r2787, %r2838;
	selp.f32 	%f1197, 0f00000000, %f1153, %p63;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs301, %f1197;}

	// end inline asm
	st.shared.u16 	[%r2849+22528], %rs301;
	setp.gt.s32 	%p64, %r2787, %r2850;
	selp.f32 	%f1198, 0f00000000, %f1154, %p64;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs302, %f1198;}

	// end inline asm
	st.shared.u16 	[%r2861+22530], %rs302;
	setp.gt.s32 	%p65, %r2788, %r2838;
	selp.f32 	%f1199, 0f00000000, %f1155, %p65;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs303, %f1199;}

	// end inline asm
	st.shared.u16 	[%r2849+23552], %rs303;
	setp.gt.s32 	%p66, %r2788, %r2850;
	selp.f32 	%f1200, 0f00000000, %f1156, %p66;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs304, %f1200;}

	// end inline asm
	st.shared.u16 	[%r2861+23554], %rs304;
	// begin inline asm
	cp.async.wait_all;

	// end inline asm
	bar.sync 	0;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1088, %r1089, %r1090, %r1091}, [%r170];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1093, %r1094, %r1095, %r1096}, [%r175];

	// end inline asm
	add.s32 	%r2959, %r2653, 10240;
	add.s32 	%r1936, %r2959, %r2885;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r1098, %r1099, %r1100, %r1101}, [%r1936];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1201,  %f1202,  %f1203,  %f1204},{%r1088,  %r1089,  %r1090,  %r1091},{%r1098,  %r1099},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1209,  %f1210,  %f1211,  %f1212},{%r1093,  %r1094,  %r1095,  %r1096},{%r1098,  %r1099},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1217,  %f1218,  %f1219,  %f1220},{%r1093,  %r1094,  %r1095,  %r1096},{%r1100,  %r1101},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1225,  %f1226,  %f1227,  %f1228},{%r1088,  %r1089,  %r1090,  %r1091},{%r1100,  %r1101},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1127, %r1128, %r1129, %r1130}, [%r2335];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1132, %r1133, %r1134, %r1135}, [%r2340];

	// end inline asm
	add.s32 	%r1975, %r1936, 1024;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r1137, %r1138, %r1139, %r1140}, [%r1975];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1233,  %f1234,  %f1235,  %f1236},{%r1127,  %r1128,  %r1129,  %r1130},{%r1137,  %r1138},{%f1201, %f1202, %f1203, %f1204};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1241,  %f1242,  %f1243,  %f1244},{%r1132,  %r1133,  %r1134,  %r1135},{%r1137,  %r1138},{%f1209, %f1210, %f1211, %f1212};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1249,  %f1250,  %f1251,  %f1252},{%r1132,  %r1133,  %r1134,  %r1135},{%r1139,  %r1140},{%f1217, %f1218, %f1219, %f1220};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1257,  %f1258,  %f1259,  %f1260},{%r1127,  %r1128,  %r1129,  %r1130},{%r1139,  %r1140},{%f1225, %f1226, %f1227, %f1228};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1166, %r1167, %r1168, %r1169}, [%r2374];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1171, %r1172, %r1173, %r1174}, [%r2379];

	// end inline asm
	add.s32 	%r2014, %r1936, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r1176, %r1177, %r1178, %r1179}, [%r2014];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1265,  %f1266,  %f1267,  %f1268},{%r1166,  %r1167,  %r1168,  %r1169},{%r1176,  %r1177},{%f1233, %f1234, %f1235, %f1236};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1273,  %f1274,  %f1275,  %f1276},{%r1171,  %r1172,  %r1173,  %r1174},{%r1176,  %r1177},{%f1241, %f1242, %f1243, %f1244};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1281,  %f1282,  %f1283,  %f1284},{%r1171,  %r1172,  %r1173,  %r1174},{%r1178,  %r1179},{%f1249, %f1250, %f1251, %f1252};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1289,  %f1290,  %f1291,  %f1292},{%r1166,  %r1167,  %r1168,  %r1169},{%r1178,  %r1179},{%f1257, %f1258, %f1259, %f1260};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1205, %r1206, %r1207, %r1208}, [%r2413];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1210, %r1211, %r1212, %r1213}, [%r2418];

	// end inline asm
	add.s32 	%r2053, %r1936, 3072;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r1215, %r1216, %r1217, %r1218}, [%r2053];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1297,  %f1298,  %f1299,  %f1300},{%r1205,  %r1206,  %r1207,  %r1208},{%r1215,  %r1216},{%f1265, %f1266, %f1267, %f1268};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1305,  %f1306,  %f1307,  %f1308},{%r1210,  %r1211,  %r1212,  %r1213},{%r1215,  %r1216},{%f1273, %f1274, %f1275, %f1276};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1313,  %f1314,  %f1315,  %f1316},{%r1210,  %r1211,  %r1212,  %r1213},{%r1217,  %r1218},{%f1281, %f1282, %f1283, %f1284};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1321,  %f1322,  %f1323,  %f1324},{%r1205,  %r1206,  %r1207,  %r1208},{%r1217,  %r1218},{%f1289, %f1290, %f1291, %f1292};

	// end inline asm
	bar.sync 	0;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs305, %f2560;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1330, %rs305;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs308, %f2560;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1333, %rs308;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs310, %f1333;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs307, %f1330;}

	// end inline asm
	st.shared.v2.u16 	[%r2900], {%rs307, %rs310};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs311, %f2560;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1336, %rs311;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs314, %f2560;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1339, %rs314;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs316, %f1339;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs313, %f1336;}

	// end inline asm
	st.shared.v2.u16 	[%r2900+512], {%rs313, %rs316};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs317, %f2560;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1342, %rs317;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs320, %f2560;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1345, %rs320;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs322, %f1345;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs319, %f1342;}

	// end inline asm
	st.shared.v2.u16 	[%r2906], {%rs319, %rs322};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs323, %f2560;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1348, %rs323;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs326, %f2560;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1351, %rs326;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs328, %f1351;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs325, %f1348;}

	// end inline asm
	st.shared.v2.u16 	[%r2906+512], {%rs325, %rs328};
	// begin inline asm
	cp.async.wait_group 2;

	// end inline asm
	bar.sync 	0;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1244, %r1245, %r1246, %r1247}, [%r2082];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1249, %r1250, %r1251, %r1252}, [%r2087];

	// end inline asm
	add.s32 	%r2092, %r2653, %r2741;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1254, %r1255, %r1256, %r1257}, [%r2092];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1353,  %f1354,  %f1355,  %f1356},{%r1244,  %r1245,  %r1246,  %r1247},{%r1254,  %r1255},{%f1297, %f1298, %f1299, %f1300};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1361,  %f1362,  %f1363,  %f1364},{%r1249,  %r1250,  %r1251,  %r1252},{%r1254,  %r1255},{%f1305, %f1306, %f1307, %f1308};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1369,  %f1370,  %f1371,  %f1372},{%r1249,  %r1250,  %r1251,  %r1252},{%r1256,  %r1257},{%f1313, %f1314, %f1315, %f1316};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1377,  %f1378,  %f1379,  %f1380},{%r1244,  %r1245,  %r1246,  %r1247},{%r1256,  %r1257},{%f1321, %f1322, %f1323, %f1324};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1283, %r1284, %r1285, %r1286}, [%r2121];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1288, %r1289, %r1290, %r1291}, [%r2126];

	// end inline asm
	add.s32 	%r2131, %r2092, %r2744;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1293, %r1294, %r1295, %r1296}, [%r2131];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1385,  %f1386,  %f1387,  %f1388},{%r1283,  %r1284,  %r1285,  %r1286},{%r1293,  %r1294},{%f1353, %f1354, %f1355, %f1356};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1393,  %f1394,  %f1395,  %f1396},{%r1288,  %r1289,  %r1290,  %r1291},{%r1293,  %r1294},{%f1361, %f1362, %f1363, %f1364};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1401,  %f1402,  %f1403,  %f1404},{%r1288,  %r1289,  %r1290,  %r1291},{%r1295,  %r1296},{%f1369, %f1370, %f1371, %f1372};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1409,  %f1410,  %f1411,  %f1412},{%r1283,  %r1284,  %r1285,  %r1286},{%r1295,  %r1296},{%f1377, %f1378, %f1379, %f1380};

	// end inline asm
	bar.sync 	0;
	// begin inline asm
	cp.async.cg.shared.global [%r1322], [%rd26], 16;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [%r1323], [%rd27], 16;
	// end inline asm
	// begin inline asm
	cp.async.commit_group;

	// end inline asm
	// begin inline asm
	cp.async.wait_group 1;

	// end inline asm
	bar.sync 	0;
	add.s32 	%r2452, %r2886, %r2739;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1324, %r1325, %r1326, %r1327}, [%r2452];

	// end inline asm
	add.s32 	%r2457, %r2452, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1329, %r1330, %r1331, %r1332}, [%r2457];

	// end inline asm
	add.s32 	%r2170, %r2959, %r2741;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1334, %r1335, %r1336, %r1337}, [%r2170];

	// end inline asm
	add.s32 	%r2175, %r2170, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1339, %r1340, %r1341, %r1342}, [%r2175];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1417,  %f1418,  %f1419,  %f1420},{%r1324,  %r1325,  %r1326,  %r1327},{%r1334,  %r1335},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1425,  %f1426,  %f1427,  %f1428},{%r1329,  %r1330,  %r1331,  %r1332},{%r1334,  %r1335},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1433,  %f1434,  %f1435,  %f1436},{%r1329,  %r1330,  %r1331,  %r1332},{%r1336,  %r1337},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1441,  %f1442,  %f1443,  %f1444},{%r1324,  %r1325,  %r1326,  %r1327},{%r1336,  %r1337},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1449,  %f1450,  %f1451,  %f1452},{%r1324,  %r1325,  %r1326,  %r1327},{%r1339,  %r1340},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1457,  %f1458,  %f1459,  %f1460},{%r1329,  %r1330,  %r1331,  %r1332},{%r1339,  %r1340},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1465,  %f1466,  %f1467,  %f1468},{%r1329,  %r1330,  %r1331,  %r1332},{%r1341,  %r1342},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1473,  %f1474,  %f1475,  %f1476},{%r1324,  %r1325,  %r1326,  %r1327},{%r1341,  %r1342},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	add.s32 	%r2491, %r2452, %r2743;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1392, %r1393, %r1394, %r1395}, [%r2491];

	// end inline asm
	add.s32 	%r2496, %r2491, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1397, %r1398, %r1399, %r1400}, [%r2496];

	// end inline asm
	add.s32 	%r2238, %r2170, %r2744;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1402, %r1403, %r1404, %r1405}, [%r2238];

	// end inline asm
	add.s32 	%r2243, %r2238, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1407, %r1408, %r1409, %r1410}, [%r2243];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1481,  %f1482,  %f1483,  %f1484},{%r1392,  %r1393,  %r1394,  %r1395},{%r1402,  %r1403},{%f1417, %f1418, %f1419, %f1420};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1489,  %f1490,  %f1491,  %f1492},{%r1397,  %r1398,  %r1399,  %r1400},{%r1402,  %r1403},{%f1425, %f1426, %f1427, %f1428};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1497,  %f1498,  %f1499,  %f1500},{%r1397,  %r1398,  %r1399,  %r1400},{%r1404,  %r1405},{%f1433, %f1434, %f1435, %f1436};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1505,  %f1506,  %f1507,  %f1508},{%r1392,  %r1393,  %r1394,  %r1395},{%r1404,  %r1405},{%f1441, %f1442, %f1443, %f1444};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1513,  %f1514,  %f1515,  %f1516},{%r1392,  %r1393,  %r1394,  %r1395},{%r1407,  %r1408},{%f1449, %f1450, %f1451, %f1452};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1521,  %f1522,  %f1523,  %f1524},{%r1397,  %r1398,  %r1399,  %r1400},{%r1407,  %r1408},{%f1457, %f1458, %f1459, %f1460};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1529,  %f1530,  %f1531,  %f1532},{%r1397,  %r1398,  %r1399,  %r1400},{%r1409,  %r1410},{%f1465, %f1466, %f1467, %f1468};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1537,  %f1538,  %f1539,  %f1540},{%r1392,  %r1393,  %r1394,  %r1395},{%r1409,  %r1410},{%f1473, %f1474, %f1475, %f1476};

	// end inline asm
	bar.sync 	0;
	selp.f32 	%f1545, 0f00000000, %f1481, %p6;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs329, %f1545;}

	// end inline asm
	st.shared.u16 	[%r2773+18432], %rs329;
	selp.f32 	%f1546, 0f00000000, %f1482, %p39;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs330, %f1546;}

	// end inline asm
	st.shared.u16 	[%r2785+18434], %rs330;
	selp.f32 	%f1547, 0f00000000, %f1483, %p8;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs331, %f1547;}

	// end inline asm
	st.shared.u16 	[%r2773+19456], %rs331;
	selp.f32 	%f1548, 0f00000000, %f1484, %p40;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs332, %f1548;}

	// end inline asm
	st.shared.u16 	[%r2785+19458], %rs332;
	selp.f32 	%f1549, 0f00000000, %f1489, %p10;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs333, %f1549;}

	// end inline asm
	st.shared.u16 	[%r2773+22528], %rs333;
	selp.f32 	%f1550, 0f00000000, %f1490, %p41;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs334, %f1550;}

	// end inline asm
	st.shared.u16 	[%r2785+22530], %rs334;
	selp.f32 	%f1551, 0f00000000, %f1491, %p12;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs335, %f1551;}

	// end inline asm
	st.shared.u16 	[%r2773+23552], %rs335;
	selp.f32 	%f1552, 0f00000000, %f1492, %p42;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs336, %f1552;}

	// end inline asm
	st.shared.u16 	[%r2785+23554], %rs336;
	selp.f32 	%f1553, 0f00000000, %f1505, %p43;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs337, %f1553;}

	// end inline asm
	st.shared.u16 	[%r2801+18432], %rs337;
	selp.f32 	%f1554, 0f00000000, %f1506, %p44;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs338, %f1554;}

	// end inline asm
	st.shared.u16 	[%r2813+18434], %rs338;
	selp.f32 	%f1555, 0f00000000, %f1507, %p45;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs339, %f1555;}

	// end inline asm
	st.shared.u16 	[%r2801+19456], %rs339;
	selp.f32 	%f1556, 0f00000000, %f1508, %p46;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs340, %f1556;}

	// end inline asm
	st.shared.u16 	[%r2813+19458], %rs340;
	selp.f32 	%f1557, 0f00000000, %f1497, %p47;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs341, %f1557;}

	// end inline asm
	st.shared.u16 	[%r2801+22528], %rs341;
	selp.f32 	%f1558, 0f00000000, %f1498, %p48;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs342, %f1558;}

	// end inline asm
	st.shared.u16 	[%r2813+22530], %rs342;
	selp.f32 	%f1559, 0f00000000, %f1499, %p49;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs343, %f1559;}

	// end inline asm
	st.shared.u16 	[%r2801+23552], %rs343;
	selp.f32 	%f1560, 0f00000000, %f1500, %p50;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs344, %f1560;}

	// end inline asm
	st.shared.u16 	[%r2813+23554], %rs344;
	selp.f32 	%f1561, 0f00000000, %f1513, %p51;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs345, %f1561;}

	// end inline asm
	st.shared.u16 	[%r2825+18432], %rs345;
	selp.f32 	%f1562, 0f00000000, %f1514, %p52;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs346, %f1562;}

	// end inline asm
	st.shared.u16 	[%r2837+18434], %rs346;
	selp.f32 	%f1563, 0f00000000, %f1515, %p53;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs347, %f1563;}

	// end inline asm
	st.shared.u16 	[%r2825+19456], %rs347;
	selp.f32 	%f1564, 0f00000000, %f1516, %p54;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs348, %f1564;}

	// end inline asm
	st.shared.u16 	[%r2837+19458], %rs348;
	selp.f32 	%f1565, 0f00000000, %f1521, %p55;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs349, %f1565;}

	// end inline asm
	st.shared.u16 	[%r2825+22528], %rs349;
	selp.f32 	%f1566, 0f00000000, %f1522, %p56;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs350, %f1566;}

	// end inline asm
	st.shared.u16 	[%r2837+22530], %rs350;
	selp.f32 	%f1567, 0f00000000, %f1523, %p57;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs351, %f1567;}

	// end inline asm
	st.shared.u16 	[%r2825+23552], %rs351;
	selp.f32 	%f1568, 0f00000000, %f1524, %p58;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs352, %f1568;}

	// end inline asm
	st.shared.u16 	[%r2837+23554], %rs352;
	selp.f32 	%f1569, 0f00000000, %f1537, %p59;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs353, %f1569;}

	// end inline asm
	st.shared.u16 	[%r2849+18432], %rs353;
	selp.f32 	%f1570, 0f00000000, %f1538, %p60;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs354, %f1570;}

	// end inline asm
	st.shared.u16 	[%r2861+18434], %rs354;
	selp.f32 	%f1571, 0f00000000, %f1539, %p61;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs355, %f1571;}

	// end inline asm
	st.shared.u16 	[%r2849+19456], %rs355;
	selp.f32 	%f1572, 0f00000000, %f1540, %p62;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs356, %f1572;}

	// end inline asm
	st.shared.u16 	[%r2861+19458], %rs356;
	selp.f32 	%f1573, 0f00000000, %f1529, %p63;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs357, %f1573;}

	// end inline asm
	st.shared.u16 	[%r2849+22528], %rs357;
	selp.f32 	%f1574, 0f00000000, %f1530, %p64;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs358, %f1574;}

	// end inline asm
	st.shared.u16 	[%r2861+22530], %rs358;
	selp.f32 	%f1575, 0f00000000, %f1531, %p65;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs359, %f1575;}

	// end inline asm
	st.shared.u16 	[%r2849+23552], %rs359;
	selp.f32 	%f1576, 0f00000000, %f1532, %p66;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs360, %f1576;}

	// end inline asm
	st.shared.u16 	[%r2861+23554], %rs360;
	// begin inline asm
	cp.async.wait_group 1;

	// end inline asm
	bar.sync 	0;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1460, %r1461, %r1462, %r1463}, [%r170];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1465, %r1466, %r1467, %r1468}, [%r175];

	// end inline asm
	add.s32 	%r2535, %r2740, %r2885;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r1470, %r1471, %r1472, %r1473}, [%r2535];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1577,  %f1578,  %f1579,  %f1580},{%r1460,  %r1461,  %r1462,  %r1463},{%r1470,  %r1471},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1585,  %f1586,  %f1587,  %f1588},{%r1465,  %r1466,  %r1467,  %r1468},{%r1470,  %r1471},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1593,  %f1594,  %f1595,  %f1596},{%r1465,  %r1466,  %r1467,  %r1468},{%r1472,  %r1473},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1601,  %f1602,  %f1603,  %f1604},{%r1460,  %r1461,  %r1462,  %r1463},{%r1472,  %r1473},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1499, %r1500, %r1501, %r1502}, [%r2335];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1504, %r1505, %r1506, %r1507}, [%r2340];

	// end inline asm
	add.s32 	%r2557, %r2535, 1024;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r1509, %r1510, %r1511, %r1512}, [%r2557];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1609,  %f1610,  %f1611,  %f1612},{%r1499,  %r1500,  %r1501,  %r1502},{%r1509,  %r1510},{%f1577, %f1578, %f1579, %f1580};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1617,  %f1618,  %f1619,  %f1620},{%r1504,  %r1505,  %r1506,  %r1507},{%r1509,  %r1510},{%f1585, %f1586, %f1587, %f1588};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1625,  %f1626,  %f1627,  %f1628},{%r1504,  %r1505,  %r1506,  %r1507},{%r1511,  %r1512},{%f1593, %f1594, %f1595, %f1596};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1633,  %f1634,  %f1635,  %f1636},{%r1499,  %r1500,  %r1501,  %r1502},{%r1511,  %r1512},{%f1601, %f1602, %f1603, %f1604};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1538, %r1539, %r1540, %r1541}, [%r2374];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1543, %r1544, %r1545, %r1546}, [%r2379];

	// end inline asm
	add.s32 	%r2579, %r2535, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r1548, %r1549, %r1550, %r1551}, [%r2579];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1641,  %f1642,  %f1643,  %f1644},{%r1538,  %r1539,  %r1540,  %r1541},{%r1548,  %r1549},{%f1609, %f1610, %f1611, %f1612};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1649,  %f1650,  %f1651,  %f1652},{%r1543,  %r1544,  %r1545,  %r1546},{%r1548,  %r1549},{%f1617, %f1618, %f1619, %f1620};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1657,  %f1658,  %f1659,  %f1660},{%r1543,  %r1544,  %r1545,  %r1546},{%r1550,  %r1551},{%f1625, %f1626, %f1627, %f1628};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1665,  %f1666,  %f1667,  %f1668},{%r1538,  %r1539,  %r1540,  %r1541},{%r1550,  %r1551},{%f1633, %f1634, %f1635, %f1636};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1577, %r1578, %r1579, %r1580}, [%r2413];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1582, %r1583, %r1584, %r1585}, [%r2418];

	// end inline asm
	add.s32 	%r2601, %r2535, 3072;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r1587, %r1588, %r1589, %r1590}, [%r2601];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1673,  %f1674,  %f1675,  %f1676},{%r1577,  %r1578,  %r1579,  %r1580},{%r1587,  %r1588},{%f1641, %f1642, %f1643, %f1644};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1681,  %f1682,  %f1683,  %f1684},{%r1582,  %r1583,  %r1584,  %r1585},{%r1587,  %r1588},{%f1649, %f1650, %f1651, %f1652};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1689,  %f1690,  %f1691,  %f1692},{%r1582,  %r1583,  %r1584,  %r1585},{%r1589,  %r1590},{%f1657, %f1658, %f1659, %f1660};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1697,  %f1698,  %f1699,  %f1700},{%r1577,  %r1578,  %r1579,  %r1580},{%r1589,  %r1590},{%f1665, %f1666, %f1667, %f1668};

	// end inline asm
	// begin inline asm
	cp.async.wait_group 2;

	// end inline asm
	bar.sync 	0;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1616, %r1617, %r1618, %r1619}, [%r2452];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1621, %r1622, %r1623, %r1624}, [%r2457];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r1626, %r1627, %r1628, %r1629}, [%r2462];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1705,  %f1706,  %f1707,  %f1708},{%r1616,  %r1617,  %r1618,  %r1619},{%r1626,  %r1627},{%f1673, %f1674, %f1675, %f1676};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1713,  %f1714,  %f1715,  %f1716},{%r1621,  %r1622,  %r1623,  %r1624},{%r1626,  %r1627},{%f1681, %f1682, %f1683, %f1684};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1721,  %f1722,  %f1723,  %f1724},{%r1621,  %r1622,  %r1623,  %r1624},{%r1628,  %r1629},{%f1689, %f1690, %f1691, %f1692};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1729,  %f1730,  %f1731,  %f1732},{%r1616,  %r1617,  %r1618,  %r1619},{%r1628,  %r1629},{%f1697, %f1698, %f1699, %f1700};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1655, %r1656, %r1657, %r1658}, [%r2491];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1660, %r1661, %r1662, %r1663}, [%r2496];

	// end inline asm
	add.s32 	%r2501, %r2462, 1024;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r1665, %r1666, %r1667, %r1668}, [%r2501];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1737,  %f1738,  %f1739,  %f1740},{%r1655,  %r1656,  %r1657,  %r1658},{%r1665,  %r1666},{%f1705, %f1706, %f1707, %f1708};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1745,  %f1746,  %f1747,  %f1748},{%r1660,  %r1661,  %r1662,  %r1663},{%r1665,  %r1666},{%f1713, %f1714, %f1715, %f1716};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1753,  %f1754,  %f1755,  %f1756},{%r1660,  %r1661,  %r1662,  %r1663},{%r1667,  %r1668},{%f1721, %f1722, %f1723, %f1724};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1761,  %f1762,  %f1763,  %f1764},{%r1655,  %r1656,  %r1657,  %r1658},{%r1667,  %r1668},{%f1729, %f1730, %f1731, %f1732};

	// end inline asm
	bar.sync 	0;
	// begin inline asm
	cp.async.cg.shared.global [%r1694], [%rd28], 16;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [%r1695], [%rd29], 16;
	// end inline asm
	// begin inline asm
	cp.async.commit_group;

	// end inline asm
	// begin inline asm
	cp.async.wait_group 2;

	// end inline asm
	bar.sync 	0;
	add.s32 	%r2530, %r2959, %r2915;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r1696, %r1697, %r1698, %r1699}, [%r2530];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r1701, %r1702, %r1703, %r1704}, [%r2535];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1769,  %f1770,  %f1771,  %f1772},{%r1696,  %r1697,  %r1698,  %r1699},{%r1701,  %r1702},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1777,  %f1778,  %f1779,  %f1780},{%r1696,  %r1697,  %r1698,  %r1699},{%r1703,  %r1704},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	add.s32 	%r2552, %r2530, 1024;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r1718, %r1719, %r1720, %r1721}, [%r2552];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r1723, %r1724, %r1725, %r1726}, [%r2557];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1785,  %f1786,  %f1787,  %f1788},{%r1718,  %r1719,  %r1720,  %r1721},{%r1723,  %r1724},{%f1769, %f1770, %f1771, %f1772};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1793,  %f1794,  %f1795,  %f1796},{%r1718,  %r1719,  %r1720,  %r1721},{%r1725,  %r1726},{%f1777, %f1778, %f1779, %f1780};

	// end inline asm
	add.s32 	%r2574, %r2530, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r1740, %r1741, %r1742, %r1743}, [%r2574];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r1745, %r1746, %r1747, %r1748}, [%r2579];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1801,  %f1802,  %f1803,  %f1804},{%r1740,  %r1741,  %r1742,  %r1743},{%r1745,  %r1746},{%f1785, %f1786, %f1787, %f1788};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1809,  %f1810,  %f1811,  %f1812},{%r1740,  %r1741,  %r1742,  %r1743},{%r1747,  %r1748},{%f1793, %f1794, %f1795, %f1796};

	// end inline asm
	add.s32 	%r2596, %r2530, 3072;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r1762, %r1763, %r1764, %r1765}, [%r2596];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r1767, %r1768, %r1769, %r1770}, [%r2601];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1817,  %f1818,  %f1819,  %f1820},{%r1762,  %r1763,  %r1764,  %r1765},{%r1767,  %r1768},{%f1801, %f1802, %f1803, %f1804};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1825,  %f1826,  %f1827,  %f1828},{%r1762,  %r1763,  %r1764,  %r1765},{%r1769,  %r1770},{%f1809, %f1810, %f1811, %f1812};

	// end inline asm
	bar.sync 	0;
	ld.global.nc.v4.u32 	{%r2960, %r2961, %r2962, %r2963}, [%rd46];
	mov.b32 	{%rs361, %rs362}, %r2960;
	// begin inline asm
	{  cvt.f32.f16 %f1833, %rs361;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1834, %rs362;}

	// end inline asm
	mov.b32 	{%rs363, %rs364}, %r2961;
	// begin inline asm
	{  cvt.f32.f16 %f1835, %rs363;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1836, %rs364;}

	// end inline asm
	mov.b32 	{%rs365, %rs366}, %r2962;
	// begin inline asm
	{  cvt.f32.f16 %f1837, %rs365;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1838, %rs366;}

	// end inline asm
	mov.b32 	{%rs367, %rs368}, %r2963;
	// begin inline asm
	{  cvt.f32.f16 %f1839, %rs367;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1840, %rs368;}

	// end inline asm
	mul.f32 	%f1841, %f1833, 0f3E000000;
	mul.f32 	%f1844, %f1834, 0f3E000000;
	mul.f32 	%f1847, %f1835, 0f3E000000;
	mul.f32 	%f1850, %f1836, 0f3E000000;
	mul.f32 	%f1853, %f1837, 0f3E000000;
	mul.f32 	%f1856, %f1838, 0f3E000000;
	mul.f32 	%f1859, %f1839, 0f3E000000;
	mul.f32 	%f1862, %f1840, 0f3E000000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs369, %f1841;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1842, %rs369;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs372, %f1844;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1845, %rs372;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs375, %f1847;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1848, %rs375;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs378, %f1850;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1851, %rs378;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs381, %f1853;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1854, %rs381;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs384, %f1856;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1857, %rs384;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs387, %f1859;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1860, %rs387;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs390, %f1862;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1863, %rs390;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs374, %f1845;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs371, %f1842;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs380, %f1851;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs377, %f1848;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs386, %f1857;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs383, %f1854;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs392, %f1863;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs389, %f1860;}

	// end inline asm
	mov.b32 	%r2968, {%rs389, %rs392};
	mov.b32 	%r2969, {%rs383, %rs386};
	mov.b32 	%r2970, {%rs377, %rs380};
	mov.b32 	%r2971, {%rs371, %rs374};
	st.shared.v4.u32 	[%r2942+10240], {%r2971, %r2970, %r2969, %r2968};
	ld.global.nc.v4.u32 	{%r2972, %r2973, %r2974, %r2975}, [%rd46+16384];
	mov.b32 	{%rs393, %rs394}, %r2972;
	// begin inline asm
	{  cvt.f32.f16 %f1865, %rs393;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1866, %rs394;}

	// end inline asm
	mov.b32 	{%rs395, %rs396}, %r2973;
	// begin inline asm
	{  cvt.f32.f16 %f1867, %rs395;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1868, %rs396;}

	// end inline asm
	mov.b32 	{%rs397, %rs398}, %r2974;
	// begin inline asm
	{  cvt.f32.f16 %f1869, %rs397;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1870, %rs398;}

	// end inline asm
	mov.b32 	{%rs399, %rs400}, %r2975;
	// begin inline asm
	{  cvt.f32.f16 %f1871, %rs399;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1872, %rs400;}

	// end inline asm
	mul.f32 	%f1873, %f1865, 0f3E000000;
	mul.f32 	%f1876, %f1866, 0f3E000000;
	mul.f32 	%f1879, %f1867, 0f3E000000;
	mul.f32 	%f1882, %f1868, 0f3E000000;
	mul.f32 	%f1885, %f1869, 0f3E000000;
	mul.f32 	%f1888, %f1870, 0f3E000000;
	mul.f32 	%f1891, %f1871, 0f3E000000;
	mul.f32 	%f1894, %f1872, 0f3E000000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs401, %f1873;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1874, %rs401;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs404, %f1876;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1877, %rs404;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs407, %f1879;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1880, %rs407;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs410, %f1882;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1883, %rs410;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs413, %f1885;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1886, %rs413;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs416, %f1888;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1889, %rs416;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs419, %f1891;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1892, %rs419;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs422, %f1894;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1895, %rs422;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs406, %f1877;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs403, %f1874;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs412, %f1883;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs409, %f1880;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs418, %f1889;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs415, %f1886;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs424, %f1895;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs421, %f1892;}

	// end inline asm
	mov.b32 	%r2980, {%rs421, %rs424};
	mov.b32 	%r2981, {%rs415, %rs418};
	mov.b32 	%r2982, {%rs409, %rs412};
	mov.b32 	%r2983, {%rs403, %rs406};
	st.shared.v4.u32 	[%r2942+12288], {%r2983, %r2982, %r2981, %r2980};
	// begin inline asm
	cp.async.cg.shared.global [%r1784], [%rd30], 16;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [%r1785], [%rd31], 16;
	// end inline asm
	// begin inline asm
	cp.async.commit_group;

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs425, %f1385;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1898, %rs425;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs428, %f1386;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1901, %rs428;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs430, %f1901;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs427, %f1898;}

	// end inline asm
	add.s64 	%rd47, %rd33, %rd44;
	st.global.v2.u16 	[%rd47+32768], {%rs427, %rs430};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs431, %f1387;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1904, %rs431;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs434, %f1388;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1907, %rs434;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs436, %f1907;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs433, %f1904;}

	// end inline asm
	st.global.v2.u16 	[%rd47+36864], {%rs433, %rs436};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs437, %f1393;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1910, %rs437;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs440, %f1394;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1913, %rs440;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs442, %f1913;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs439, %f1910;}

	// end inline asm
	st.global.v2.u16 	[%rd47+49152], {%rs439, %rs442};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs443, %f1395;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1916, %rs443;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs446, %f1396;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1919, %rs446;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs448, %f1919;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs445, %f1916;}

	// end inline asm
	st.global.v2.u16 	[%rd47+53248], {%rs445, %rs448};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs449, %f1409;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1922, %rs449;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs452, %f1410;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1925, %rs452;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs454, %f1925;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs451, %f1922;}

	// end inline asm
	st.global.v2.u16 	[%rd47+32800], {%rs451, %rs454};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs455, %f1411;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1928, %rs455;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs458, %f1412;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1931, %rs458;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs460, %f1931;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs457, %f1928;}

	// end inline asm
	st.global.v2.u16 	[%rd47+36896], {%rs457, %rs460};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs461, %f1401;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1934, %rs461;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs464, %f1402;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1937, %rs464;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs466, %f1937;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs463, %f1934;}

	// end inline asm
	st.global.v2.u16 	[%rd47+49184], {%rs463, %rs466};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs467, %f1403;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1940, %rs467;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs470, %f1404;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1943, %rs470;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs472, %f1943;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs469, %f1940;}

	// end inline asm
	st.global.v2.u16 	[%rd47+53280], {%rs469, %rs472};
	shl.b32 	%r2984, %r2622, 16;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs473, %f1737;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1946, %rs473;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs476, %f1738;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1949, %rs476;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs478, %f1949;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs475, %f1946;}

	// end inline asm
	add.s32 	%r2985, %r2923, %r2984;
	add.s32 	%r2986, %r2985, %r2646;
	mul.wide.s32 	%rd48, %r2986, 2;
	add.s64 	%rd49, %rd35, %rd48;
	st.global.v2.u16 	[%rd49+32768], {%rs475, %rs478};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs479, %f1739;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1952, %rs479;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs482, %f1740;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1955, %rs482;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs484, %f1955;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs481, %f1952;}

	// end inline asm
	st.global.v2.u16 	[%rd49+36864], {%rs481, %rs484};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs485, %f1745;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1958, %rs485;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs488, %f1746;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1961, %rs488;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs490, %f1961;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs487, %f1958;}

	// end inline asm
	st.global.v2.u16 	[%rd49+49152], {%rs487, %rs490};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs491, %f1747;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1964, %rs491;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs494, %f1748;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1967, %rs494;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs496, %f1967;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs493, %f1964;}

	// end inline asm
	st.global.v2.u16 	[%rd49+53248], {%rs493, %rs496};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs497, %f1761;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1970, %rs497;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs500, %f1762;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1973, %rs500;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs502, %f1973;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs499, %f1970;}

	// end inline asm
	st.global.v2.u16 	[%rd49+32800], {%rs499, %rs502};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs503, %f1763;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1976, %rs503;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs506, %f1764;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1979, %rs506;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs508, %f1979;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs505, %f1976;}

	// end inline asm
	st.global.v2.u16 	[%rd49+36896], {%rs505, %rs508};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs509, %f1753;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1982, %rs509;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs512, %f1754;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1985, %rs512;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs514, %f1985;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs511, %f1982;}

	// end inline asm
	st.global.v2.u16 	[%rd49+49184], {%rs511, %rs514};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs515, %f1755;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1988, %rs515;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs518, %f1756;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1991, %rs518;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs520, %f1991;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs517, %f1988;}

	// end inline asm
	st.global.v2.u16 	[%rd49+53280], {%rs517, %rs520};
	// begin inline asm
	cp.async.wait_all;

	// end inline asm
	bar.sync 	0;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1786, %r1787, %r1788, %r1789}, [%r2082];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1791, %r1792, %r1793, %r1794}, [%r2087];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1796, %r1797, %r1798, %r1799}, [%r1800];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1801, %r1802, %r1803, %r1804}, [%r1805];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1993,  %f1994,  %f1995,  %f1996},{%r1786,  %r1787,  %r1788,  %r1789},{%r1796,  %r1797},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2001,  %f2002,  %f2003,  %f2004},{%r1791,  %r1792,  %r1793,  %r1794},{%r1796,  %r1797},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2009,  %f2010,  %f2011,  %f2012},{%r1791,  %r1792,  %r1793,  %r1794},{%r1798,  %r1799},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2017,  %f2018,  %f2019,  %f2020},{%r1786,  %r1787,  %r1788,  %r1789},{%r1798,  %r1799},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2025,  %f2026,  %f2027,  %f2028},{%r1786,  %r1787,  %r1788,  %r1789},{%r1801,  %r1802},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2033,  %f2034,  %f2035,  %f2036},{%r1791,  %r1792,  %r1793,  %r1794},{%r1801,  %r1802},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2041,  %f2042,  %f2043,  %f2044},{%r1791,  %r1792,  %r1793,  %r1794},{%r1803,  %r1804},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2049,  %f2050,  %f2051,  %f2052},{%r1786,  %r1787,  %r1788,  %r1789},{%r1803,  %r1804},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1854, %r1855, %r1856, %r1857}, [%r2121];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1859, %r1860, %r1861, %r1862}, [%r2126];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1864, %r1865, %r1866, %r1867}, [%r1868];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1869, %r1870, %r1871, %r1872}, [%r1873];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2057,  %f2058,  %f2059,  %f2060},{%r1854,  %r1855,  %r1856,  %r1857},{%r1864,  %r1865},{%f1993, %f1994, %f1995, %f1996};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2065,  %f2066,  %f2067,  %f2068},{%r1859,  %r1860,  %r1861,  %r1862},{%r1864,  %r1865},{%f2001, %f2002, %f2003, %f2004};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2073,  %f2074,  %f2075,  %f2076},{%r1859,  %r1860,  %r1861,  %r1862},{%r1866,  %r1867},{%f2009, %f2010, %f2011, %f2012};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2081,  %f2082,  %f2083,  %f2084},{%r1854,  %r1855,  %r1856,  %r1857},{%r1866,  %r1867},{%f2017, %f2018, %f2019, %f2020};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2089,  %f2090,  %f2091,  %f2092},{%r1854,  %r1855,  %r1856,  %r1857},{%r1869,  %r1870},{%f2025, %f2026, %f2027, %f2028};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2097,  %f2098,  %f2099,  %f2100},{%r1859,  %r1860,  %r1861,  %r1862},{%r1869,  %r1870},{%f2033, %f2034, %f2035, %f2036};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2105,  %f2106,  %f2107,  %f2108},{%r1859,  %r1860,  %r1861,  %r1862},{%r1871,  %r1872},{%f2041, %f2042, %f2043, %f2044};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2113,  %f2114,  %f2115,  %f2116},{%r1854,  %r1855,  %r1856,  %r1857},{%r1871,  %r1872},{%f2049, %f2050, %f2051, %f2052};

	// end inline asm
	bar.sync 	0;
	selp.f32 	%f2121, 0f00000000, %f2057, %p6;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs521, %f2121;}

	// end inline asm
	st.shared.u16 	[%r2773+18432], %rs521;
	selp.f32 	%f2122, 0f00000000, %f2058, %p39;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs522, %f2122;}

	// end inline asm
	st.shared.u16 	[%r2785+18434], %rs522;
	selp.f32 	%f2123, 0f00000000, %f2059, %p8;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs523, %f2123;}

	// end inline asm
	st.shared.u16 	[%r2773+19456], %rs523;
	selp.f32 	%f2124, 0f00000000, %f2060, %p40;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs524, %f2124;}

	// end inline asm
	st.shared.u16 	[%r2785+19458], %rs524;
	selp.f32 	%f2125, 0f00000000, %f2065, %p10;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs525, %f2125;}

	// end inline asm
	st.shared.u16 	[%r2773+22528], %rs525;
	selp.f32 	%f2126, 0f00000000, %f2066, %p41;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs526, %f2126;}

	// end inline asm
	st.shared.u16 	[%r2785+22530], %rs526;
	selp.f32 	%f2127, 0f00000000, %f2067, %p12;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs527, %f2127;}

	// end inline asm
	st.shared.u16 	[%r2773+23552], %rs527;
	selp.f32 	%f2128, 0f00000000, %f2068, %p42;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs528, %f2128;}

	// end inline asm
	st.shared.u16 	[%r2785+23554], %rs528;
	selp.f32 	%f2129, 0f00000000, %f2081, %p43;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs529, %f2129;}

	// end inline asm
	st.shared.u16 	[%r2801+18432], %rs529;
	selp.f32 	%f2130, 0f00000000, %f2082, %p44;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs530, %f2130;}

	// end inline asm
	st.shared.u16 	[%r2813+18434], %rs530;
	selp.f32 	%f2131, 0f00000000, %f2083, %p45;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs531, %f2131;}

	// end inline asm
	st.shared.u16 	[%r2801+19456], %rs531;
	selp.f32 	%f2132, 0f00000000, %f2084, %p46;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs532, %f2132;}

	// end inline asm
	st.shared.u16 	[%r2813+19458], %rs532;
	selp.f32 	%f2133, 0f00000000, %f2073, %p47;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs533, %f2133;}

	// end inline asm
	st.shared.u16 	[%r2801+22528], %rs533;
	selp.f32 	%f2134, 0f00000000, %f2074, %p48;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs534, %f2134;}

	// end inline asm
	st.shared.u16 	[%r2813+22530], %rs534;
	selp.f32 	%f2135, 0f00000000, %f2075, %p49;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs535, %f2135;}

	// end inline asm
	st.shared.u16 	[%r2801+23552], %rs535;
	selp.f32 	%f2136, 0f00000000, %f2076, %p50;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs536, %f2136;}

	// end inline asm
	st.shared.u16 	[%r2813+23554], %rs536;
	selp.f32 	%f2137, 0f00000000, %f2089, %p51;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs537, %f2137;}

	// end inline asm
	st.shared.u16 	[%r2825+18432], %rs537;
	selp.f32 	%f2138, 0f00000000, %f2090, %p52;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs538, %f2138;}

	// end inline asm
	st.shared.u16 	[%r2837+18434], %rs538;
	selp.f32 	%f2139, 0f00000000, %f2091, %p53;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs539, %f2139;}

	// end inline asm
	st.shared.u16 	[%r2825+19456], %rs539;
	selp.f32 	%f2140, 0f00000000, %f2092, %p54;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs540, %f2140;}

	// end inline asm
	st.shared.u16 	[%r2837+19458], %rs540;
	selp.f32 	%f2141, 0f00000000, %f2097, %p55;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs541, %f2141;}

	// end inline asm
	st.shared.u16 	[%r2825+22528], %rs541;
	selp.f32 	%f2142, 0f00000000, %f2098, %p56;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs542, %f2142;}

	// end inline asm
	st.shared.u16 	[%r2837+22530], %rs542;
	selp.f32 	%f2143, 0f00000000, %f2099, %p57;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs543, %f2143;}

	// end inline asm
	st.shared.u16 	[%r2825+23552], %rs543;
	selp.f32 	%f2144, 0f00000000, %f2100, %p58;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs544, %f2144;}

	// end inline asm
	st.shared.u16 	[%r2837+23554], %rs544;
	selp.f32 	%f2145, 0f00000000, %f2113, %p59;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs545, %f2145;}

	// end inline asm
	st.shared.u16 	[%r2849+18432], %rs545;
	selp.f32 	%f2146, 0f00000000, %f2114, %p60;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs546, %f2146;}

	// end inline asm
	st.shared.u16 	[%r2861+18434], %rs546;
	selp.f32 	%f2147, 0f00000000, %f2115, %p61;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs547, %f2147;}

	// end inline asm
	st.shared.u16 	[%r2849+19456], %rs547;
	selp.f32 	%f2148, 0f00000000, %f2116, %p62;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs548, %f2148;}

	// end inline asm
	st.shared.u16 	[%r2861+19458], %rs548;
	selp.f32 	%f2149, 0f00000000, %f2105, %p63;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs549, %f2149;}

	// end inline asm
	st.shared.u16 	[%r2849+22528], %rs549;
	selp.f32 	%f2150, 0f00000000, %f2106, %p64;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs550, %f2150;}

	// end inline asm
	st.shared.u16 	[%r2861+22530], %rs550;
	selp.f32 	%f2151, 0f00000000, %f2107, %p65;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs551, %f2151;}

	// end inline asm
	st.shared.u16 	[%r2849+23552], %rs551;
	selp.f32 	%f2152, 0f00000000, %f2108, %p66;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs552, %f2152;}

	// end inline asm
	st.shared.u16 	[%r2861+23554], %rs552;
	// begin inline asm
	cp.async.wait_all;

	// end inline asm
	bar.sync 	0;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1922, %r1923, %r1924, %r1925}, [%r170];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1927, %r1928, %r1929, %r1930}, [%r175];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r1932, %r1933, %r1934, %r1935}, [%r1936];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2153,  %f2154,  %f2155,  %f2156},{%r1922,  %r1923,  %r1924,  %r1925},{%r1932,  %r1933},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2161,  %f2162,  %f2163,  %f2164},{%r1927,  %r1928,  %r1929,  %r1930},{%r1932,  %r1933},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2169,  %f2170,  %f2171,  %f2172},{%r1927,  %r1928,  %r1929,  %r1930},{%r1934,  %r1935},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2177,  %f2178,  %f2179,  %f2180},{%r1922,  %r1923,  %r1924,  %r1925},{%r1934,  %r1935},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1961, %r1962, %r1963, %r1964}, [%r2335];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1966, %r1967, %r1968, %r1969}, [%r2340];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r1971, %r1972, %r1973, %r1974}, [%r1975];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2185,  %f2186,  %f2187,  %f2188},{%r1961,  %r1962,  %r1963,  %r1964},{%r1971,  %r1972},{%f2153, %f2154, %f2155, %f2156};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2193,  %f2194,  %f2195,  %f2196},{%r1966,  %r1967,  %r1968,  %r1969},{%r1971,  %r1972},{%f2161, %f2162, %f2163, %f2164};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2201,  %f2202,  %f2203,  %f2204},{%r1966,  %r1967,  %r1968,  %r1969},{%r1973,  %r1974},{%f2169, %f2170, %f2171, %f2172};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2209,  %f2210,  %f2211,  %f2212},{%r1961,  %r1962,  %r1963,  %r1964},{%r1973,  %r1974},{%f2177, %f2178, %f2179, %f2180};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2000, %r2001, %r2002, %r2003}, [%r2374];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2005, %r2006, %r2007, %r2008}, [%r2379];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r2010, %r2011, %r2012, %r2013}, [%r2014];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2217,  %f2218,  %f2219,  %f2220},{%r2000,  %r2001,  %r2002,  %r2003},{%r2010,  %r2011},{%f2185, %f2186, %f2187, %f2188};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2225,  %f2226,  %f2227,  %f2228},{%r2005,  %r2006,  %r2007,  %r2008},{%r2010,  %r2011},{%f2193, %f2194, %f2195, %f2196};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2233,  %f2234,  %f2235,  %f2236},{%r2005,  %r2006,  %r2007,  %r2008},{%r2012,  %r2013},{%f2201, %f2202, %f2203, %f2204};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2241,  %f2242,  %f2243,  %f2244},{%r2000,  %r2001,  %r2002,  %r2003},{%r2012,  %r2013},{%f2209, %f2210, %f2211, %f2212};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2039, %r2040, %r2041, %r2042}, [%r2413];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2044, %r2045, %r2046, %r2047}, [%r2418];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r2049, %r2050, %r2051, %r2052}, [%r2053];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2249,  %f2250,  %f2251,  %f2252},{%r2039,  %r2040,  %r2041,  %r2042},{%r2049,  %r2050},{%f2217, %f2218, %f2219, %f2220};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2257,  %f2258,  %f2259,  %f2260},{%r2044,  %r2045,  %r2046,  %r2047},{%r2049,  %r2050},{%f2225, %f2226, %f2227, %f2228};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2265,  %f2266,  %f2267,  %f2268},{%r2044,  %r2045,  %r2046,  %r2047},{%r2051,  %r2052},{%f2233, %f2234, %f2235, %f2236};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2273,  %f2274,  %f2275,  %f2276},{%r2039,  %r2040,  %r2041,  %r2042},{%r2051,  %r2052},{%f2241, %f2242, %f2243, %f2244};

	// end inline asm
	bar.sync 	0;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs553, %f1817;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2282, %rs553;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs556, %f1818;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2285, %rs556;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs558, %f2285;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs555, %f2282;}

	// end inline asm
	st.shared.v2.u16 	[%r2900], {%rs555, %rs558};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs559, %f1819;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2288, %rs559;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs562, %f1820;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2291, %rs562;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs564, %f2291;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs561, %f2288;}

	// end inline asm
	st.shared.v2.u16 	[%r2900+512], {%rs561, %rs564};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs565, %f1825;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2294, %rs565;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs568, %f1826;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2297, %rs568;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs570, %f2297;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs567, %f2294;}

	// end inline asm
	st.shared.v2.u16 	[%r2906], {%rs567, %rs570};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs571, %f1827;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2300, %rs571;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs574, %f1828;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2303, %rs574;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs576, %f2303;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs573, %f2300;}

	// end inline asm
	st.shared.v2.u16 	[%r2906+512], {%rs573, %rs576};
	// begin inline asm
	cp.async.wait_group 2;

	// end inline asm
	bar.sync 	0;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2078, %r2079, %r2080, %r2081}, [%r2082];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2083, %r2084, %r2085, %r2086}, [%r2087];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2088, %r2089, %r2090, %r2091}, [%r2092];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2305,  %f2306,  %f2307,  %f2308},{%r2078,  %r2079,  %r2080,  %r2081},{%r2088,  %r2089},{%f2249, %f2250, %f2251, %f2252};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2313,  %f2314,  %f2315,  %f2316},{%r2083,  %r2084,  %r2085,  %r2086},{%r2088,  %r2089},{%f2257, %f2258, %f2259, %f2260};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2321,  %f2322,  %f2323,  %f2324},{%r2083,  %r2084,  %r2085,  %r2086},{%r2090,  %r2091},{%f2265, %f2266, %f2267, %f2268};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2329,  %f2330,  %f2331,  %f2332},{%r2078,  %r2079,  %r2080,  %r2081},{%r2090,  %r2091},{%f2273, %f2274, %f2275, %f2276};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2117, %r2118, %r2119, %r2120}, [%r2121];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2122, %r2123, %r2124, %r2125}, [%r2126];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2127, %r2128, %r2129, %r2130}, [%r2131];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2337,  %f2338,  %f2339,  %f2340},{%r2117,  %r2118,  %r2119,  %r2120},{%r2127,  %r2128},{%f2305, %f2306, %f2307, %f2308};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2345,  %f2346,  %f2347,  %f2348},{%r2122,  %r2123,  %r2124,  %r2125},{%r2127,  %r2128},{%f2313, %f2314, %f2315, %f2316};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2353,  %f2354,  %f2355,  %f2356},{%r2122,  %r2123,  %r2124,  %r2125},{%r2129,  %r2130},{%f2321, %f2322, %f2323, %f2324};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2361,  %f2362,  %f2363,  %f2364},{%r2117,  %r2118,  %r2119,  %r2120},{%r2129,  %r2130},{%f2329, %f2330, %f2331, %f2332};

	// end inline asm
	// begin inline asm
	cp.async.wait_all;

	// end inline asm
	bar.sync 	0;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2156, %r2157, %r2158, %r2159}, [%r2452];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2161, %r2162, %r2163, %r2164}, [%r2457];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2166, %r2167, %r2168, %r2169}, [%r2170];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2171, %r2172, %r2173, %r2174}, [%r2175];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2369,  %f2370,  %f2371,  %f2372},{%r2156,  %r2157,  %r2158,  %r2159},{%r2166,  %r2167},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2377,  %f2378,  %f2379,  %f2380},{%r2161,  %r2162,  %r2163,  %r2164},{%r2166,  %r2167},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2385,  %f2386,  %f2387,  %f2388},{%r2161,  %r2162,  %r2163,  %r2164},{%r2168,  %r2169},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2393,  %f2394,  %f2395,  %f2396},{%r2156,  %r2157,  %r2158,  %r2159},{%r2168,  %r2169},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2401,  %f2402,  %f2403,  %f2404},{%r2156,  %r2157,  %r2158,  %r2159},{%r2171,  %r2172},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2409,  %f2410,  %f2411,  %f2412},{%r2161,  %r2162,  %r2163,  %r2164},{%r2171,  %r2172},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2417,  %f2418,  %f2419,  %f2420},{%r2161,  %r2162,  %r2163,  %r2164},{%r2173,  %r2174},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2425,  %f2426,  %f2427,  %f2428},{%r2156,  %r2157,  %r2158,  %r2159},{%r2173,  %r2174},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2224, %r2225, %r2226, %r2227}, [%r2491];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2229, %r2230, %r2231, %r2232}, [%r2496];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2234, %r2235, %r2236, %r2237}, [%r2238];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2239, %r2240, %r2241, %r2242}, [%r2243];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2433,  %f2434,  %f2435,  %f2436},{%r2224,  %r2225,  %r2226,  %r2227},{%r2234,  %r2235},{%f2369, %f2370, %f2371, %f2372};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2441,  %f2442,  %f2443,  %f2444},{%r2229,  %r2230,  %r2231,  %r2232},{%r2234,  %r2235},{%f2377, %f2378, %f2379, %f2380};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2449,  %f2450,  %f2451,  %f2452},{%r2229,  %r2230,  %r2231,  %r2232},{%r2236,  %r2237},{%f2385, %f2386, %f2387, %f2388};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2457,  %f2458,  %f2459,  %f2460},{%r2224,  %r2225,  %r2226,  %r2227},{%r2236,  %r2237},{%f2393, %f2394, %f2395, %f2396};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2465,  %f2466,  %f2467,  %f2468},{%r2224,  %r2225,  %r2226,  %r2227},{%r2239,  %r2240},{%f2401, %f2402, %f2403, %f2404};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2473,  %f2474,  %f2475,  %f2476},{%r2229,  %r2230,  %r2231,  %r2232},{%r2239,  %r2240},{%f2409, %f2410, %f2411, %f2412};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2481,  %f2482,  %f2483,  %f2484},{%r2229,  %r2230,  %r2231,  %r2232},{%r2241,  %r2242},{%f2417, %f2418, %f2419, %f2420};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2489,  %f2490,  %f2491,  %f2492},{%r2224,  %r2225,  %r2226,  %r2227},{%r2241,  %r2242},{%f2425, %f2426, %f2427, %f2428};

	// end inline asm
	bar.sync 	0;
	selp.f32 	%f2497, 0f00000000, %f2433, %p6;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs577, %f2497;}

	// end inline asm
	st.shared.u16 	[%r2773+18432], %rs577;
	selp.f32 	%f2498, 0f00000000, %f2434, %p39;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs578, %f2498;}

	// end inline asm
	st.shared.u16 	[%r2785+18434], %rs578;
	selp.f32 	%f2499, 0f00000000, %f2435, %p8;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs579, %f2499;}

	// end inline asm
	st.shared.u16 	[%r2773+19456], %rs579;
	selp.f32 	%f2500, 0f00000000, %f2436, %p40;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs580, %f2500;}

	// end inline asm
	st.shared.u16 	[%r2785+19458], %rs580;
	selp.f32 	%f2501, 0f00000000, %f2441, %p10;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs581, %f2501;}

	// end inline asm
	st.shared.u16 	[%r2773+22528], %rs581;
	selp.f32 	%f2502, 0f00000000, %f2442, %p41;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs582, %f2502;}

	// end inline asm
	st.shared.u16 	[%r2785+22530], %rs582;
	selp.f32 	%f2503, 0f00000000, %f2443, %p12;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs583, %f2503;}

	// end inline asm
	st.shared.u16 	[%r2773+23552], %rs583;
	selp.f32 	%f2504, 0f00000000, %f2444, %p42;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs584, %f2504;}

	// end inline asm
	st.shared.u16 	[%r2785+23554], %rs584;
	selp.f32 	%f2505, 0f00000000, %f2457, %p43;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs585, %f2505;}

	// end inline asm
	st.shared.u16 	[%r2801+18432], %rs585;
	selp.f32 	%f2506, 0f00000000, %f2458, %p44;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs586, %f2506;}

	// end inline asm
	st.shared.u16 	[%r2813+18434], %rs586;
	selp.f32 	%f2507, 0f00000000, %f2459, %p45;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs587, %f2507;}

	// end inline asm
	st.shared.u16 	[%r2801+19456], %rs587;
	selp.f32 	%f2508, 0f00000000, %f2460, %p46;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs588, %f2508;}

	// end inline asm
	st.shared.u16 	[%r2813+19458], %rs588;
	selp.f32 	%f2509, 0f00000000, %f2449, %p47;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs589, %f2509;}

	// end inline asm
	st.shared.u16 	[%r2801+22528], %rs589;
	selp.f32 	%f2510, 0f00000000, %f2450, %p48;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs590, %f2510;}

	// end inline asm
	st.shared.u16 	[%r2813+22530], %rs590;
	selp.f32 	%f2511, 0f00000000, %f2451, %p49;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs591, %f2511;}

	// end inline asm
	st.shared.u16 	[%r2801+23552], %rs591;
	selp.f32 	%f2512, 0f00000000, %f2452, %p50;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs592, %f2512;}

	// end inline asm
	st.shared.u16 	[%r2813+23554], %rs592;
	selp.f32 	%f2513, 0f00000000, %f2465, %p51;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs593, %f2513;}

	// end inline asm
	st.shared.u16 	[%r2825+18432], %rs593;
	selp.f32 	%f2514, 0f00000000, %f2466, %p52;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs594, %f2514;}

	// end inline asm
	st.shared.u16 	[%r2837+18434], %rs594;
	selp.f32 	%f2515, 0f00000000, %f2467, %p53;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs595, %f2515;}

	// end inline asm
	st.shared.u16 	[%r2825+19456], %rs595;
	selp.f32 	%f2516, 0f00000000, %f2468, %p54;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs596, %f2516;}

	// end inline asm
	st.shared.u16 	[%r2837+19458], %rs596;
	selp.f32 	%f2517, 0f00000000, %f2473, %p55;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs597, %f2517;}

	// end inline asm
	st.shared.u16 	[%r2825+22528], %rs597;
	selp.f32 	%f2518, 0f00000000, %f2474, %p56;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs598, %f2518;}

	// end inline asm
	st.shared.u16 	[%r2837+22530], %rs598;
	selp.f32 	%f2519, 0f00000000, %f2475, %p57;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs599, %f2519;}

	// end inline asm
	st.shared.u16 	[%r2825+23552], %rs599;
	selp.f32 	%f2520, 0f00000000, %f2476, %p58;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs600, %f2520;}

	// end inline asm
	st.shared.u16 	[%r2837+23554], %rs600;
	selp.f32 	%f2521, 0f00000000, %f2489, %p59;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs601, %f2521;}

	// end inline asm
	st.shared.u16 	[%r2849+18432], %rs601;
	selp.f32 	%f2522, 0f00000000, %f2490, %p60;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs602, %f2522;}

	// end inline asm
	st.shared.u16 	[%r2861+18434], %rs602;
	selp.f32 	%f2523, 0f00000000, %f2491, %p61;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs603, %f2523;}

	// end inline asm
	st.shared.u16 	[%r2849+19456], %rs603;
	selp.f32 	%f2524, 0f00000000, %f2492, %p62;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs604, %f2524;}

	// end inline asm
	st.shared.u16 	[%r2861+19458], %rs604;
	selp.f32 	%f2525, 0f00000000, %f2481, %p63;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs605, %f2525;}

	// end inline asm
	st.shared.u16 	[%r2849+22528], %rs605;
	selp.f32 	%f2526, 0f00000000, %f2482, %p64;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs606, %f2526;}

	// end inline asm
	st.shared.u16 	[%r2861+22530], %rs606;
	selp.f32 	%f2527, 0f00000000, %f2483, %p65;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs607, %f2527;}

	// end inline asm
	st.shared.u16 	[%r2849+23552], %rs607;
	selp.f32 	%f2528, 0f00000000, %f2484, %p66;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs608, %f2528;}

	// end inline asm
	st.shared.u16 	[%r2861+23554], %rs608;
	// begin inline asm
	cp.async.wait_all;

	// end inline asm
	bar.sync 	0;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2292, %r2293, %r2294, %r2295}, [%r170];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2297, %r2298, %r2299, %r2300}, [%r175];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r2302, %r2303, %r2304, %r2305}, [%r2535];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2529,  %f2530,  %f2531,  %f2532},{%r2292,  %r2293,  %r2294,  %r2295},{%r2302,  %r2303},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2537,  %f2538,  %f2539,  %f2540},{%r2297,  %r2298,  %r2299,  %r2300},{%r2302,  %r2303},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2545,  %f2546,  %f2547,  %f2548},{%r2297,  %r2298,  %r2299,  %r2300},{%r2304,  %r2305},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2553,  %f2554,  %f2555,  %f2556},{%r2292,  %r2293,  %r2294,  %r2295},{%r2304,  %r2305},{%f2560, %f2560, %f2560, %f2560};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2331, %r2332, %r2333, %r2334}, [%r2335];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2336, %r2337, %r2338, %r2339}, [%r2340];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r2341, %r2342, %r2343, %r2344}, [%r2557];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2561,  %f2562,  %f2563,  %f2564},{%r2331,  %r2332,  %r2333,  %r2334},{%r2341,  %r2342},{%f2529, %f2530, %f2531, %f2532};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2569,  %f2570,  %f2571,  %f2572},{%r2336,  %r2337,  %r2338,  %r2339},{%r2341,  %r2342},{%f2537, %f2538, %f2539, %f2540};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2577,  %f2578,  %f2579,  %f2580},{%r2336,  %r2337,  %r2338,  %r2339},{%r2343,  %r2344},{%f2545, %f2546, %f2547, %f2548};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2585,  %f2586,  %f2587,  %f2588},{%r2331,  %r2332,  %r2333,  %r2334},{%r2343,  %r2344},{%f2553, %f2554, %f2555, %f2556};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2370, %r2371, %r2372, %r2373}, [%r2374];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2375, %r2376, %r2377, %r2378}, [%r2379];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r2380, %r2381, %r2382, %r2383}, [%r2579];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2593,  %f2594,  %f2595,  %f2596},{%r2370,  %r2371,  %r2372,  %r2373},{%r2380,  %r2381},{%f2561, %f2562, %f2563, %f2564};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2601,  %f2602,  %f2603,  %f2604},{%r2375,  %r2376,  %r2377,  %r2378},{%r2380,  %r2381},{%f2569, %f2570, %f2571, %f2572};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2609,  %f2610,  %f2611,  %f2612},{%r2375,  %r2376,  %r2377,  %r2378},{%r2382,  %r2383},{%f2577, %f2578, %f2579, %f2580};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2617,  %f2618,  %f2619,  %f2620},{%r2370,  %r2371,  %r2372,  %r2373},{%r2382,  %r2383},{%f2585, %f2586, %f2587, %f2588};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2409, %r2410, %r2411, %r2412}, [%r2413];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2414, %r2415, %r2416, %r2417}, [%r2418];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r2419, %r2420, %r2421, %r2422}, [%r2601];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2625,  %f2626,  %f2627,  %f2628},{%r2409,  %r2410,  %r2411,  %r2412},{%r2419,  %r2420},{%f2593, %f2594, %f2595, %f2596};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2633,  %f2634,  %f2635,  %f2636},{%r2414,  %r2415,  %r2416,  %r2417},{%r2419,  %r2420},{%f2601, %f2602, %f2603, %f2604};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2641,  %f2642,  %f2643,  %f2644},{%r2414,  %r2415,  %r2416,  %r2417},{%r2421,  %r2422},{%f2609, %f2610, %f2611, %f2612};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2649,  %f2650,  %f2651,  %f2652},{%r2409,  %r2410,  %r2411,  %r2412},{%r2421,  %r2422},{%f2617, %f2618, %f2619, %f2620};

	// end inline asm
	// begin inline asm
	cp.async.wait_group 1;

	// end inline asm
	bar.sync 	0;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2448, %r2449, %r2450, %r2451}, [%r2452];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2453, %r2454, %r2455, %r2456}, [%r2457];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r2458, %r2459, %r2460, %r2461}, [%r2462];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2657,  %f2658,  %f2659,  %f2660},{%r2448,  %r2449,  %r2450,  %r2451},{%r2458,  %r2459},{%f2625, %f2626, %f2627, %f2628};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2665,  %f2666,  %f2667,  %f2668},{%r2453,  %r2454,  %r2455,  %r2456},{%r2458,  %r2459},{%f2633, %f2634, %f2635, %f2636};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2673,  %f2674,  %f2675,  %f2676},{%r2453,  %r2454,  %r2455,  %r2456},{%r2460,  %r2461},{%f2641, %f2642, %f2643, %f2644};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2681,  %f2682,  %f2683,  %f2684},{%r2448,  %r2449,  %r2450,  %r2451},{%r2460,  %r2461},{%f2649, %f2650, %f2651, %f2652};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2487, %r2488, %r2489, %r2490}, [%r2491];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2492, %r2493, %r2494, %r2495}, [%r2496];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r2497, %r2498, %r2499, %r2500}, [%r2501];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2689,  %f2690,  %f2691,  %f2692},{%r2487,  %r2488,  %r2489,  %r2490},{%r2497,  %r2498},{%f2657, %f2658, %f2659, %f2660};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2697,  %f2698,  %f2699,  %f2700},{%r2492,  %r2493,  %r2494,  %r2495},{%r2497,  %r2498},{%f2665, %f2666, %f2667, %f2668};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2705,  %f2706,  %f2707,  %f2708},{%r2492,  %r2493,  %r2494,  %r2495},{%r2499,  %r2500},{%f2673, %f2674, %f2675, %f2676};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2713,  %f2714,  %f2715,  %f2716},{%r2487,  %r2488,  %r2489,  %r2490},{%r2499,  %r2500},{%f2681, %f2682, %f2683, %f2684};

	// end inline asm
	// begin inline asm
	cp.async.wait_all;

	// end inline asm
	bar.sync 	0;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r2526, %r2527, %r2528, %r2529}, [%r2530];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r2531, %r2532, %r2533, %r2534}, [%r2535];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2721,  %f2722,  %f2723,  %f2724},{%r2526,  %r2527,  %r2528,  %r2529},{%r2531,  %r2532},{%f1817, %f1818, %f1819, %f1820};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2729,  %f2730,  %f2731,  %f2732},{%r2526,  %r2527,  %r2528,  %r2529},{%r2533,  %r2534},{%f1825, %f1826, %f1827, %f1828};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r2548, %r2549, %r2550, %r2551}, [%r2552];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r2553, %r2554, %r2555, %r2556}, [%r2557];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2737,  %f2738,  %f2739,  %f2740},{%r2548,  %r2549,  %r2550,  %r2551},{%r2553,  %r2554},{%f2721, %f2722, %f2723, %f2724};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2745,  %f2746,  %f2747,  %f2748},{%r2548,  %r2549,  %r2550,  %r2551},{%r2555,  %r2556},{%f2729, %f2730, %f2731, %f2732};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r2570, %r2571, %r2572, %r2573}, [%r2574];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r2575, %r2576, %r2577, %r2578}, [%r2579];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2753,  %f2754,  %f2755,  %f2756},{%r2570,  %r2571,  %r2572,  %r2573},{%r2575,  %r2576},{%f2737, %f2738, %f2739, %f2740};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2761,  %f2762,  %f2763,  %f2764},{%r2570,  %r2571,  %r2572,  %r2573},{%r2577,  %r2578},{%f2745, %f2746, %f2747, %f2748};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r2592, %r2593, %r2594, %r2595}, [%r2596];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r2597, %r2598, %r2599, %r2600}, [%r2601];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2769,  %f2770,  %f2771,  %f2772},{%r2592,  %r2593,  %r2594,  %r2595},{%r2597,  %r2598},{%f2753, %f2754, %f2755, %f2756};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2777,  %f2778,  %f2779,  %f2780},{%r2592,  %r2593,  %r2594,  %r2595},{%r2599,  %r2600},{%f2761, %f2762, %f2763, %f2764};

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs609, %f2337;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2786, %rs609;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs612, %f2338;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2789, %rs612;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs614, %f2789;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs611, %f2786;}

	// end inline asm
	st.global.v2.u16 	[%rd47], {%rs611, %rs614};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs615, %f2339;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2792, %rs615;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs618, %f2340;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2795, %rs618;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs620, %f2795;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs617, %f2792;}

	// end inline asm
	st.global.v2.u16 	[%rd47+4096], {%rs617, %rs620};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs621, %f2345;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2798, %rs621;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs624, %f2346;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2801, %rs624;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs626, %f2801;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs623, %f2798;}

	// end inline asm
	st.global.v2.u16 	[%rd47+16384], {%rs623, %rs626};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs627, %f2347;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2804, %rs627;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs630, %f2348;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2807, %rs630;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs632, %f2807;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs629, %f2804;}

	// end inline asm
	st.global.v2.u16 	[%rd47+20480], {%rs629, %rs632};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs633, %f2361;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2810, %rs633;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs636, %f2362;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2813, %rs636;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs638, %f2813;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs635, %f2810;}

	// end inline asm
	st.global.v2.u16 	[%rd47+32], {%rs635, %rs638};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs639, %f2363;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2816, %rs639;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs642, %f2364;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2819, %rs642;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs644, %f2819;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs641, %f2816;}

	// end inline asm
	st.global.v2.u16 	[%rd47+4128], {%rs641, %rs644};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs645, %f2353;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2822, %rs645;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs648, %f2354;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2825, %rs648;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs650, %f2825;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs647, %f2822;}

	// end inline asm
	st.global.v2.u16 	[%rd47+16416], {%rs647, %rs650};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs651, %f2355;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2828, %rs651;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs654, %f2356;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2831, %rs654;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs656, %f2831;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs653, %f2828;}

	// end inline asm
	st.global.v2.u16 	[%rd47+20512], {%rs653, %rs656};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs657, %f2689;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2834, %rs657;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs660, %f2690;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2837, %rs660;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs662, %f2837;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs659, %f2834;}

	// end inline asm
	st.global.v2.u16 	[%rd49], {%rs659, %rs662};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs663, %f2691;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2840, %rs663;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs666, %f2692;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2843, %rs666;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs668, %f2843;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs665, %f2840;}

	// end inline asm
	st.global.v2.u16 	[%rd49+4096], {%rs665, %rs668};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs669, %f2697;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2846, %rs669;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs672, %f2698;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2849, %rs672;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs674, %f2849;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs671, %f2846;}

	// end inline asm
	st.global.v2.u16 	[%rd49+16384], {%rs671, %rs674};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs675, %f2699;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2852, %rs675;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs678, %f2700;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2855, %rs678;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs680, %f2855;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs677, %f2852;}

	// end inline asm
	st.global.v2.u16 	[%rd49+20480], {%rs677, %rs680};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs681, %f2713;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2858, %rs681;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs684, %f2714;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2861, %rs684;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs686, %f2861;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs683, %f2858;}

	// end inline asm
	st.global.v2.u16 	[%rd49+32], {%rs683, %rs686};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs687, %f2715;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2864, %rs687;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs690, %f2716;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2867, %rs690;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs692, %f2867;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs689, %f2864;}

	// end inline asm
	st.global.v2.u16 	[%rd49+4128], {%rs689, %rs692};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs693, %f2705;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2870, %rs693;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs696, %f2706;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2873, %rs696;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs698, %f2873;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs695, %f2870;}

	// end inline asm
	st.global.v2.u16 	[%rd49+16416], {%rs695, %rs698};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs699, %f2707;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2876, %rs699;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs702, %f2708;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2879, %rs702;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs704, %f2879;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs701, %f2876;}

	// end inline asm
	st.global.v2.u16 	[%rd49+20512], {%rs701, %rs704};
	ret;

}

