//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-35583870
// Cuda compilation tools, release 12.8, V12.8.93
// Based on NVVM 7.0.1
//

.version 8.7
.target sm_80
.address_size 64

	// .globl	chunk_linear_attn_bwd_kernel
.global .align 1 .b8 _ZN58_INTERNAL_32e731c6_27_linear_attn_bwd_v1_basic_cu_cc9b6e384cute7productE[1];
.global .align 1 .b8 _ZN58_INTERNAL_32e731c6_27_linear_attn_bwd_v1_basic_cu_cc9b6e384cute1_E[1];
.global .align 1 .b8 _ZN58_INTERNAL_32e731c6_27_linear_attn_bwd_v1_basic_cu_cc9b6e384cuda3std3__45__cpo5beginE[1];
.global .align 1 .b8 _ZN58_INTERNAL_32e731c6_27_linear_attn_bwd_v1_basic_cu_cc9b6e384cuda3std3__45__cpo3endE[1];
.global .align 1 .b8 _ZN58_INTERNAL_32e731c6_27_linear_attn_bwd_v1_basic_cu_cc9b6e384cuda3std3__45__cpo6cbeginE[1];
.global .align 1 .b8 _ZN58_INTERNAL_32e731c6_27_linear_attn_bwd_v1_basic_cu_cc9b6e384cuda3std3__45__cpo4cendE[1];
.global .align 1 .b8 _ZN58_INTERNAL_32e731c6_27_linear_attn_bwd_v1_basic_cu_cc9b6e384cuda3std3__419piecewise_constructE[1];
.global .align 1 .b8 _ZN58_INTERNAL_32e731c6_27_linear_attn_bwd_v1_basic_cu_cc9b6e384cuda3std3__48in_placeE[1];
.global .align 1 .b8 _ZN58_INTERNAL_32e731c6_27_linear_attn_bwd_v1_basic_cu_cc9b6e384cuda3std6ranges3__45__cpo4swapE[1];
.global .align 1 .b8 _ZN58_INTERNAL_32e731c6_27_linear_attn_bwd_v1_basic_cu_cc9b6e384cuda3std6ranges3__45__cpo9iter_moveE[1];
.extern .shared .align 1024 .b8 buf_dyn_shmem[];

.visible .entry chunk_linear_attn_bwd_kernel(
	.param .u64 chunk_linear_attn_bwd_kernel_param_0,
	.param .u64 chunk_linear_attn_bwd_kernel_param_1,
	.param .u64 chunk_linear_attn_bwd_kernel_param_2,
	.param .u64 chunk_linear_attn_bwd_kernel_param_3,
	.param .u64 chunk_linear_attn_bwd_kernel_param_4,
	.param .u64 chunk_linear_attn_bwd_kernel_param_5,
	.param .u64 chunk_linear_attn_bwd_kernel_param_6
)
.maxntid 128, 1, 1
.minnctapersm 1
{
	.reg .pred 	%p<65>;
	.reg .b16 	%rs<1409>;
	.reg .f32 	%f<7041>;
	.reg .b32 	%r<6417>;
	.reg .b64 	%rd<73>;


	ld.param.u64 	%rd49, [chunk_linear_attn_bwd_kernel_param_0];
	ld.param.u64 	%rd50, [chunk_linear_attn_bwd_kernel_param_1];
	ld.param.u64 	%rd51, [chunk_linear_attn_bwd_kernel_param_2];
	ld.param.u64 	%rd52, [chunk_linear_attn_bwd_kernel_param_3];
	ld.param.u64 	%rd53, [chunk_linear_attn_bwd_kernel_param_4];
	ld.param.u64 	%rd54, [chunk_linear_attn_bwd_kernel_param_5];
	ld.param.u64 	%rd55, [chunk_linear_attn_bwd_kernel_param_6];
	cvta.to.global.u64 	%rd56, %rd54;
	cvta.to.global.u64 	%rd57, %rd52;
	cvta.to.global.u64 	%rd58, %rd50;
	cvta.to.global.u64 	%rd59, %rd55;
	mov.u32 	%r6033, %tid.x;
	shr.s32 	%r6034, %r6033, 3;
	shl.b32 	%r6035, %r6034, 7;
	and.b32  	%r6036, %r6033, 32;
	shr.u32 	%r6037, %r6036, 5;
	and.b32  	%r6038, %r6033, 4;
	shr.u32 	%r6039, %r6038, 2;
	add.s32 	%r6040, %r6037, %r6039;
	shl.b32 	%r6041, %r6040, 6;
	and.b32  	%r6042, %r6041, 64;
	shr.u32 	%r6043, %r6033, 4;
	and.b32  	%r6044, %r6033, 2;
	shr.u32 	%r6045, %r6044, 1;
	add.s32 	%r6046, %r6045, %r6043;
	shl.b32 	%r6047, %r6046, 5;
	and.b32  	%r6048, %r6047, 32;
	and.b32  	%r6049, %r6033, 8;
	shr.u32 	%r6050, %r6049, 3;
	add.s32 	%r6051, %r6050, %r6033;
	shl.b32 	%r6052, %r6051, 4;
	and.b32  	%r6053, %r6052, 16;
	or.b32  	%r6054, %r6042, %r6035;
	add.s32 	%r6055, %r6054, 40960;
	or.b32  	%r6056, %r6055, %r6048;
	or.b32  	%r6057, %r6056, %r6053;
	mov.u32 	%r6058, %ctaid.z;
	shl.b32 	%r6059, %r6058, 13;
	and.b32  	%r6060, %r6059, -32768;
	shl.b32 	%r6061, %r6034, 8;
	shl.b32 	%r6062, %r6058, 6;
	and.b32  	%r6063, %r6062, 192;
	shl.b32 	%r6064, %r6033, 3;
	and.b32  	%r6065, %r6064, 56;
	add.s32 	%r6066, %r6061, %r6060;
	or.b32  	%r6067, %r6066, %r6063;
	or.b32  	%r6068, %r6067, %r6065;
	mul.wide.s32 	%rd60, %r6068, 2;
	add.s64 	%rd45, %rd53, %rd60;
	mov.u32 	%r6069, buf_dyn_shmem;
	add.s32 	%r4125, %r6069, %r6057;
	// begin inline asm
	cp.async.cg.shared.global [%r4125], [%rd45], 16;
	// end inline asm
	add.s32 	%r6070, %r6068, 4096;
	mul.wide.s32 	%rd61, %r6070, 2;
	add.s64 	%rd46, %rd53, %rd61;
	add.s32 	%r4126, %r4125, 2048;
	// begin inline asm
	cp.async.cg.shared.global [%r4126], [%rd46], 16;
	// end inline asm
	add.s32 	%r6071, %r6068, 8192;
	mul.wide.s32 	%rd62, %r6071, 2;
	add.s64 	%rd47, %rd53, %rd62;
	add.s32 	%r4127, %r4125, 4096;
	// begin inline asm
	cp.async.cg.shared.global [%r4127], [%rd47], 16;
	// end inline asm
	add.s32 	%r6072, %r6068, 12288;
	mul.wide.s32 	%rd63, %r6072, 2;
	add.s64 	%rd48, %rd53, %rd63;
	add.s32 	%r4128, %r4125, 6144;
	// begin inline asm
	cp.async.cg.shared.global [%r4128], [%rd48], 16;
	// end inline asm
	// begin inline asm
	cp.async.commit_group;

	// end inline asm
	add.s32 	%r6073, %r6054, 16384;
	or.b32  	%r6074, %r6073, %r6048;
	or.b32  	%r6075, %r6074, %r6053;
	add.s64 	%rd41, %rd49, %rd60;
	add.s32 	%r3849, %r6069, %r6075;
	// begin inline asm
	cp.async.cg.shared.global [%r3849], [%rd41], 16;
	// end inline asm
	add.s64 	%rd42, %rd49, %rd61;
	add.s32 	%r3850, %r3849, 2048;
	// begin inline asm
	cp.async.cg.shared.global [%r3850], [%rd42], 16;
	// end inline asm
	add.s64 	%rd43, %rd49, %rd62;
	add.s32 	%r3851, %r3849, 4096;
	// begin inline asm
	cp.async.cg.shared.global [%r3851], [%rd43], 16;
	// end inline asm
	add.s64 	%rd44, %rd49, %rd63;
	add.s32 	%r3852, %r3849, 6144;
	// begin inline asm
	cp.async.cg.shared.global [%r3852], [%rd44], 16;
	// end inline asm
	or.b32  	%r6076, %r6054, %r6048;
	or.b32  	%r6077, %r6076, %r6053;
	add.s64 	%rd37, %rd51, %rd60;
	add.s32 	%r3029, %r6069, %r6077;
	// begin inline asm
	cp.async.cg.shared.global [%r3029], [%rd37], 16;
	// end inline asm
	add.s64 	%rd38, %rd51, %rd61;
	add.s32 	%r3030, %r3029, 2048;
	// begin inline asm
	cp.async.cg.shared.global [%r3030], [%rd38], 16;
	// end inline asm
	add.s64 	%rd39, %rd51, %rd62;
	add.s32 	%r3031, %r3029, 4096;
	// begin inline asm
	cp.async.cg.shared.global [%r3031], [%rd39], 16;
	// end inline asm
	add.s64 	%rd40, %rd51, %rd63;
	add.s32 	%r3032, %r3029, 6144;
	// begin inline asm
	cp.async.cg.shared.global [%r3032], [%rd40], 16;
	// end inline asm
	// begin inline asm
	cp.async.commit_group;

	// end inline asm
	// begin inline asm
	cp.async.wait_all;

	// end inline asm
	bar.sync 	0;
	shr.s32 	%r6078, %r6033, 31;
	shr.u32 	%r6079, %r6078, 28;
	add.s32 	%r6080, %r6033, %r6079;
	and.b32  	%r6081, %r6080, -16;
	sub.s32 	%r6082, %r6033, %r6081;
	shr.s32 	%r6083, %r6082, 31;
	shr.u32 	%r6084, %r6083, 29;
	add.s32 	%r6085, %r6082, %r6084;
	and.b32  	%r6086, %r6085, -8;
	sub.s32 	%r6087, %r6082, %r6086;
	shr.u32 	%r6088, %r6080, 31;
	shr.s32 	%r6089, %r6080, 4;
	add.s32 	%r6090, %r6089, %r6088;
	and.b32  	%r6091, %r6090, -2;
	sub.s32 	%r6092, %r6089, %r6091;
	shl.b32 	%r6093, %r6087, 6;
	and.b32  	%r6094, %r6093, 448;
	shl.b32 	%r6095, %r6092, 3;
	and.b32  	%r6096, %r6095, 8;
	or.b32  	%r6097, %r6094, %r6096;
	shr.u32 	%r6098, %r6078, 29;
	add.s32 	%r6099, %r6033, %r6098;
	and.b32  	%r6100, %r6099, -8;
	sub.s32 	%r6101, %r6033, %r6100;
	shl.b32 	%r6102, %r6101, 6;
	and.b32  	%r6103, %r6102, 448;
	and.b32  	%r6104, %r6099, 8;
	or.b32  	%r6105, %r6104, %r6103;
	shr.u32 	%r6106, %r6103, 3;
	and.b32  	%r6107, %r6101, 4;
	setp.eq.s32 	%p1, %r6107, 0;
	and.b32  	%r6108, %r6101, 2;
	setp.eq.s32 	%p2, %r6108, 0;
	shr.u32 	%r6109, %r6078, 26;
	add.s32 	%r6110, %r6033, %r6109;
	shr.s32 	%r6111, %r6110, 6;
	shr.u32 	%r6112, %r6094, 3;
	and.b32  	%r6113, %r6087, 4;
	setp.eq.s32 	%p3, %r6113, 0;
	and.b32  	%r6114, %r6087, 2;
	setp.eq.s32 	%p4, %r6114, 0;
	shr.u32 	%r6115, %r6078, 27;
	add.s32 	%r6116, %r6033, %r6115;
	shr.u32 	%r6117, %r6116, 31;
	shr.s32 	%r6118, %r6116, 5;
	add.s32 	%r6119, %r6118, %r6117;
	and.b32  	%r6120, %r6119, -2;
	sub.s32 	%r6121, %r6118, %r6120;
	xor.b32  	%r6122, %r6097, %r6112;
	xor.b32  	%r6123, %r6105, %r6106;
	shl.b32 	%r6124, %r6085, 6;
	and.b32  	%r6125, %r6124, -512;
	shl.b32 	%r6126, %r6121, 10;
	shl.b32 	%r6127, %r6092, 10;
	shl.b32 	%r6128, %r6111, 9;
	add.s32 	%r6129, %r6125, %r6126;
	or.b32  	%r6130, %r6129, %r6122;
	shl.b32 	%r6131, %r6130, 1;
	add.s32 	%r6132, %r6069, 40960;
	add.s32 	%r1661, %r6132, %r6131;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r13, %r14, %r15, %r16}, [%r1661];

	// end inline asm
	add.s32 	%r1666, %r1661, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r18, %r19, %r20, %r21}, [%r1666];

	// end inline asm
	add.s32 	%r6133, %r6127, %r6128;
	or.b32  	%r6134, %r6133, %r6123;
	shl.b32 	%r6135, %r6134, 1;
	add.s32 	%r1127, %r6069, %r6135;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r23, %r24, %r25, %r26}, [%r1127];

	// end inline asm
	add.s32 	%r1132, %r1127, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r28, %r29, %r30, %r31}, [%r1132];

	// end inline asm
	mov.f32 	%f6144, 0f00000000;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1,  %f2,  %f3,  %f4},{%r13,  %r14,  %r15,  %r16},{%r23,  %r24},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f9,  %f10,  %f11,  %f12},{%r18,  %r19,  %r20,  %r21},{%r23,  %r24},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f17,  %f18,  %f19,  %f20},{%r18,  %r19,  %r20,  %r21},{%r25,  %r26},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f25,  %f26,  %f27,  %f28},{%r13,  %r14,  %r15,  %r16},{%r25,  %r26},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f33,  %f34,  %f35,  %f36},{%r13,  %r14,  %r15,  %r16},{%r28,  %r29},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f41,  %f42,  %f43,  %f44},{%r18,  %r19,  %r20,  %r21},{%r28,  %r29},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f49,  %f50,  %f51,  %f52},{%r18,  %r19,  %r20,  %r21},{%r30,  %r31},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f57,  %f58,  %f59,  %f60},{%r13,  %r14,  %r15,  %r16},{%r30,  %r31},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	selp.b32 	%r6136, 32, -32, %p4;
	add.s32 	%r1729, %r1661, %r6136;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r81, %r82, %r83, %r84}, [%r1729];

	// end inline asm
	add.s32 	%r1734, %r1729, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r86, %r87, %r88, %r89}, [%r1734];

	// end inline asm
	selp.b32 	%r6137, 32, -32, %p2;
	add.s32 	%r1195, %r1127, %r6137;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r91, %r92, %r93, %r94}, [%r1195];

	// end inline asm
	add.s32 	%r1200, %r1195, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r96, %r97, %r98, %r99}, [%r1200];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f65,  %f66,  %f67,  %f68},{%r81,  %r82,  %r83,  %r84},{%r91,  %r92},{%f1, %f2, %f3, %f4};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f73,  %f74,  %f75,  %f76},{%r86,  %r87,  %r88,  %r89},{%r91,  %r92},{%f9, %f10, %f11, %f12};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f81,  %f82,  %f83,  %f84},{%r86,  %r87,  %r88,  %r89},{%r93,  %r94},{%f17, %f18, %f19, %f20};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f89,  %f90,  %f91,  %f92},{%r81,  %r82,  %r83,  %r84},{%r93,  %r94},{%f25, %f26, %f27, %f28};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f97,  %f98,  %f99,  %f100},{%r81,  %r82,  %r83,  %r84},{%r96,  %r97},{%f33, %f34, %f35, %f36};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f105,  %f106,  %f107,  %f108},{%r86,  %r87,  %r88,  %r89},{%r96,  %r97},{%f41, %f42, %f43, %f44};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f113,  %f114,  %f115,  %f116},{%r86,  %r87,  %r88,  %r89},{%r98,  %r99},{%f49, %f50, %f51, %f52};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f121,  %f122,  %f123,  %f124},{%r81,  %r82,  %r83,  %r84},{%r98,  %r99},{%f57, %f58, %f59, %f60};

	// end inline asm
	selp.b32 	%r6138, 64, -64, %p3;
	add.s32 	%r1797, %r1661, %r6138;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r149, %r150, %r151, %r152}, [%r1797];

	// end inline asm
	add.s32 	%r1802, %r1797, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r154, %r155, %r156, %r157}, [%r1802];

	// end inline asm
	selp.b32 	%r6139, 64, -64, %p1;
	add.s32 	%r1263, %r1127, %r6139;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r159, %r160, %r161, %r162}, [%r1263];

	// end inline asm
	add.s32 	%r1268, %r1263, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r164, %r165, %r166, %r167}, [%r1268];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f129,  %f130,  %f131,  %f132},{%r149,  %r150,  %r151,  %r152},{%r159,  %r160},{%f65, %f66, %f67, %f68};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f137,  %f138,  %f139,  %f140},{%r154,  %r155,  %r156,  %r157},{%r159,  %r160},{%f73, %f74, %f75, %f76};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f145,  %f146,  %f147,  %f148},{%r154,  %r155,  %r156,  %r157},{%r161,  %r162},{%f81, %f82, %f83, %f84};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f153,  %f154,  %f155,  %f156},{%r149,  %r150,  %r151,  %r152},{%r161,  %r162},{%f89, %f90, %f91, %f92};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f161,  %f162,  %f163,  %f164},{%r149,  %r150,  %r151,  %r152},{%r164,  %r165},{%f97, %f98, %f99, %f100};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f169,  %f170,  %f171,  %f172},{%r154,  %r155,  %r156,  %r157},{%r164,  %r165},{%f105, %f106, %f107, %f108};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f177,  %f178,  %f179,  %f180},{%r154,  %r155,  %r156,  %r157},{%r166,  %r167},{%f113, %f114, %f115, %f116};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f185,  %f186,  %f187,  %f188},{%r149,  %r150,  %r151,  %r152},{%r166,  %r167},{%f121, %f122, %f123, %f124};

	// end inline asm
	add.s32 	%r1865, %r1797, %r6136;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r217, %r218, %r219, %r220}, [%r1865];

	// end inline asm
	add.s32 	%r1870, %r1865, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r222, %r223, %r224, %r225}, [%r1870];

	// end inline asm
	add.s32 	%r1331, %r1263, %r6137;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r227, %r228, %r229, %r230}, [%r1331];

	// end inline asm
	add.s32 	%r1336, %r1331, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r232, %r233, %r234, %r235}, [%r1336];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f193,  %f194,  %f195,  %f196},{%r217,  %r218,  %r219,  %r220},{%r227,  %r228},{%f129, %f130, %f131, %f132};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f201,  %f202,  %f203,  %f204},{%r222,  %r223,  %r224,  %r225},{%r227,  %r228},{%f137, %f138, %f139, %f140};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f209,  %f210,  %f211,  %f212},{%r222,  %r223,  %r224,  %r225},{%r229,  %r230},{%f145, %f146, %f147, %f148};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f217,  %f218,  %f219,  %f220},{%r217,  %r218,  %r219,  %r220},{%r229,  %r230},{%f153, %f154, %f155, %f156};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f225,  %f226,  %f227,  %f228},{%r217,  %r218,  %r219,  %r220},{%r232,  %r233},{%f161, %f162, %f163, %f164};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f233,  %f234,  %f235,  %f236},{%r222,  %r223,  %r224,  %r225},{%r232,  %r233},{%f169, %f170, %f171, %f172};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f241,  %f242,  %f243,  %f244},{%r222,  %r223,  %r224,  %r225},{%r234,  %r235},{%f177, %f178, %f179, %f180};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f249,  %f250,  %f251,  %f252},{%r217,  %r218,  %r219,  %r220},{%r234,  %r235},{%f185, %f186, %f187, %f188};

	// end inline asm
	bar.sync 	0;
	shl.b32 	%r6140, %r6033, 1;
	and.b32  	%r6141, %r6140, 6;
	shr.s32 	%r6142, %r6033, 6;
	shl.b32 	%r6143, %r6142, 3;
	or.b32  	%r6144, %r6141, %r6143;
	shr.u32 	%r6145, %r6036, 1;
	and.b32  	%r6146, %r6033, 31;
	shr.u32 	%r6147, %r6146, 2;
	or.b32  	%r6148, %r6147, %r6145;
	shl.b32 	%r6149, %r6147, 6;
	shr.u32 	%r6150, %r6033, 6;
	add.s32 	%r6151, %r6039, %r6150;
	shl.b32 	%r6152, %r6151, 3;
	and.b32  	%r6153, %r6152, 8;
	setp.gt.s32 	%p5, %r6144, %r6148;
	selp.f32 	%f257, 0f00000000, %f193, %p5;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1, %f257;}

	// end inline asm
	shr.u32 	%r6154, %r6144, 5;
	add.s32 	%r6155, %r6154, %r6043;
	and.b32  	%r6156, %r6155, 1;
	or.b32  	%r6157, %r6156, %r6036;
	shl.b32 	%r6158, %r6157, 5;
	and.b32  	%r6159, %r6140, 16;
	or.b32  	%r6160, %r6158, %r6159;
	or.b32  	%r6161, %r6160, %r6153;
	or.b32  	%r6162, %r6161, %r6149;
	or.b32  	%r6163, %r6162, %r6141;
	shl.b32 	%r6164, %r6163, 1;
	add.s32 	%r6165, %r6069, %r6164;
	st.shared.u16 	[%r6165+8192], %rs1;
	or.b32  	%r6166, %r6144, 1;
	setp.lt.s32 	%p6, %r6144, %r6148;
	selp.f32 	%f258, %f194, 0f00000000, %p6;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs2, %f258;}

	// end inline asm
	shr.u32 	%r6167, %r6166, 5;
	add.s32 	%r6168, %r6167, %r6043;
	and.b32  	%r6169, %r6168, 1;
	or.b32  	%r6170, %r6169, %r6036;
	shl.b32 	%r6171, %r6170, 5;
	or.b32  	%r6172, %r6171, %r6159;
	or.b32  	%r6173, %r6172, %r6153;
	or.b32  	%r6174, %r6173, %r6149;
	or.b32  	%r6175, %r6174, %r6141;
	shl.b32 	%r6176, %r6175, 1;
	add.s32 	%r6177, %r6069, %r6176;
	st.shared.u16 	[%r6177+8194], %rs2;
	or.b32  	%r6178, %r6148, 8;
	setp.gt.s32 	%p7, %r6144, %r6178;
	selp.f32 	%f259, 0f00000000, %f195, %p7;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs3, %f259;}

	// end inline asm
	st.shared.u16 	[%r6165+9216], %rs3;
	setp.lt.s32 	%p8, %r6144, %r6178;
	selp.f32 	%f260, %f196, 0f00000000, %p8;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs4, %f260;}

	// end inline asm
	st.shared.u16 	[%r6177+9218], %rs4;
	or.b32  	%r6179, %r6148, 32;
	setp.gt.s32 	%p9, %r6144, %r6179;
	selp.f32 	%f261, 0f00000000, %f201, %p9;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs5, %f261;}

	// end inline asm
	st.shared.u16 	[%r6165+12288], %rs5;
	setp.lt.s32 	%p10, %r6144, %r6179;
	selp.f32 	%f262, %f202, 0f00000000, %p10;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs6, %f262;}

	// end inline asm
	st.shared.u16 	[%r6177+12290], %rs6;
	or.b32  	%r6180, %r6148, 40;
	setp.gt.s32 	%p11, %r6144, %r6180;
	selp.f32 	%f263, 0f00000000, %f203, %p11;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs7, %f263;}

	// end inline asm
	st.shared.u16 	[%r6165+13312], %rs7;
	setp.lt.s32 	%p12, %r6144, %r6180;
	selp.f32 	%f264, %f204, 0f00000000, %p12;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs8, %f264;}

	// end inline asm
	st.shared.u16 	[%r6177+13314], %rs8;
	add.s32 	%r6181, %r6144, 16;
	xor.b32  	%r6182, %r6159, 16;
	setp.gt.s32 	%p13, %r6181, %r6148;
	selp.f32 	%f265, 0f00000000, %f217, %p13;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs9, %f265;}

	// end inline asm
	shr.u32 	%r6183, %r6181, 5;
	add.s32 	%r6184, %r6183, %r6043;
	and.b32  	%r6185, %r6184, 1;
	or.b32  	%r6186, %r6185, %r6036;
	shl.b32 	%r6187, %r6186, 5;
	or.b32  	%r6188, %r6187, %r6182;
	or.b32  	%r6189, %r6188, %r6153;
	or.b32  	%r6190, %r6189, %r6149;
	or.b32  	%r6191, %r6190, %r6141;
	shl.b32 	%r6192, %r6191, 1;
	add.s32 	%r6193, %r6069, %r6192;
	st.shared.u16 	[%r6193+8192], %rs9;
	add.s32 	%r6194, %r6144, 17;
	setp.gt.s32 	%p14, %r6194, %r6148;
	selp.f32 	%f266, 0f00000000, %f218, %p14;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs10, %f266;}

	// end inline asm
	shr.u32 	%r6195, %r6194, 5;
	add.s32 	%r6196, %r6195, %r6043;
	and.b32  	%r6197, %r6196, 1;
	or.b32  	%r6198, %r6197, %r6036;
	shl.b32 	%r6199, %r6198, 5;
	or.b32  	%r6200, %r6199, %r6182;
	or.b32  	%r6201, %r6200, %r6153;
	or.b32  	%r6202, %r6201, %r6149;
	or.b32  	%r6203, %r6202, %r6141;
	shl.b32 	%r6204, %r6203, 1;
	add.s32 	%r6205, %r6069, %r6204;
	st.shared.u16 	[%r6205+8194], %rs10;
	setp.gt.s32 	%p15, %r6181, %r6178;
	selp.f32 	%f267, 0f00000000, %f219, %p15;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs11, %f267;}

	// end inline asm
	st.shared.u16 	[%r6193+9216], %rs11;
	setp.gt.s32 	%p16, %r6194, %r6178;
	selp.f32 	%f268, 0f00000000, %f220, %p16;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs12, %f268;}

	// end inline asm
	st.shared.u16 	[%r6205+9218], %rs12;
	setp.gt.s32 	%p17, %r6181, %r6179;
	selp.f32 	%f269, 0f00000000, %f209, %p17;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs13, %f269;}

	// end inline asm
	st.shared.u16 	[%r6193+12288], %rs13;
	setp.gt.s32 	%p18, %r6194, %r6179;
	selp.f32 	%f270, 0f00000000, %f210, %p18;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs14, %f270;}

	// end inline asm
	st.shared.u16 	[%r6205+12290], %rs14;
	setp.gt.s32 	%p19, %r6181, %r6180;
	selp.f32 	%f271, 0f00000000, %f211, %p19;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs15, %f271;}

	// end inline asm
	st.shared.u16 	[%r6193+13312], %rs15;
	setp.gt.s32 	%p20, %r6194, %r6180;
	selp.f32 	%f272, 0f00000000, %f212, %p20;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs16, %f272;}

	// end inline asm
	st.shared.u16 	[%r6205+13314], %rs16;
	add.s32 	%r6206, %r6144, 32;
	setp.gt.s32 	%p21, %r6206, %r6148;
	selp.f32 	%f273, 0f00000000, %f225, %p21;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs17, %f273;}

	// end inline asm
	shr.u32 	%r6207, %r6206, 5;
	add.s32 	%r6208, %r6207, %r6043;
	and.b32  	%r6209, %r6208, 1;
	or.b32  	%r6210, %r6209, %r6036;
	shl.b32 	%r6211, %r6210, 5;
	or.b32  	%r6212, %r6211, %r6159;
	or.b32  	%r6213, %r6212, %r6153;
	or.b32  	%r6214, %r6213, %r6149;
	or.b32  	%r6215, %r6214, %r6141;
	shl.b32 	%r6216, %r6215, 1;
	add.s32 	%r6217, %r6069, %r6216;
	st.shared.u16 	[%r6217+8192], %rs17;
	add.s32 	%r6218, %r6144, 33;
	setp.gt.s32 	%p22, %r6218, %r6148;
	selp.f32 	%f274, 0f00000000, %f226, %p22;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs18, %f274;}

	// end inline asm
	shr.u32 	%r6219, %r6218, 5;
	add.s32 	%r6220, %r6219, %r6043;
	and.b32  	%r6221, %r6220, 1;
	or.b32  	%r6222, %r6221, %r6036;
	shl.b32 	%r6223, %r6222, 5;
	or.b32  	%r6224, %r6223, %r6159;
	or.b32  	%r6225, %r6224, %r6153;
	or.b32  	%r6226, %r6225, %r6149;
	or.b32  	%r6227, %r6226, %r6141;
	shl.b32 	%r6228, %r6227, 1;
	add.s32 	%r6229, %r6069, %r6228;
	st.shared.u16 	[%r6229+8194], %rs18;
	setp.gt.s32 	%p23, %r6206, %r6178;
	selp.f32 	%f275, 0f00000000, %f227, %p23;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs19, %f275;}

	// end inline asm
	st.shared.u16 	[%r6217+9216], %rs19;
	setp.gt.s32 	%p24, %r6218, %r6178;
	selp.f32 	%f276, 0f00000000, %f228, %p24;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs20, %f276;}

	// end inline asm
	st.shared.u16 	[%r6229+9218], %rs20;
	setp.gt.s32 	%p25, %r6206, %r6179;
	selp.f32 	%f277, 0f00000000, %f233, %p25;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs21, %f277;}

	// end inline asm
	st.shared.u16 	[%r6217+12288], %rs21;
	setp.gt.s32 	%p26, %r6218, %r6179;
	selp.f32 	%f278, 0f00000000, %f234, %p26;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs22, %f278;}

	// end inline asm
	st.shared.u16 	[%r6229+12290], %rs22;
	setp.gt.s32 	%p27, %r6206, %r6180;
	selp.f32 	%f279, 0f00000000, %f235, %p27;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs23, %f279;}

	// end inline asm
	st.shared.u16 	[%r6217+13312], %rs23;
	setp.gt.s32 	%p28, %r6218, %r6180;
	selp.f32 	%f280, 0f00000000, %f236, %p28;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs24, %f280;}

	// end inline asm
	st.shared.u16 	[%r6229+13314], %rs24;
	add.s32 	%r6230, %r6144, 48;
	setp.gt.s32 	%p29, %r6230, %r6148;
	selp.f32 	%f281, 0f00000000, %f249, %p29;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs25, %f281;}

	// end inline asm
	shr.u32 	%r6231, %r6230, 5;
	add.s32 	%r6232, %r6231, %r6043;
	and.b32  	%r6233, %r6232, 1;
	or.b32  	%r6234, %r6233, %r6036;
	shl.b32 	%r6235, %r6234, 5;
	or.b32  	%r6236, %r6235, %r6182;
	or.b32  	%r6237, %r6236, %r6153;
	or.b32  	%r6238, %r6237, %r6149;
	or.b32  	%r6239, %r6238, %r6141;
	shl.b32 	%r6240, %r6239, 1;
	add.s32 	%r6241, %r6069, %r6240;
	st.shared.u16 	[%r6241+8192], %rs25;
	add.s32 	%r6242, %r6144, 49;
	setp.gt.s32 	%p30, %r6242, %r6148;
	selp.f32 	%f282, 0f00000000, %f250, %p30;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs26, %f282;}

	// end inline asm
	shr.u32 	%r6243, %r6242, 5;
	add.s32 	%r6244, %r6243, %r6043;
	and.b32  	%r6245, %r6244, 1;
	or.b32  	%r6246, %r6245, %r6036;
	shl.b32 	%r6247, %r6246, 5;
	or.b32  	%r6248, %r6247, %r6182;
	or.b32  	%r6249, %r6248, %r6153;
	or.b32  	%r6250, %r6249, %r6149;
	or.b32  	%r6251, %r6250, %r6141;
	shl.b32 	%r6252, %r6251, 1;
	add.s32 	%r6253, %r6069, %r6252;
	st.shared.u16 	[%r6253+8194], %rs26;
	setp.gt.s32 	%p31, %r6230, %r6178;
	selp.f32 	%f283, 0f00000000, %f251, %p31;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs27, %f283;}

	// end inline asm
	st.shared.u16 	[%r6241+9216], %rs27;
	setp.gt.s32 	%p32, %r6242, %r6178;
	selp.f32 	%f284, 0f00000000, %f252, %p32;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs28, %f284;}

	// end inline asm
	st.shared.u16 	[%r6253+9218], %rs28;
	setp.gt.s32 	%p33, %r6230, %r6179;
	selp.f32 	%f285, 0f00000000, %f241, %p33;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs29, %f285;}

	// end inline asm
	st.shared.u16 	[%r6241+12288], %rs29;
	setp.gt.s32 	%p34, %r6242, %r6179;
	selp.f32 	%f286, 0f00000000, %f242, %p34;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs30, %f286;}

	// end inline asm
	st.shared.u16 	[%r6253+12290], %rs30;
	setp.gt.s32 	%p35, %r6230, %r6180;
	selp.f32 	%f287, 0f00000000, %f243, %p35;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs31, %f287;}

	// end inline asm
	st.shared.u16 	[%r6241+13312], %rs31;
	setp.gt.s32 	%p36, %r6242, %r6180;
	selp.f32 	%f288, 0f00000000, %f244, %p36;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs32, %f288;}

	// end inline asm
	st.shared.u16 	[%r6253+13314], %rs32;
	// begin inline asm
	cp.async.wait_all;

	// end inline asm
	bar.sync 	0;
	shl.b32 	%r6254, %r6092, 4;
	and.b32  	%r6255, %r6254, 16;
	shl.b32 	%r6256, %r6111, 3;
	and.b32  	%r6257, %r6256, 8;
	or.b32  	%r6258, %r6255, %r6257;
	or.b32  	%r6259, %r6258, %r6094;
	xor.b32  	%r6260, %r6259, %r6112;
	or.b32  	%r6261, %r6260, %r6125;
	add.s32 	%r4677, %r6069, %r6131;
	add.s32 	%r289, %r4677, 8192;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r285, %r286, %r287, %r288}, [%r289];

	// end inline asm
	add.s32 	%r294, %r4677, 12288;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r290, %r291, %r292, %r293}, [%r294];

	// end inline asm
	shl.b32 	%r6262, %r6261, 1;
	add.s32 	%r6263, %r6069, 16384;
	add.s32 	%r1943, %r6263, %r6262;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r295, %r296, %r297, %r298}, [%r1943];

	// end inline asm
	add.s32 	%r1948, %r1943, %r6138;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r300, %r301, %r302, %r303}, [%r1948];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f289,  %f290,  %f291,  %f292},{%r285,  %r286,  %r287,  %r288},{%r295,  %r296},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f297,  %f298,  %f299,  %f300},{%r290,  %r291,  %r292,  %r293},{%r295,  %r296},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f305,  %f306,  %f307,  %f308},{%r290,  %r291,  %r292,  %r293},{%r297,  %r298},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f313,  %f314,  %f315,  %f316},{%r285,  %r286,  %r287,  %r288},{%r297,  %r298},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f321,  %f322,  %f323,  %f324},{%r285,  %r286,  %r287,  %r288},{%r300,  %r301},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f329,  %f330,  %f331,  %f332},{%r290,  %r291,  %r292,  %r293},{%r300,  %r301},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f337,  %f338,  %f339,  %f340},{%r290,  %r291,  %r292,  %r293},{%r302,  %r303},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f345,  %f346,  %f347,  %f348},{%r285,  %r286,  %r287,  %r288},{%r302,  %r303},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	add.s32 	%r5289, %r289, %r6136;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r353, %r354, %r355, %r356}, [%r5289];

	// end inline asm
	add.s32 	%r5294, %r5289, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r358, %r359, %r360, %r361}, [%r5294];

	// end inline asm
	add.s32 	%r2011, %r1943, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r363, %r364, %r365, %r366}, [%r2011];

	// end inline asm
	add.s32 	%r2016, %r2011, %r6138;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r368, %r369, %r370, %r371}, [%r2016];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f353,  %f354,  %f355,  %f356},{%r353,  %r354,  %r355,  %r356},{%r363,  %r364},{%f289, %f290, %f291, %f292};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f361,  %f362,  %f363,  %f364},{%r358,  %r359,  %r360,  %r361},{%r363,  %r364},{%f297, %f298, %f299, %f300};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f369,  %f370,  %f371,  %f372},{%r358,  %r359,  %r360,  %r361},{%r365,  %r366},{%f305, %f306, %f307, %f308};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f377,  %f378,  %f379,  %f380},{%r353,  %r354,  %r355,  %r356},{%r365,  %r366},{%f313, %f314, %f315, %f316};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f385,  %f386,  %f387,  %f388},{%r353,  %r354,  %r355,  %r356},{%r368,  %r369},{%f321, %f322, %f323, %f324};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f393,  %f394,  %f395,  %f396},{%r358,  %r359,  %r360,  %r361},{%r368,  %r369},{%f329, %f330, %f331, %f332};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f401,  %f402,  %f403,  %f404},{%r358,  %r359,  %r360,  %r361},{%r370,  %r371},{%f337, %f338, %f339, %f340};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f409,  %f410,  %f411,  %f412},{%r353,  %r354,  %r355,  %r356},{%r370,  %r371},{%f345, %f346, %f347, %f348};

	// end inline asm
	add.s32 	%r5357, %r289, %r6138;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r421, %r422, %r423, %r424}, [%r5357];

	// end inline asm
	add.s32 	%r5362, %r5357, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r426, %r427, %r428, %r429}, [%r5362];

	// end inline asm
	add.s32 	%r2079, %r1943, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r431, %r432, %r433, %r434}, [%r2079];

	// end inline asm
	add.s32 	%r2084, %r2079, %r6138;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r436, %r437, %r438, %r439}, [%r2084];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f417,  %f418,  %f419,  %f420},{%r421,  %r422,  %r423,  %r424},{%r431,  %r432},{%f353, %f354, %f355, %f356};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f425,  %f426,  %f427,  %f428},{%r426,  %r427,  %r428,  %r429},{%r431,  %r432},{%f361, %f362, %f363, %f364};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f433,  %f434,  %f435,  %f436},{%r426,  %r427,  %r428,  %r429},{%r433,  %r434},{%f369, %f370, %f371, %f372};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f441,  %f442,  %f443,  %f444},{%r421,  %r422,  %r423,  %r424},{%r433,  %r434},{%f377, %f378, %f379, %f380};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f449,  %f450,  %f451,  %f452},{%r421,  %r422,  %r423,  %r424},{%r436,  %r437},{%f385, %f386, %f387, %f388};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f457,  %f458,  %f459,  %f460},{%r426,  %r427,  %r428,  %r429},{%r436,  %r437},{%f393, %f394, %f395, %f396};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f465,  %f466,  %f467,  %f468},{%r426,  %r427,  %r428,  %r429},{%r438,  %r439},{%f401, %f402, %f403, %f404};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f473,  %f474,  %f475,  %f476},{%r421,  %r422,  %r423,  %r424},{%r438,  %r439},{%f409, %f410, %f411, %f412};

	// end inline asm
	add.s32 	%r5425, %r5357, %r6136;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r489, %r490, %r491, %r492}, [%r5425];

	// end inline asm
	add.s32 	%r5430, %r5425, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r494, %r495, %r496, %r497}, [%r5430];

	// end inline asm
	add.s32 	%r2147, %r1943, 6144;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r499, %r500, %r501, %r502}, [%r2147];

	// end inline asm
	add.s32 	%r2152, %r2147, %r6138;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r504, %r505, %r506, %r507}, [%r2152];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f481,  %f482,  %f483,  %f484},{%r489,  %r490,  %r491,  %r492},{%r499,  %r500},{%f417, %f418, %f419, %f420};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f489,  %f490,  %f491,  %f492},{%r494,  %r495,  %r496,  %r497},{%r499,  %r500},{%f425, %f426, %f427, %f428};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f497,  %f498,  %f499,  %f500},{%r494,  %r495,  %r496,  %r497},{%r501,  %r502},{%f433, %f434, %f435, %f436};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f505,  %f506,  %f507,  %f508},{%r489,  %r490,  %r491,  %r492},{%r501,  %r502},{%f441, %f442, %f443, %f444};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f513,  %f514,  %f515,  %f516},{%r489,  %r490,  %r491,  %r492},{%r504,  %r505},{%f449, %f450, %f451, %f452};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f521,  %f522,  %f523,  %f524},{%r494,  %r495,  %r496,  %r497},{%r504,  %r505},{%f457, %f458, %f459, %f460};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f529,  %f530,  %f531,  %f532},{%r494,  %r495,  %r496,  %r497},{%r506,  %r507},{%f465, %f466, %f467, %f468};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f537,  %f538,  %f539,  %f540},{%r489,  %r490,  %r491,  %r492},{%r506,  %r507},{%f473, %f474, %f475, %f476};

	// end inline asm
	bar.sync 	0;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs33, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f546, %rs33;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs36, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f549, %rs36;}

	// end inline asm
	and.b32  	%r6264, %r6043, 1;
	or.b32  	%r6265, %r6264, %r6036;
	shl.b32 	%r6266, %r6265, 5;
	or.b32  	%r6267, %r6141, %r6149;
	or.b32  	%r6268, %r6267, %r6153;
	or.b32  	%r6269, %r6268, %r6159;
	or.b32  	%r6270, %r6269, %r6266;
	shl.b32 	%r6271, %r6270, 1;
	add.s32 	%r6272, %r6069, %r6271;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs38, %f549;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs35, %f546;}

	// end inline asm
	st.shared.v2.u16 	[%r6272+32768], {%rs35, %rs38};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs39, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f552, %rs39;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs42, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f555, %rs42;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs44, %f555;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs41, %f552;}

	// end inline asm
	st.shared.v2.u16 	[%r6272+33792], {%rs41, %rs44};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs45, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f558, %rs45;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs48, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f561, %rs48;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs50, %f561;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs47, %f558;}

	// end inline asm
	st.shared.v2.u16 	[%r6272+36864], {%rs47, %rs50};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs51, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f564, %rs51;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs54, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f567, %rs54;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs56, %f567;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs53, %f564;}

	// end inline asm
	st.shared.v2.u16 	[%r6272+37888], {%rs53, %rs56};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs57, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f570, %rs57;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs60, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f573, %rs60;}

	// end inline asm
	or.b32  	%r6273, %r6268, %r6182;
	or.b32  	%r6274, %r6273, %r6266;
	shl.b32 	%r6275, %r6274, 1;
	add.s32 	%r6276, %r6069, %r6275;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs62, %f573;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs59, %f570;}

	// end inline asm
	st.shared.v2.u16 	[%r6276+32768], {%rs59, %rs62};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs63, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f576, %rs63;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs66, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f579, %rs66;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs68, %f579;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs65, %f576;}

	// end inline asm
	st.shared.v2.u16 	[%r6276+33792], {%rs65, %rs68};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs69, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f582, %rs69;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs72, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f585, %rs72;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs74, %f585;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs71, %f582;}

	// end inline asm
	st.shared.v2.u16 	[%r6276+36864], {%rs71, %rs74};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs75, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f588, %rs75;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs78, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f591, %rs78;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs80, %f591;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs77, %f588;}

	// end inline asm
	st.shared.v2.u16 	[%r6276+37888], {%rs77, %rs80};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs81, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f594, %rs81;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs84, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f597, %rs84;}

	// end inline asm
	xor.b32  	%r6277, %r6264, 1;
	or.b32  	%r6278, %r6277, %r6036;
	shl.b32 	%r6279, %r6278, 5;
	or.b32  	%r6280, %r6269, %r6279;
	shl.b32 	%r6281, %r6280, 1;
	add.s32 	%r6282, %r6069, %r6281;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs86, %f597;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs83, %f594;}

	// end inline asm
	st.shared.v2.u16 	[%r6282+32768], {%rs83, %rs86};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs87, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f600, %rs87;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs90, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f603, %rs90;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs92, %f603;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs89, %f600;}

	// end inline asm
	st.shared.v2.u16 	[%r6282+33792], {%rs89, %rs92};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs93, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f606, %rs93;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs96, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f609, %rs96;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs98, %f609;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs95, %f606;}

	// end inline asm
	st.shared.v2.u16 	[%r6282+36864], {%rs95, %rs98};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs99, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f612, %rs99;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs102, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f615, %rs102;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs104, %f615;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs101, %f612;}

	// end inline asm
	st.shared.v2.u16 	[%r6282+37888], {%rs101, %rs104};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs105, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f618, %rs105;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs108, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f621, %rs108;}

	// end inline asm
	or.b32  	%r6283, %r6273, %r6279;
	shl.b32 	%r6284, %r6283, 1;
	add.s32 	%r6285, %r6069, %r6284;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs110, %f621;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs107, %f618;}

	// end inline asm
	st.shared.v2.u16 	[%r6285+32768], {%rs107, %rs110};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs111, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f624, %rs111;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs114, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f627, %rs114;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs116, %f627;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs113, %f624;}

	// end inline asm
	st.shared.v2.u16 	[%r6285+33792], {%rs113, %rs116};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs117, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f630, %rs117;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs120, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f633, %rs120;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs122, %f633;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs119, %f630;}

	// end inline asm
	st.shared.v2.u16 	[%r6285+36864], {%rs119, %rs122};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs123, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f636, %rs123;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs126, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f639, %rs126;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs128, %f639;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs125, %f636;}

	// end inline asm
	st.shared.v2.u16 	[%r6285+37888], {%rs125, %rs128};
	// begin inline asm
	cp.async.wait_group 1;

	// end inline asm
	bar.sync 	0;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r557, %r558, %r559, %r560}, [%r1661];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r562, %r563, %r564, %r565}, [%r1666];

	// end inline asm
	add.s32 	%r6286, %r6069, 32768;
	add.s32 	%r4415, %r6286, %r6262;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r567, %r568, %r569, %r570}, [%r4415];

	// end inline asm
	add.s32 	%r4420, %r4415, %r6138;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r572, %r573, %r574, %r575}, [%r4420];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f641,  %f642,  %f643,  %f644},{%r557,  %r558,  %r559,  %r560},{%r567,  %r568},{%f481, %f482, %f483, %f484};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f649,  %f650,  %f651,  %f652},{%r562,  %r563,  %r564,  %r565},{%r567,  %r568},{%f489, %f490, %f491, %f492};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f657,  %f658,  %f659,  %f660},{%r562,  %r563,  %r564,  %r565},{%r569,  %r570},{%f497, %f498, %f499, %f500};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f665,  %f666,  %f667,  %f668},{%r557,  %r558,  %r559,  %r560},{%r569,  %r570},{%f505, %f506, %f507, %f508};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f673,  %f674,  %f675,  %f676},{%r557,  %r558,  %r559,  %r560},{%r572,  %r573},{%f513, %f514, %f515, %f516};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f681,  %f682,  %f683,  %f684},{%r562,  %r563,  %r564,  %r565},{%r572,  %r573},{%f521, %f522, %f523, %f524};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f689,  %f690,  %f691,  %f692},{%r562,  %r563,  %r564,  %r565},{%r574,  %r575},{%f529, %f530, %f531, %f532};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f697,  %f698,  %f699,  %f700},{%r557,  %r558,  %r559,  %r560},{%r574,  %r575},{%f537, %f538, %f539, %f540};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r625, %r626, %r627, %r628}, [%r1729];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r630, %r631, %r632, %r633}, [%r1734];

	// end inline asm
	add.s32 	%r4483, %r4415, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r635, %r636, %r637, %r638}, [%r4483];

	// end inline asm
	add.s32 	%r4488, %r4483, %r6138;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r640, %r641, %r642, %r643}, [%r4488];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f705,  %f706,  %f707,  %f708},{%r625,  %r626,  %r627,  %r628},{%r635,  %r636},{%f641, %f642, %f643, %f644};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f713,  %f714,  %f715,  %f716},{%r630,  %r631,  %r632,  %r633},{%r635,  %r636},{%f649, %f650, %f651, %f652};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f721,  %f722,  %f723,  %f724},{%r630,  %r631,  %r632,  %r633},{%r637,  %r638},{%f657, %f658, %f659, %f660};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f729,  %f730,  %f731,  %f732},{%r625,  %r626,  %r627,  %r628},{%r637,  %r638},{%f665, %f666, %f667, %f668};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f737,  %f738,  %f739,  %f740},{%r625,  %r626,  %r627,  %r628},{%r640,  %r641},{%f673, %f674, %f675, %f676};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f745,  %f746,  %f747,  %f748},{%r630,  %r631,  %r632,  %r633},{%r640,  %r641},{%f681, %f682, %f683, %f684};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f753,  %f754,  %f755,  %f756},{%r630,  %r631,  %r632,  %r633},{%r642,  %r643},{%f689, %f690, %f691, %f692};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f761,  %f762,  %f763,  %f764},{%r625,  %r626,  %r627,  %r628},{%r642,  %r643},{%f697, %f698, %f699, %f700};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r693, %r694, %r695, %r696}, [%r1797];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r698, %r699, %r700, %r701}, [%r1802];

	// end inline asm
	add.s32 	%r4551, %r4415, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r703, %r704, %r705, %r706}, [%r4551];

	// end inline asm
	add.s32 	%r4556, %r4551, %r6138;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r708, %r709, %r710, %r711}, [%r4556];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f769,  %f770,  %f771,  %f772},{%r693,  %r694,  %r695,  %r696},{%r703,  %r704},{%f705, %f706, %f707, %f708};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f777,  %f778,  %f779,  %f780},{%r698,  %r699,  %r700,  %r701},{%r703,  %r704},{%f713, %f714, %f715, %f716};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f785,  %f786,  %f787,  %f788},{%r698,  %r699,  %r700,  %r701},{%r705,  %r706},{%f721, %f722, %f723, %f724};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f793,  %f794,  %f795,  %f796},{%r693,  %r694,  %r695,  %r696},{%r705,  %r706},{%f729, %f730, %f731, %f732};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f801,  %f802,  %f803,  %f804},{%r693,  %r694,  %r695,  %r696},{%r708,  %r709},{%f737, %f738, %f739, %f740};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f809,  %f810,  %f811,  %f812},{%r698,  %r699,  %r700,  %r701},{%r708,  %r709},{%f745, %f746, %f747, %f748};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f817,  %f818,  %f819,  %f820},{%r698,  %r699,  %r700,  %r701},{%r710,  %r711},{%f753, %f754, %f755, %f756};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f825,  %f826,  %f827,  %f828},{%r693,  %r694,  %r695,  %r696},{%r710,  %r711},{%f761, %f762, %f763, %f764};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r761, %r762, %r763, %r764}, [%r1865];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r766, %r767, %r768, %r769}, [%r1870];

	// end inline asm
	add.s32 	%r4619, %r4415, 6144;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r771, %r772, %r773, %r774}, [%r4619];

	// end inline asm
	add.s32 	%r4624, %r4619, %r6138;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r776, %r777, %r778, %r779}, [%r4624];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f833,  %f834,  %f835,  %f836},{%r761,  %r762,  %r763,  %r764},{%r771,  %r772},{%f769, %f770, %f771, %f772};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f841,  %f842,  %f843,  %f844},{%r766,  %r767,  %r768,  %r769},{%r771,  %r772},{%f777, %f778, %f779, %f780};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f849,  %f850,  %f851,  %f852},{%r766,  %r767,  %r768,  %r769},{%r773,  %r774},{%f785, %f786, %f787, %f788};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f857,  %f858,  %f859,  %f860},{%r761,  %r762,  %r763,  %r764},{%r773,  %r774},{%f793, %f794, %f795, %f796};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f865,  %f866,  %f867,  %f868},{%r761,  %r762,  %r763,  %r764},{%r776,  %r777},{%f801, %f802, %f803, %f804};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f873,  %f874,  %f875,  %f876},{%r766,  %r767,  %r768,  %r769},{%r776,  %r777},{%f809, %f810, %f811, %f812};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f881,  %f882,  %f883,  %f884},{%r766,  %r767,  %r768,  %r769},{%r778,  %r779},{%f817, %f818, %f819, %f820};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f889,  %f890,  %f891,  %f892},{%r761,  %r762,  %r763,  %r764},{%r778,  %r779},{%f825, %f826, %f827, %f828};

	// end inline asm
	bar.sync 	0;
	add.s32 	%r6287, %r6066, 16384;
	or.b32  	%r6288, %r6287, %r6063;
	or.b32  	%r6289, %r6288, %r6065;
	mul.wide.s32 	%rd64, %r6289, 2;
	add.s64 	%rd33, %rd53, %rd64;
	// begin inline asm
	cp.async.cg.shared.global [%r4125], [%rd33], 16;
	// end inline asm
	add.s32 	%r6290, %r6289, 4096;
	mul.wide.s32 	%rd65, %r6290, 2;
	add.s64 	%rd34, %rd53, %rd65;
	// begin inline asm
	cp.async.cg.shared.global [%r4126], [%rd34], 16;
	// end inline asm
	add.s32 	%r6291, %r6289, 8192;
	mul.wide.s32 	%rd66, %r6291, 2;
	add.s64 	%rd35, %rd53, %rd66;
	// begin inline asm
	cp.async.cg.shared.global [%r4127], [%rd35], 16;
	// end inline asm
	add.s32 	%r6292, %r6289, 12288;
	mul.wide.s32 	%rd67, %r6292, 2;
	add.s64 	%rd36, %rd53, %rd67;
	// begin inline asm
	cp.async.cg.shared.global [%r4128], [%rd36], 16;
	// end inline asm
	// begin inline asm
	cp.async.commit_group;

	// end inline asm
	// begin inline asm
	cp.async.wait_group 1;

	// end inline asm
	bar.sync 	0;
	shl.b32 	%r6293, %r6121, 4;
	and.b32  	%r6294, %r6293, 16;
	or.b32  	%r6295, %r6294, %r6103;
	or.b32  	%r6296, %r6295, %r6104;
	shl.b32 	%r6297, %r6092, 9;
	xor.b32  	%r6298, %r6296, %r6106;
	or.b32  	%r6299, %r6298, %r6297;
	shl.b32 	%r6300, %r6299, 1;
	add.s32 	%r1933, %r6069, %r6300;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r833, %r834, %r835, %r836}, [%r1933];

	// end inline asm
	add.s32 	%r1938, %r1933, %r6139;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r838, %r839, %r840, %r841}, [%r1938];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r843, %r844, %r845, %r846}, [%r1943];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r848, %r849, %r850, %r851}, [%r1948];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f897,  %f898,  %f899,  %f900},{%r833,  %r834,  %r835,  %r836},{%r843,  %r844},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f905,  %f906,  %f907,  %f908},{%r838,  %r839,  %r840,  %r841},{%r843,  %r844},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f913,  %f914,  %f915,  %f916},{%r838,  %r839,  %r840,  %r841},{%r845,  %r846},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f921,  %f922,  %f923,  %f924},{%r833,  %r834,  %r835,  %r836},{%r845,  %r846},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f929,  %f930,  %f931,  %f932},{%r833,  %r834,  %r835,  %r836},{%r848,  %r849},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f937,  %f938,  %f939,  %f940},{%r838,  %r839,  %r840,  %r841},{%r848,  %r849},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f945,  %f946,  %f947,  %f948},{%r838,  %r839,  %r840,  %r841},{%r850,  %r851},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f953,  %f954,  %f955,  %f956},{%r833,  %r834,  %r835,  %r836},{%r850,  %r851},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	add.s32 	%r2001, %r1933, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r901, %r902, %r903, %r904}, [%r2001];

	// end inline asm
	add.s32 	%r2006, %r2001, %r6139;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r906, %r907, %r908, %r909}, [%r2006];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r911, %r912, %r913, %r914}, [%r2011];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r916, %r917, %r918, %r919}, [%r2016];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f961,  %f962,  %f963,  %f964},{%r901,  %r902,  %r903,  %r904},{%r911,  %r912},{%f897, %f898, %f899, %f900};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f969,  %f970,  %f971,  %f972},{%r906,  %r907,  %r908,  %r909},{%r911,  %r912},{%f905, %f906, %f907, %f908};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f977,  %f978,  %f979,  %f980},{%r906,  %r907,  %r908,  %r909},{%r913,  %r914},{%f913, %f914, %f915, %f916};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f985,  %f986,  %f987,  %f988},{%r901,  %r902,  %r903,  %r904},{%r913,  %r914},{%f921, %f922, %f923, %f924};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f993,  %f994,  %f995,  %f996},{%r901,  %r902,  %r903,  %r904},{%r916,  %r917},{%f929, %f930, %f931, %f932};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1001,  %f1002,  %f1003,  %f1004},{%r906,  %r907,  %r908,  %r909},{%r916,  %r917},{%f937, %f938, %f939, %f940};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1009,  %f1010,  %f1011,  %f1012},{%r906,  %r907,  %r908,  %r909},{%r918,  %r919},{%f945, %f946, %f947, %f948};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1017,  %f1018,  %f1019,  %f1020},{%r901,  %r902,  %r903,  %r904},{%r918,  %r919},{%f953, %f954, %f955, %f956};

	// end inline asm
	add.s32 	%r2069, %r1933, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r969, %r970, %r971, %r972}, [%r2069];

	// end inline asm
	add.s32 	%r2074, %r2069, %r6139;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r974, %r975, %r976, %r977}, [%r2074];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r979, %r980, %r981, %r982}, [%r2079];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r984, %r985, %r986, %r987}, [%r2084];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1025,  %f1026,  %f1027,  %f1028},{%r969,  %r970,  %r971,  %r972},{%r979,  %r980},{%f961, %f962, %f963, %f964};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1033,  %f1034,  %f1035,  %f1036},{%r974,  %r975,  %r976,  %r977},{%r979,  %r980},{%f969, %f970, %f971, %f972};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1041,  %f1042,  %f1043,  %f1044},{%r974,  %r975,  %r976,  %r977},{%r981,  %r982},{%f977, %f978, %f979, %f980};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1049,  %f1050,  %f1051,  %f1052},{%r969,  %r970,  %r971,  %r972},{%r981,  %r982},{%f985, %f986, %f987, %f988};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1057,  %f1058,  %f1059,  %f1060},{%r969,  %r970,  %r971,  %r972},{%r984,  %r985},{%f993, %f994, %f995, %f996};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1065,  %f1066,  %f1067,  %f1068},{%r974,  %r975,  %r976,  %r977},{%r984,  %r985},{%f1001, %f1002, %f1003, %f1004};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1073,  %f1074,  %f1075,  %f1076},{%r974,  %r975,  %r976,  %r977},{%r986,  %r987},{%f1009, %f1010, %f1011, %f1012};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1081,  %f1082,  %f1083,  %f1084},{%r969,  %r970,  %r971,  %r972},{%r986,  %r987},{%f1017, %f1018, %f1019, %f1020};

	// end inline asm
	add.s32 	%r2137, %r1933, 6144;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r1037, %r1038, %r1039, %r1040}, [%r2137];

	// end inline asm
	add.s32 	%r2142, %r2137, %r6139;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r1042, %r1043, %r1044, %r1045}, [%r2142];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r1047, %r1048, %r1049, %r1050}, [%r2147];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r1052, %r1053, %r1054, %r1055}, [%r2152];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1089,  %f1090,  %f1091,  %f1092},{%r1037,  %r1038,  %r1039,  %r1040},{%r1047,  %r1048},{%f1025, %f1026, %f1027, %f1028};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1097,  %f1098,  %f1099,  %f1100},{%r1042,  %r1043,  %r1044,  %r1045},{%r1047,  %r1048},{%f1033, %f1034, %f1035, %f1036};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1105,  %f1106,  %f1107,  %f1108},{%r1042,  %r1043,  %r1044,  %r1045},{%r1049,  %r1050},{%f1041, %f1042, %f1043, %f1044};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1113,  %f1114,  %f1115,  %f1116},{%r1037,  %r1038,  %r1039,  %r1040},{%r1049,  %r1050},{%f1049, %f1050, %f1051, %f1052};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1121,  %f1122,  %f1123,  %f1124},{%r1037,  %r1038,  %r1039,  %r1040},{%r1052,  %r1053},{%f1057, %f1058, %f1059, %f1060};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1129,  %f1130,  %f1131,  %f1132},{%r1042,  %r1043,  %r1044,  %r1045},{%r1052,  %r1053},{%f1065, %f1066, %f1067, %f1068};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1137,  %f1138,  %f1139,  %f1140},{%r1042,  %r1043,  %r1044,  %r1045},{%r1054,  %r1055},{%f1073, %f1074, %f1075, %f1076};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1145,  %f1146,  %f1147,  %f1148},{%r1037,  %r1038,  %r1039,  %r1040},{%r1054,  %r1055},{%f1081, %f1082, %f1083, %f1084};

	// end inline asm
	bar.sync 	0;
	add.s64 	%rd29, %rd49, %rd64;
	// begin inline asm
	cp.async.cg.shared.global [%r3849], [%rd29], 16;
	// end inline asm
	add.s64 	%rd30, %rd49, %rd65;
	// begin inline asm
	cp.async.cg.shared.global [%r3850], [%rd30], 16;
	// end inline asm
	add.s64 	%rd31, %rd49, %rd66;
	// begin inline asm
	cp.async.cg.shared.global [%r3851], [%rd31], 16;
	// end inline asm
	add.s64 	%rd32, %rd49, %rd67;
	// begin inline asm
	cp.async.cg.shared.global [%r3852], [%rd32], 16;
	// end inline asm
	add.s64 	%rd25, %rd51, %rd64;
	// begin inline asm
	cp.async.cg.shared.global [%r3029], [%rd25], 16;
	// end inline asm
	add.s64 	%rd26, %rd51, %rd65;
	// begin inline asm
	cp.async.cg.shared.global [%r3030], [%rd26], 16;
	// end inline asm
	add.s64 	%rd27, %rd51, %rd66;
	// begin inline asm
	cp.async.cg.shared.global [%r3031], [%rd27], 16;
	// end inline asm
	add.s64 	%rd28, %rd51, %rd67;
	// begin inline asm
	cp.async.cg.shared.global [%r3032], [%rd28], 16;
	// end inline asm
	// begin inline asm
	cp.async.commit_group;

	// end inline asm
	mul.f32 	%f1153, %f833, 0f3E000000;
	mul.f32 	%f1156, %f834, 0f3E000000;
	mul.f32 	%f1159, %f835, 0f3E000000;
	mul.f32 	%f1162, %f836, 0f3E000000;
	mul.f32 	%f1165, %f841, 0f3E000000;
	mul.f32 	%f1168, %f842, 0f3E000000;
	mul.f32 	%f1171, %f843, 0f3E000000;
	mul.f32 	%f1174, %f844, 0f3E000000;
	mul.f32 	%f1177, %f857, 0f3E000000;
	mul.f32 	%f1180, %f858, 0f3E000000;
	mul.f32 	%f1183, %f859, 0f3E000000;
	mul.f32 	%f1186, %f860, 0f3E000000;
	mul.f32 	%f1189, %f849, 0f3E000000;
	mul.f32 	%f1192, %f850, 0f3E000000;
	mul.f32 	%f1195, %f851, 0f3E000000;
	mul.f32 	%f1198, %f852, 0f3E000000;
	mul.f32 	%f1201, %f865, 0f3E000000;
	mul.f32 	%f1204, %f866, 0f3E000000;
	mul.f32 	%f1207, %f867, 0f3E000000;
	mul.f32 	%f1210, %f868, 0f3E000000;
	mul.f32 	%f1213, %f873, 0f3E000000;
	mul.f32 	%f1216, %f874, 0f3E000000;
	mul.f32 	%f1219, %f875, 0f3E000000;
	mul.f32 	%f1222, %f876, 0f3E000000;
	mul.f32 	%f1225, %f889, 0f3E000000;
	mul.f32 	%f1228, %f890, 0f3E000000;
	mul.f32 	%f1231, %f891, 0f3E000000;
	mul.f32 	%f1234, %f892, 0f3E000000;
	mul.f32 	%f1237, %f881, 0f3E000000;
	mul.f32 	%f1240, %f882, 0f3E000000;
	mul.f32 	%f1243, %f883, 0f3E000000;
	mul.f32 	%f1246, %f884, 0f3E000000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs129, %f1153;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1154, %rs129;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs132, %f1156;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1157, %rs132;}

	// end inline asm
	shl.b32 	%r6301, %r6033, 7;
	and.b32  	%r6302, %r6301, 4096;
	shl.b32 	%r6303, %r6147, 8;
	or.b32  	%r6304, %r6060, %r6302;
	or.b32  	%r6305, %r6304, %r6063;
	add.s32 	%r6306, %r6144, %r6305;
	add.s32 	%r6307, %r6306, %r6303;
	mul.wide.s32 	%rd68, %r6307, 2;
	add.s64 	%rd69, %rd56, %rd68;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs134, %f1157;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs131, %f1154;}

	// end inline asm
	st.global.v2.u16 	[%rd69], {%rs131, %rs134};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs135, %f1159;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1160, %rs135;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs138, %f1162;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1163, %rs138;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs140, %f1163;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs137, %f1160;}

	// end inline asm
	st.global.v2.u16 	[%rd69+4096], {%rs137, %rs140};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs141, %f1165;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1166, %rs141;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs144, %f1168;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1169, %rs144;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs146, %f1169;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs143, %f1166;}

	// end inline asm
	st.global.v2.u16 	[%rd69+16384], {%rs143, %rs146};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs147, %f1171;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1172, %rs147;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs150, %f1174;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1175, %rs150;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs152, %f1175;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs149, %f1172;}

	// end inline asm
	st.global.v2.u16 	[%rd69+20480], {%rs149, %rs152};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs153, %f1177;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1178, %rs153;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs156, %f1180;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1181, %rs156;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs158, %f1181;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs155, %f1178;}

	// end inline asm
	st.global.v2.u16 	[%rd69+32], {%rs155, %rs158};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs159, %f1183;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1184, %rs159;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs162, %f1186;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1187, %rs162;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs164, %f1187;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs161, %f1184;}

	// end inline asm
	st.global.v2.u16 	[%rd69+4128], {%rs161, %rs164};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs165, %f1189;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1190, %rs165;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs168, %f1192;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1193, %rs168;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs170, %f1193;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs167, %f1190;}

	// end inline asm
	st.global.v2.u16 	[%rd69+16416], {%rs167, %rs170};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs171, %f1195;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1196, %rs171;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs174, %f1198;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1199, %rs174;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs176, %f1199;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs173, %f1196;}

	// end inline asm
	st.global.v2.u16 	[%rd69+20512], {%rs173, %rs176};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs177, %f1201;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1202, %rs177;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs180, %f1204;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1205, %rs180;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs182, %f1205;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs179, %f1202;}

	// end inline asm
	st.global.v2.u16 	[%rd69+64], {%rs179, %rs182};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs183, %f1207;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1208, %rs183;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs186, %f1210;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1211, %rs186;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs188, %f1211;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs185, %f1208;}

	// end inline asm
	st.global.v2.u16 	[%rd69+4160], {%rs185, %rs188};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs189, %f1213;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1214, %rs189;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs192, %f1216;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1217, %rs192;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs194, %f1217;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs191, %f1214;}

	// end inline asm
	st.global.v2.u16 	[%rd69+16448], {%rs191, %rs194};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs195, %f1219;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1220, %rs195;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs198, %f1222;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1223, %rs198;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs200, %f1223;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs197, %f1220;}

	// end inline asm
	st.global.v2.u16 	[%rd69+20544], {%rs197, %rs200};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs201, %f1225;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1226, %rs201;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs204, %f1228;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1229, %rs204;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs206, %f1229;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs203, %f1226;}

	// end inline asm
	st.global.v2.u16 	[%rd69+96], {%rs203, %rs206};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs207, %f1231;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1232, %rs207;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs210, %f1234;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1235, %rs210;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs212, %f1235;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs209, %f1232;}

	// end inline asm
	st.global.v2.u16 	[%rd69+4192], {%rs209, %rs212};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs213, %f1237;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1238, %rs213;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs216, %f1240;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1241, %rs216;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs218, %f1241;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs215, %f1238;}

	// end inline asm
	st.global.v2.u16 	[%rd69+16480], {%rs215, %rs218};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs219, %f1243;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1244, %rs219;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs222, %f1246;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1247, %rs222;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs224, %f1247;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs221, %f1244;}

	// end inline asm
	st.global.v2.u16 	[%rd69+20576], {%rs221, %rs224};
	// begin inline asm
	cp.async.wait_all;

	// end inline asm
	bar.sync 	0;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1113, %r1114, %r1115, %r1116}, [%r1661];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1118, %r1119, %r1120, %r1121}, [%r1666];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1123, %r1124, %r1125, %r1126}, [%r1127];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1128, %r1129, %r1130, %r1131}, [%r1132];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1249,  %f1250,  %f1251,  %f1252},{%r1113,  %r1114,  %r1115,  %r1116},{%r1123,  %r1124},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1257,  %f1258,  %f1259,  %f1260},{%r1118,  %r1119,  %r1120,  %r1121},{%r1123,  %r1124},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1265,  %f1266,  %f1267,  %f1268},{%r1118,  %r1119,  %r1120,  %r1121},{%r1125,  %r1126},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1273,  %f1274,  %f1275,  %f1276},{%r1113,  %r1114,  %r1115,  %r1116},{%r1125,  %r1126},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1281,  %f1282,  %f1283,  %f1284},{%r1113,  %r1114,  %r1115,  %r1116},{%r1128,  %r1129},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1289,  %f1290,  %f1291,  %f1292},{%r1118,  %r1119,  %r1120,  %r1121},{%r1128,  %r1129},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1297,  %f1298,  %f1299,  %f1300},{%r1118,  %r1119,  %r1120,  %r1121},{%r1130,  %r1131},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1305,  %f1306,  %f1307,  %f1308},{%r1113,  %r1114,  %r1115,  %r1116},{%r1130,  %r1131},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1181, %r1182, %r1183, %r1184}, [%r1729];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1186, %r1187, %r1188, %r1189}, [%r1734];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1191, %r1192, %r1193, %r1194}, [%r1195];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1196, %r1197, %r1198, %r1199}, [%r1200];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1313,  %f1314,  %f1315,  %f1316},{%r1181,  %r1182,  %r1183,  %r1184},{%r1191,  %r1192},{%f1249, %f1250, %f1251, %f1252};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1321,  %f1322,  %f1323,  %f1324},{%r1186,  %r1187,  %r1188,  %r1189},{%r1191,  %r1192},{%f1257, %f1258, %f1259, %f1260};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1329,  %f1330,  %f1331,  %f1332},{%r1186,  %r1187,  %r1188,  %r1189},{%r1193,  %r1194},{%f1265, %f1266, %f1267, %f1268};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1337,  %f1338,  %f1339,  %f1340},{%r1181,  %r1182,  %r1183,  %r1184},{%r1193,  %r1194},{%f1273, %f1274, %f1275, %f1276};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1345,  %f1346,  %f1347,  %f1348},{%r1181,  %r1182,  %r1183,  %r1184},{%r1196,  %r1197},{%f1281, %f1282, %f1283, %f1284};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1353,  %f1354,  %f1355,  %f1356},{%r1186,  %r1187,  %r1188,  %r1189},{%r1196,  %r1197},{%f1289, %f1290, %f1291, %f1292};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1361,  %f1362,  %f1363,  %f1364},{%r1186,  %r1187,  %r1188,  %r1189},{%r1198,  %r1199},{%f1297, %f1298, %f1299, %f1300};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1369,  %f1370,  %f1371,  %f1372},{%r1181,  %r1182,  %r1183,  %r1184},{%r1198,  %r1199},{%f1305, %f1306, %f1307, %f1308};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1249, %r1250, %r1251, %r1252}, [%r1797];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1254, %r1255, %r1256, %r1257}, [%r1802];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1259, %r1260, %r1261, %r1262}, [%r1263];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1264, %r1265, %r1266, %r1267}, [%r1268];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1377,  %f1378,  %f1379,  %f1380},{%r1249,  %r1250,  %r1251,  %r1252},{%r1259,  %r1260},{%f1313, %f1314, %f1315, %f1316};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1385,  %f1386,  %f1387,  %f1388},{%r1254,  %r1255,  %r1256,  %r1257},{%r1259,  %r1260},{%f1321, %f1322, %f1323, %f1324};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1393,  %f1394,  %f1395,  %f1396},{%r1254,  %r1255,  %r1256,  %r1257},{%r1261,  %r1262},{%f1329, %f1330, %f1331, %f1332};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1401,  %f1402,  %f1403,  %f1404},{%r1249,  %r1250,  %r1251,  %r1252},{%r1261,  %r1262},{%f1337, %f1338, %f1339, %f1340};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1409,  %f1410,  %f1411,  %f1412},{%r1249,  %r1250,  %r1251,  %r1252},{%r1264,  %r1265},{%f1345, %f1346, %f1347, %f1348};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1417,  %f1418,  %f1419,  %f1420},{%r1254,  %r1255,  %r1256,  %r1257},{%r1264,  %r1265},{%f1353, %f1354, %f1355, %f1356};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1425,  %f1426,  %f1427,  %f1428},{%r1254,  %r1255,  %r1256,  %r1257},{%r1266,  %r1267},{%f1361, %f1362, %f1363, %f1364};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1433,  %f1434,  %f1435,  %f1436},{%r1249,  %r1250,  %r1251,  %r1252},{%r1266,  %r1267},{%f1369, %f1370, %f1371, %f1372};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1317, %r1318, %r1319, %r1320}, [%r1865];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1322, %r1323, %r1324, %r1325}, [%r1870];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1327, %r1328, %r1329, %r1330}, [%r1331];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1332, %r1333, %r1334, %r1335}, [%r1336];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1441,  %f1442,  %f1443,  %f1444},{%r1317,  %r1318,  %r1319,  %r1320},{%r1327,  %r1328},{%f1377, %f1378, %f1379, %f1380};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1449,  %f1450,  %f1451,  %f1452},{%r1322,  %r1323,  %r1324,  %r1325},{%r1327,  %r1328},{%f1385, %f1386, %f1387, %f1388};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1457,  %f1458,  %f1459,  %f1460},{%r1322,  %r1323,  %r1324,  %r1325},{%r1329,  %r1330},{%f1393, %f1394, %f1395, %f1396};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1465,  %f1466,  %f1467,  %f1468},{%r1317,  %r1318,  %r1319,  %r1320},{%r1329,  %r1330},{%f1401, %f1402, %f1403, %f1404};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1473,  %f1474,  %f1475,  %f1476},{%r1317,  %r1318,  %r1319,  %r1320},{%r1332,  %r1333},{%f1409, %f1410, %f1411, %f1412};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1481,  %f1482,  %f1483,  %f1484},{%r1322,  %r1323,  %r1324,  %r1325},{%r1332,  %r1333},{%f1417, %f1418, %f1419, %f1420};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1489,  %f1490,  %f1491,  %f1492},{%r1322,  %r1323,  %r1324,  %r1325},{%r1334,  %r1335},{%f1425, %f1426, %f1427, %f1428};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1497,  %f1498,  %f1499,  %f1500},{%r1317,  %r1318,  %r1319,  %r1320},{%r1334,  %r1335},{%f1433, %f1434, %f1435, %f1436};

	// end inline asm
	bar.sync 	0;
	selp.f32 	%f1505, 0f00000000, %f1441, %p5;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs225, %f1505;}

	// end inline asm
	st.shared.u16 	[%r6165+8192], %rs225;
	selp.f32 	%f1506, %f1442, 0f00000000, %p6;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs226, %f1506;}

	// end inline asm
	st.shared.u16 	[%r6177+8194], %rs226;
	selp.f32 	%f1507, 0f00000000, %f1443, %p7;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs227, %f1507;}

	// end inline asm
	st.shared.u16 	[%r6165+9216], %rs227;
	selp.f32 	%f1508, %f1444, 0f00000000, %p8;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs228, %f1508;}

	// end inline asm
	st.shared.u16 	[%r6177+9218], %rs228;
	selp.f32 	%f1509, 0f00000000, %f1449, %p9;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs229, %f1509;}

	// end inline asm
	st.shared.u16 	[%r6165+12288], %rs229;
	selp.f32 	%f1510, %f1450, 0f00000000, %p10;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs230, %f1510;}

	// end inline asm
	st.shared.u16 	[%r6177+12290], %rs230;
	selp.f32 	%f1511, 0f00000000, %f1451, %p11;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs231, %f1511;}

	// end inline asm
	st.shared.u16 	[%r6165+13312], %rs231;
	selp.f32 	%f1512, %f1452, 0f00000000, %p12;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs232, %f1512;}

	// end inline asm
	st.shared.u16 	[%r6177+13314], %rs232;
	selp.f32 	%f1513, 0f00000000, %f1465, %p13;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs233, %f1513;}

	// end inline asm
	st.shared.u16 	[%r6193+8192], %rs233;
	selp.f32 	%f1514, 0f00000000, %f1466, %p14;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs234, %f1514;}

	// end inline asm
	st.shared.u16 	[%r6205+8194], %rs234;
	selp.f32 	%f1515, 0f00000000, %f1467, %p15;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs235, %f1515;}

	// end inline asm
	st.shared.u16 	[%r6193+9216], %rs235;
	selp.f32 	%f1516, 0f00000000, %f1468, %p16;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs236, %f1516;}

	// end inline asm
	st.shared.u16 	[%r6205+9218], %rs236;
	selp.f32 	%f1517, 0f00000000, %f1457, %p17;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs237, %f1517;}

	// end inline asm
	st.shared.u16 	[%r6193+12288], %rs237;
	selp.f32 	%f1518, 0f00000000, %f1458, %p18;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs238, %f1518;}

	// end inline asm
	st.shared.u16 	[%r6205+12290], %rs238;
	selp.f32 	%f1519, 0f00000000, %f1459, %p19;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs239, %f1519;}

	// end inline asm
	st.shared.u16 	[%r6193+13312], %rs239;
	selp.f32 	%f1520, 0f00000000, %f1460, %p20;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs240, %f1520;}

	// end inline asm
	st.shared.u16 	[%r6205+13314], %rs240;
	selp.f32 	%f1521, 0f00000000, %f1473, %p21;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs241, %f1521;}

	// end inline asm
	st.shared.u16 	[%r6217+8192], %rs241;
	selp.f32 	%f1522, 0f00000000, %f1474, %p22;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs242, %f1522;}

	// end inline asm
	st.shared.u16 	[%r6229+8194], %rs242;
	selp.f32 	%f1523, 0f00000000, %f1475, %p23;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs243, %f1523;}

	// end inline asm
	st.shared.u16 	[%r6217+9216], %rs243;
	selp.f32 	%f1524, 0f00000000, %f1476, %p24;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs244, %f1524;}

	// end inline asm
	st.shared.u16 	[%r6229+9218], %rs244;
	selp.f32 	%f1525, 0f00000000, %f1481, %p25;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs245, %f1525;}

	// end inline asm
	st.shared.u16 	[%r6217+12288], %rs245;
	selp.f32 	%f1526, 0f00000000, %f1482, %p26;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs246, %f1526;}

	// end inline asm
	st.shared.u16 	[%r6229+12290], %rs246;
	selp.f32 	%f1527, 0f00000000, %f1483, %p27;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs247, %f1527;}

	// end inline asm
	st.shared.u16 	[%r6217+13312], %rs247;
	selp.f32 	%f1528, 0f00000000, %f1484, %p28;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs248, %f1528;}

	// end inline asm
	st.shared.u16 	[%r6229+13314], %rs248;
	selp.f32 	%f1529, 0f00000000, %f1497, %p29;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs249, %f1529;}

	// end inline asm
	st.shared.u16 	[%r6241+8192], %rs249;
	selp.f32 	%f1530, 0f00000000, %f1498, %p30;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs250, %f1530;}

	// end inline asm
	st.shared.u16 	[%r6253+8194], %rs250;
	selp.f32 	%f1531, 0f00000000, %f1499, %p31;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs251, %f1531;}

	// end inline asm
	st.shared.u16 	[%r6241+9216], %rs251;
	selp.f32 	%f1532, 0f00000000, %f1500, %p32;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs252, %f1532;}

	// end inline asm
	st.shared.u16 	[%r6253+9218], %rs252;
	selp.f32 	%f1533, 0f00000000, %f1489, %p33;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs253, %f1533;}

	// end inline asm
	st.shared.u16 	[%r6241+12288], %rs253;
	selp.f32 	%f1534, 0f00000000, %f1490, %p34;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs254, %f1534;}

	// end inline asm
	st.shared.u16 	[%r6253+12290], %rs254;
	selp.f32 	%f1535, 0f00000000, %f1491, %p35;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs255, %f1535;}

	// end inline asm
	st.shared.u16 	[%r6241+13312], %rs255;
	selp.f32 	%f1536, 0f00000000, %f1492, %p36;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs256, %f1536;}

	// end inline asm
	st.shared.u16 	[%r6253+13314], %rs256;
	// begin inline asm
	cp.async.wait_all;

	// end inline asm
	bar.sync 	0;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1385, %r1386, %r1387, %r1388}, [%r289];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1390, %r1391, %r1392, %r1393}, [%r294];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r1395, %r1396, %r1397, %r1398}, [%r1943];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r1400, %r1401, %r1402, %r1403}, [%r1948];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1537,  %f1538,  %f1539,  %f1540},{%r1385,  %r1386,  %r1387,  %r1388},{%r1395,  %r1396},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1545,  %f1546,  %f1547,  %f1548},{%r1390,  %r1391,  %r1392,  %r1393},{%r1395,  %r1396},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1553,  %f1554,  %f1555,  %f1556},{%r1390,  %r1391,  %r1392,  %r1393},{%r1397,  %r1398},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1561,  %f1562,  %f1563,  %f1564},{%r1385,  %r1386,  %r1387,  %r1388},{%r1397,  %r1398},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1569,  %f1570,  %f1571,  %f1572},{%r1385,  %r1386,  %r1387,  %r1388},{%r1400,  %r1401},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1577,  %f1578,  %f1579,  %f1580},{%r1390,  %r1391,  %r1392,  %r1393},{%r1400,  %r1401},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1585,  %f1586,  %f1587,  %f1588},{%r1390,  %r1391,  %r1392,  %r1393},{%r1402,  %r1403},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1593,  %f1594,  %f1595,  %f1596},{%r1385,  %r1386,  %r1387,  %r1388},{%r1402,  %r1403},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1453, %r1454, %r1455, %r1456}, [%r5289];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1458, %r1459, %r1460, %r1461}, [%r5294];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r1463, %r1464, %r1465, %r1466}, [%r2011];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r1468, %r1469, %r1470, %r1471}, [%r2016];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1601,  %f1602,  %f1603,  %f1604},{%r1453,  %r1454,  %r1455,  %r1456},{%r1463,  %r1464},{%f1537, %f1538, %f1539, %f1540};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1609,  %f1610,  %f1611,  %f1612},{%r1458,  %r1459,  %r1460,  %r1461},{%r1463,  %r1464},{%f1545, %f1546, %f1547, %f1548};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1617,  %f1618,  %f1619,  %f1620},{%r1458,  %r1459,  %r1460,  %r1461},{%r1465,  %r1466},{%f1553, %f1554, %f1555, %f1556};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1625,  %f1626,  %f1627,  %f1628},{%r1453,  %r1454,  %r1455,  %r1456},{%r1465,  %r1466},{%f1561, %f1562, %f1563, %f1564};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1633,  %f1634,  %f1635,  %f1636},{%r1453,  %r1454,  %r1455,  %r1456},{%r1468,  %r1469},{%f1569, %f1570, %f1571, %f1572};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1641,  %f1642,  %f1643,  %f1644},{%r1458,  %r1459,  %r1460,  %r1461},{%r1468,  %r1469},{%f1577, %f1578, %f1579, %f1580};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1649,  %f1650,  %f1651,  %f1652},{%r1458,  %r1459,  %r1460,  %r1461},{%r1470,  %r1471},{%f1585, %f1586, %f1587, %f1588};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1657,  %f1658,  %f1659,  %f1660},{%r1453,  %r1454,  %r1455,  %r1456},{%r1470,  %r1471},{%f1593, %f1594, %f1595, %f1596};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1521, %r1522, %r1523, %r1524}, [%r5357];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1526, %r1527, %r1528, %r1529}, [%r5362];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r1531, %r1532, %r1533, %r1534}, [%r2079];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r1536, %r1537, %r1538, %r1539}, [%r2084];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1665,  %f1666,  %f1667,  %f1668},{%r1521,  %r1522,  %r1523,  %r1524},{%r1531,  %r1532},{%f1601, %f1602, %f1603, %f1604};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1673,  %f1674,  %f1675,  %f1676},{%r1526,  %r1527,  %r1528,  %r1529},{%r1531,  %r1532},{%f1609, %f1610, %f1611, %f1612};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1681,  %f1682,  %f1683,  %f1684},{%r1526,  %r1527,  %r1528,  %r1529},{%r1533,  %r1534},{%f1617, %f1618, %f1619, %f1620};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1689,  %f1690,  %f1691,  %f1692},{%r1521,  %r1522,  %r1523,  %r1524},{%r1533,  %r1534},{%f1625, %f1626, %f1627, %f1628};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1697,  %f1698,  %f1699,  %f1700},{%r1521,  %r1522,  %r1523,  %r1524},{%r1536,  %r1537},{%f1633, %f1634, %f1635, %f1636};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1705,  %f1706,  %f1707,  %f1708},{%r1526,  %r1527,  %r1528,  %r1529},{%r1536,  %r1537},{%f1641, %f1642, %f1643, %f1644};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1713,  %f1714,  %f1715,  %f1716},{%r1526,  %r1527,  %r1528,  %r1529},{%r1538,  %r1539},{%f1649, %f1650, %f1651, %f1652};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1721,  %f1722,  %f1723,  %f1724},{%r1521,  %r1522,  %r1523,  %r1524},{%r1538,  %r1539},{%f1657, %f1658, %f1659, %f1660};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1589, %r1590, %r1591, %r1592}, [%r5425];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1594, %r1595, %r1596, %r1597}, [%r5430];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r1599, %r1600, %r1601, %r1602}, [%r2147];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r1604, %r1605, %r1606, %r1607}, [%r2152];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1729,  %f1730,  %f1731,  %f1732},{%r1589,  %r1590,  %r1591,  %r1592},{%r1599,  %r1600},{%f1665, %f1666, %f1667, %f1668};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1737,  %f1738,  %f1739,  %f1740},{%r1594,  %r1595,  %r1596,  %r1597},{%r1599,  %r1600},{%f1673, %f1674, %f1675, %f1676};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1745,  %f1746,  %f1747,  %f1748},{%r1594,  %r1595,  %r1596,  %r1597},{%r1601,  %r1602},{%f1681, %f1682, %f1683, %f1684};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1753,  %f1754,  %f1755,  %f1756},{%r1589,  %r1590,  %r1591,  %r1592},{%r1601,  %r1602},{%f1689, %f1690, %f1691, %f1692};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1761,  %f1762,  %f1763,  %f1764},{%r1589,  %r1590,  %r1591,  %r1592},{%r1604,  %r1605},{%f1697, %f1698, %f1699, %f1700};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1769,  %f1770,  %f1771,  %f1772},{%r1594,  %r1595,  %r1596,  %r1597},{%r1604,  %r1605},{%f1705, %f1706, %f1707, %f1708};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1777,  %f1778,  %f1779,  %f1780},{%r1594,  %r1595,  %r1596,  %r1597},{%r1606,  %r1607},{%f1713, %f1714, %f1715, %f1716};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1785,  %f1786,  %f1787,  %f1788},{%r1589,  %r1590,  %r1591,  %r1592},{%r1606,  %r1607},{%f1721, %f1722, %f1723, %f1724};

	// end inline asm
	bar.sync 	0;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs257, %f1089;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1794, %rs257;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs260, %f1090;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1797, %rs260;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs262, %f1797;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs259, %f1794;}

	// end inline asm
	st.shared.v2.u16 	[%r6272+32768], {%rs259, %rs262};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs263, %f1091;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1800, %rs263;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs266, %f1092;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1803, %rs266;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs268, %f1803;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs265, %f1800;}

	// end inline asm
	st.shared.v2.u16 	[%r6272+33792], {%rs265, %rs268};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs269, %f1097;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1806, %rs269;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs272, %f1098;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1809, %rs272;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs274, %f1809;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs271, %f1806;}

	// end inline asm
	st.shared.v2.u16 	[%r6272+36864], {%rs271, %rs274};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs275, %f1099;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1812, %rs275;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs278, %f1100;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1815, %rs278;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs280, %f1815;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs277, %f1812;}

	// end inline asm
	st.shared.v2.u16 	[%r6272+37888], {%rs277, %rs280};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs281, %f1113;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1818, %rs281;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs284, %f1114;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1821, %rs284;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs286, %f1821;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs283, %f1818;}

	// end inline asm
	st.shared.v2.u16 	[%r6276+32768], {%rs283, %rs286};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs287, %f1115;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1824, %rs287;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs290, %f1116;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1827, %rs290;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs292, %f1827;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs289, %f1824;}

	// end inline asm
	st.shared.v2.u16 	[%r6276+33792], {%rs289, %rs292};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs293, %f1105;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1830, %rs293;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs296, %f1106;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1833, %rs296;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs298, %f1833;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs295, %f1830;}

	// end inline asm
	st.shared.v2.u16 	[%r6276+36864], {%rs295, %rs298};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs299, %f1107;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1836, %rs299;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs302, %f1108;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1839, %rs302;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs304, %f1839;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs301, %f1836;}

	// end inline asm
	st.shared.v2.u16 	[%r6276+37888], {%rs301, %rs304};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs305, %f1121;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1842, %rs305;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs308, %f1122;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1845, %rs308;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs310, %f1845;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs307, %f1842;}

	// end inline asm
	st.shared.v2.u16 	[%r6282+32768], {%rs307, %rs310};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs311, %f1123;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1848, %rs311;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs314, %f1124;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1851, %rs314;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs316, %f1851;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs313, %f1848;}

	// end inline asm
	st.shared.v2.u16 	[%r6282+33792], {%rs313, %rs316};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs317, %f1129;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1854, %rs317;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs320, %f1130;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1857, %rs320;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs322, %f1857;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs319, %f1854;}

	// end inline asm
	st.shared.v2.u16 	[%r6282+36864], {%rs319, %rs322};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs323, %f1131;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1860, %rs323;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs326, %f1132;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1863, %rs326;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs328, %f1863;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs325, %f1860;}

	// end inline asm
	st.shared.v2.u16 	[%r6282+37888], {%rs325, %rs328};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs329, %f1145;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1866, %rs329;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs332, %f1146;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1869, %rs332;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs334, %f1869;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs331, %f1866;}

	// end inline asm
	st.shared.v2.u16 	[%r6285+32768], {%rs331, %rs334};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs335, %f1147;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1872, %rs335;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs338, %f1148;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1875, %rs338;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs340, %f1875;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs337, %f1872;}

	// end inline asm
	st.shared.v2.u16 	[%r6285+33792], {%rs337, %rs340};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs341, %f1137;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1878, %rs341;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs344, %f1138;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1881, %rs344;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs346, %f1881;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs343, %f1878;}

	// end inline asm
	st.shared.v2.u16 	[%r6285+36864], {%rs343, %rs346};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs347, %f1139;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1884, %rs347;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs350, %f1140;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f1887, %rs350;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs352, %f1887;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs349, %f1884;}

	// end inline asm
	st.shared.v2.u16 	[%r6285+37888], {%rs349, %rs352};
	// begin inline asm
	cp.async.wait_group 1;

	// end inline asm
	bar.sync 	0;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1657, %r1658, %r1659, %r1660}, [%r1661];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1662, %r1663, %r1664, %r1665}, [%r1666];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r1667, %r1668, %r1669, %r1670}, [%r4415];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r1672, %r1673, %r1674, %r1675}, [%r4420];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1889,  %f1890,  %f1891,  %f1892},{%r1657,  %r1658,  %r1659,  %r1660},{%r1667,  %r1668},{%f1729, %f1730, %f1731, %f1732};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1897,  %f1898,  %f1899,  %f1900},{%r1662,  %r1663,  %r1664,  %r1665},{%r1667,  %r1668},{%f1737, %f1738, %f1739, %f1740};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1905,  %f1906,  %f1907,  %f1908},{%r1662,  %r1663,  %r1664,  %r1665},{%r1669,  %r1670},{%f1745, %f1746, %f1747, %f1748};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1913,  %f1914,  %f1915,  %f1916},{%r1657,  %r1658,  %r1659,  %r1660},{%r1669,  %r1670},{%f1753, %f1754, %f1755, %f1756};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1921,  %f1922,  %f1923,  %f1924},{%r1657,  %r1658,  %r1659,  %r1660},{%r1672,  %r1673},{%f1761, %f1762, %f1763, %f1764};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1929,  %f1930,  %f1931,  %f1932},{%r1662,  %r1663,  %r1664,  %r1665},{%r1672,  %r1673},{%f1769, %f1770, %f1771, %f1772};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1937,  %f1938,  %f1939,  %f1940},{%r1662,  %r1663,  %r1664,  %r1665},{%r1674,  %r1675},{%f1777, %f1778, %f1779, %f1780};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1945,  %f1946,  %f1947,  %f1948},{%r1657,  %r1658,  %r1659,  %r1660},{%r1674,  %r1675},{%f1785, %f1786, %f1787, %f1788};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1725, %r1726, %r1727, %r1728}, [%r1729];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1730, %r1731, %r1732, %r1733}, [%r1734];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r1735, %r1736, %r1737, %r1738}, [%r4483];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r1740, %r1741, %r1742, %r1743}, [%r4488];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1953,  %f1954,  %f1955,  %f1956},{%r1725,  %r1726,  %r1727,  %r1728},{%r1735,  %r1736},{%f1889, %f1890, %f1891, %f1892};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1961,  %f1962,  %f1963,  %f1964},{%r1730,  %r1731,  %r1732,  %r1733},{%r1735,  %r1736},{%f1897, %f1898, %f1899, %f1900};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1969,  %f1970,  %f1971,  %f1972},{%r1730,  %r1731,  %r1732,  %r1733},{%r1737,  %r1738},{%f1905, %f1906, %f1907, %f1908};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1977,  %f1978,  %f1979,  %f1980},{%r1725,  %r1726,  %r1727,  %r1728},{%r1737,  %r1738},{%f1913, %f1914, %f1915, %f1916};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1985,  %f1986,  %f1987,  %f1988},{%r1725,  %r1726,  %r1727,  %r1728},{%r1740,  %r1741},{%f1921, %f1922, %f1923, %f1924};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f1993,  %f1994,  %f1995,  %f1996},{%r1730,  %r1731,  %r1732,  %r1733},{%r1740,  %r1741},{%f1929, %f1930, %f1931, %f1932};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2001,  %f2002,  %f2003,  %f2004},{%r1730,  %r1731,  %r1732,  %r1733},{%r1742,  %r1743},{%f1937, %f1938, %f1939, %f1940};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2009,  %f2010,  %f2011,  %f2012},{%r1725,  %r1726,  %r1727,  %r1728},{%r1742,  %r1743},{%f1945, %f1946, %f1947, %f1948};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1793, %r1794, %r1795, %r1796}, [%r1797];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1798, %r1799, %r1800, %r1801}, [%r1802];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r1803, %r1804, %r1805, %r1806}, [%r4551];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r1808, %r1809, %r1810, %r1811}, [%r4556];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2017,  %f2018,  %f2019,  %f2020},{%r1793,  %r1794,  %r1795,  %r1796},{%r1803,  %r1804},{%f1953, %f1954, %f1955, %f1956};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2025,  %f2026,  %f2027,  %f2028},{%r1798,  %r1799,  %r1800,  %r1801},{%r1803,  %r1804},{%f1961, %f1962, %f1963, %f1964};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2033,  %f2034,  %f2035,  %f2036},{%r1798,  %r1799,  %r1800,  %r1801},{%r1805,  %r1806},{%f1969, %f1970, %f1971, %f1972};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2041,  %f2042,  %f2043,  %f2044},{%r1793,  %r1794,  %r1795,  %r1796},{%r1805,  %r1806},{%f1977, %f1978, %f1979, %f1980};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2049,  %f2050,  %f2051,  %f2052},{%r1793,  %r1794,  %r1795,  %r1796},{%r1808,  %r1809},{%f1985, %f1986, %f1987, %f1988};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2057,  %f2058,  %f2059,  %f2060},{%r1798,  %r1799,  %r1800,  %r1801},{%r1808,  %r1809},{%f1993, %f1994, %f1995, %f1996};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2065,  %f2066,  %f2067,  %f2068},{%r1798,  %r1799,  %r1800,  %r1801},{%r1810,  %r1811},{%f2001, %f2002, %f2003, %f2004};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2073,  %f2074,  %f2075,  %f2076},{%r1793,  %r1794,  %r1795,  %r1796},{%r1810,  %r1811},{%f2009, %f2010, %f2011, %f2012};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1861, %r1862, %r1863, %r1864}, [%r1865];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r1866, %r1867, %r1868, %r1869}, [%r1870];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r1871, %r1872, %r1873, %r1874}, [%r4619];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r1876, %r1877, %r1878, %r1879}, [%r4624];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2081,  %f2082,  %f2083,  %f2084},{%r1861,  %r1862,  %r1863,  %r1864},{%r1871,  %r1872},{%f2017, %f2018, %f2019, %f2020};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2089,  %f2090,  %f2091,  %f2092},{%r1866,  %r1867,  %r1868,  %r1869},{%r1871,  %r1872},{%f2025, %f2026, %f2027, %f2028};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2097,  %f2098,  %f2099,  %f2100},{%r1866,  %r1867,  %r1868,  %r1869},{%r1873,  %r1874},{%f2033, %f2034, %f2035, %f2036};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2105,  %f2106,  %f2107,  %f2108},{%r1861,  %r1862,  %r1863,  %r1864},{%r1873,  %r1874},{%f2041, %f2042, %f2043, %f2044};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2113,  %f2114,  %f2115,  %f2116},{%r1861,  %r1862,  %r1863,  %r1864},{%r1876,  %r1877},{%f2049, %f2050, %f2051, %f2052};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2121,  %f2122,  %f2123,  %f2124},{%r1866,  %r1867,  %r1868,  %r1869},{%r1876,  %r1877},{%f2057, %f2058, %f2059, %f2060};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2129,  %f2130,  %f2131,  %f2132},{%r1866,  %r1867,  %r1868,  %r1869},{%r1878,  %r1879},{%f2065, %f2066, %f2067, %f2068};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2137,  %f2138,  %f2139,  %f2140},{%r1861,  %r1862,  %r1863,  %r1864},{%r1878,  %r1879},{%f2073, %f2074, %f2075, %f2076};

	// end inline asm
	// begin inline asm
	cp.async.wait_all;

	// end inline asm
	bar.sync 	0;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r1929, %r1930, %r1931, %r1932}, [%r1933];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r1934, %r1935, %r1936, %r1937}, [%r1938];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r1939, %r1940, %r1941, %r1942}, [%r1943];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r1944, %r1945, %r1946, %r1947}, [%r1948];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2145,  %f2146,  %f2147,  %f2148},{%r1929,  %r1930,  %r1931,  %r1932},{%r1939,  %r1940},{%f1089, %f1090, %f1091, %f1092};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2153,  %f2154,  %f2155,  %f2156},{%r1934,  %r1935,  %r1936,  %r1937},{%r1939,  %r1940},{%f1097, %f1098, %f1099, %f1100};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2161,  %f2162,  %f2163,  %f2164},{%r1934,  %r1935,  %r1936,  %r1937},{%r1941,  %r1942},{%f1105, %f1106, %f1107, %f1108};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2169,  %f2170,  %f2171,  %f2172},{%r1929,  %r1930,  %r1931,  %r1932},{%r1941,  %r1942},{%f1113, %f1114, %f1115, %f1116};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2177,  %f2178,  %f2179,  %f2180},{%r1929,  %r1930,  %r1931,  %r1932},{%r1944,  %r1945},{%f1121, %f1122, %f1123, %f1124};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2185,  %f2186,  %f2187,  %f2188},{%r1934,  %r1935,  %r1936,  %r1937},{%r1944,  %r1945},{%f1129, %f1130, %f1131, %f1132};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2193,  %f2194,  %f2195,  %f2196},{%r1934,  %r1935,  %r1936,  %r1937},{%r1946,  %r1947},{%f1137, %f1138, %f1139, %f1140};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2201,  %f2202,  %f2203,  %f2204},{%r1929,  %r1930,  %r1931,  %r1932},{%r1946,  %r1947},{%f1145, %f1146, %f1147, %f1148};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r1997, %r1998, %r1999, %r2000}, [%r2001];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r2002, %r2003, %r2004, %r2005}, [%r2006];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r2007, %r2008, %r2009, %r2010}, [%r2011];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r2012, %r2013, %r2014, %r2015}, [%r2016];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2209,  %f2210,  %f2211,  %f2212},{%r1997,  %r1998,  %r1999,  %r2000},{%r2007,  %r2008},{%f2145, %f2146, %f2147, %f2148};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2217,  %f2218,  %f2219,  %f2220},{%r2002,  %r2003,  %r2004,  %r2005},{%r2007,  %r2008},{%f2153, %f2154, %f2155, %f2156};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2225,  %f2226,  %f2227,  %f2228},{%r2002,  %r2003,  %r2004,  %r2005},{%r2009,  %r2010},{%f2161, %f2162, %f2163, %f2164};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2233,  %f2234,  %f2235,  %f2236},{%r1997,  %r1998,  %r1999,  %r2000},{%r2009,  %r2010},{%f2169, %f2170, %f2171, %f2172};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2241,  %f2242,  %f2243,  %f2244},{%r1997,  %r1998,  %r1999,  %r2000},{%r2012,  %r2013},{%f2177, %f2178, %f2179, %f2180};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2249,  %f2250,  %f2251,  %f2252},{%r2002,  %r2003,  %r2004,  %r2005},{%r2012,  %r2013},{%f2185, %f2186, %f2187, %f2188};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2257,  %f2258,  %f2259,  %f2260},{%r2002,  %r2003,  %r2004,  %r2005},{%r2014,  %r2015},{%f2193, %f2194, %f2195, %f2196};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2265,  %f2266,  %f2267,  %f2268},{%r1997,  %r1998,  %r1999,  %r2000},{%r2014,  %r2015},{%f2201, %f2202, %f2203, %f2204};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r2065, %r2066, %r2067, %r2068}, [%r2069];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r2070, %r2071, %r2072, %r2073}, [%r2074];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r2075, %r2076, %r2077, %r2078}, [%r2079];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r2080, %r2081, %r2082, %r2083}, [%r2084];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2273,  %f2274,  %f2275,  %f2276},{%r2065,  %r2066,  %r2067,  %r2068},{%r2075,  %r2076},{%f2209, %f2210, %f2211, %f2212};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2281,  %f2282,  %f2283,  %f2284},{%r2070,  %r2071,  %r2072,  %r2073},{%r2075,  %r2076},{%f2217, %f2218, %f2219, %f2220};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2289,  %f2290,  %f2291,  %f2292},{%r2070,  %r2071,  %r2072,  %r2073},{%r2077,  %r2078},{%f2225, %f2226, %f2227, %f2228};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2297,  %f2298,  %f2299,  %f2300},{%r2065,  %r2066,  %r2067,  %r2068},{%r2077,  %r2078},{%f2233, %f2234, %f2235, %f2236};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2305,  %f2306,  %f2307,  %f2308},{%r2065,  %r2066,  %r2067,  %r2068},{%r2080,  %r2081},{%f2241, %f2242, %f2243, %f2244};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2313,  %f2314,  %f2315,  %f2316},{%r2070,  %r2071,  %r2072,  %r2073},{%r2080,  %r2081},{%f2249, %f2250, %f2251, %f2252};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2321,  %f2322,  %f2323,  %f2324},{%r2070,  %r2071,  %r2072,  %r2073},{%r2082,  %r2083},{%f2257, %f2258, %f2259, %f2260};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2329,  %f2330,  %f2331,  %f2332},{%r2065,  %r2066,  %r2067,  %r2068},{%r2082,  %r2083},{%f2265, %f2266, %f2267, %f2268};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r2133, %r2134, %r2135, %r2136}, [%r2137];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r2138, %r2139, %r2140, %r2141}, [%r2142];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r2143, %r2144, %r2145, %r2146}, [%r2147];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r2148, %r2149, %r2150, %r2151}, [%r2152];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2337,  %f2338,  %f2339,  %f2340},{%r2133,  %r2134,  %r2135,  %r2136},{%r2143,  %r2144},{%f2273, %f2274, %f2275, %f2276};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2345,  %f2346,  %f2347,  %f2348},{%r2138,  %r2139,  %r2140,  %r2141},{%r2143,  %r2144},{%f2281, %f2282, %f2283, %f2284};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2353,  %f2354,  %f2355,  %f2356},{%r2138,  %r2139,  %r2140,  %r2141},{%r2145,  %r2146},{%f2289, %f2290, %f2291, %f2292};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2361,  %f2362,  %f2363,  %f2364},{%r2133,  %r2134,  %r2135,  %r2136},{%r2145,  %r2146},{%f2297, %f2298, %f2299, %f2300};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2369,  %f2370,  %f2371,  %f2372},{%r2133,  %r2134,  %r2135,  %r2136},{%r2148,  %r2149},{%f2305, %f2306, %f2307, %f2308};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2377,  %f2378,  %f2379,  %f2380},{%r2138,  %r2139,  %r2140,  %r2141},{%r2148,  %r2149},{%f2313, %f2314, %f2315, %f2316};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2385,  %f2386,  %f2387,  %f2388},{%r2138,  %r2139,  %r2140,  %r2141},{%r2150,  %r2151},{%f2321, %f2322, %f2323, %f2324};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2393,  %f2394,  %f2395,  %f2396},{%r2133,  %r2134,  %r2135,  %r2136},{%r2150,  %r2151},{%f2329, %f2330, %f2331, %f2332};

	// end inline asm
	mul.f32 	%f2401, %f2081, 0f3E000000;
	mul.f32 	%f2404, %f2082, 0f3E000000;
	mul.f32 	%f2407, %f2083, 0f3E000000;
	mul.f32 	%f2410, %f2084, 0f3E000000;
	mul.f32 	%f2413, %f2089, 0f3E000000;
	mul.f32 	%f2416, %f2090, 0f3E000000;
	mul.f32 	%f2419, %f2091, 0f3E000000;
	mul.f32 	%f2422, %f2092, 0f3E000000;
	mul.f32 	%f2425, %f2105, 0f3E000000;
	mul.f32 	%f2428, %f2106, 0f3E000000;
	mul.f32 	%f2431, %f2107, 0f3E000000;
	mul.f32 	%f2434, %f2108, 0f3E000000;
	mul.f32 	%f2437, %f2097, 0f3E000000;
	mul.f32 	%f2440, %f2098, 0f3E000000;
	mul.f32 	%f2443, %f2099, 0f3E000000;
	mul.f32 	%f2446, %f2100, 0f3E000000;
	mul.f32 	%f2449, %f2113, 0f3E000000;
	mul.f32 	%f2452, %f2114, 0f3E000000;
	mul.f32 	%f2455, %f2115, 0f3E000000;
	mul.f32 	%f2458, %f2116, 0f3E000000;
	mul.f32 	%f2461, %f2121, 0f3E000000;
	mul.f32 	%f2464, %f2122, 0f3E000000;
	mul.f32 	%f2467, %f2123, 0f3E000000;
	mul.f32 	%f2470, %f2124, 0f3E000000;
	mul.f32 	%f2473, %f2137, 0f3E000000;
	mul.f32 	%f2476, %f2138, 0f3E000000;
	mul.f32 	%f2479, %f2139, 0f3E000000;
	mul.f32 	%f2482, %f2140, 0f3E000000;
	mul.f32 	%f2485, %f2129, 0f3E000000;
	mul.f32 	%f2488, %f2130, 0f3E000000;
	mul.f32 	%f2491, %f2131, 0f3E000000;
	mul.f32 	%f2494, %f2132, 0f3E000000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs353, %f2401;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2402, %rs353;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs356, %f2404;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2405, %rs356;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs358, %f2405;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs355, %f2402;}

	// end inline asm
	st.global.v2.u16 	[%rd69+32768], {%rs355, %rs358};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs359, %f2407;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2408, %rs359;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs362, %f2410;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2411, %rs362;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs364, %f2411;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs361, %f2408;}

	// end inline asm
	st.global.v2.u16 	[%rd69+36864], {%rs361, %rs364};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs365, %f2413;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2414, %rs365;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs368, %f2416;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2417, %rs368;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs370, %f2417;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs367, %f2414;}

	// end inline asm
	st.global.v2.u16 	[%rd69+49152], {%rs367, %rs370};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs371, %f2419;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2420, %rs371;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs374, %f2422;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2423, %rs374;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs376, %f2423;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs373, %f2420;}

	// end inline asm
	st.global.v2.u16 	[%rd69+53248], {%rs373, %rs376};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs377, %f2425;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2426, %rs377;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs380, %f2428;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2429, %rs380;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs382, %f2429;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs379, %f2426;}

	// end inline asm
	st.global.v2.u16 	[%rd69+32800], {%rs379, %rs382};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs383, %f2431;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2432, %rs383;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs386, %f2434;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2435, %rs386;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs388, %f2435;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs385, %f2432;}

	// end inline asm
	st.global.v2.u16 	[%rd69+36896], {%rs385, %rs388};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs389, %f2437;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2438, %rs389;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs392, %f2440;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2441, %rs392;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs394, %f2441;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs391, %f2438;}

	// end inline asm
	st.global.v2.u16 	[%rd69+49184], {%rs391, %rs394};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs395, %f2443;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2444, %rs395;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs398, %f2446;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2447, %rs398;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs400, %f2447;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs397, %f2444;}

	// end inline asm
	st.global.v2.u16 	[%rd69+53280], {%rs397, %rs400};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs401, %f2449;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2450, %rs401;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs404, %f2452;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2453, %rs404;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs406, %f2453;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs403, %f2450;}

	// end inline asm
	st.global.v2.u16 	[%rd69+32832], {%rs403, %rs406};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs407, %f2455;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2456, %rs407;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs410, %f2458;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2459, %rs410;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs412, %f2459;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs409, %f2456;}

	// end inline asm
	st.global.v2.u16 	[%rd69+36928], {%rs409, %rs412};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs413, %f2461;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2462, %rs413;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs416, %f2464;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2465, %rs416;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs418, %f2465;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs415, %f2462;}

	// end inline asm
	st.global.v2.u16 	[%rd69+49216], {%rs415, %rs418};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs419, %f2467;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2468, %rs419;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs422, %f2470;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2471, %rs422;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs424, %f2471;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs421, %f2468;}

	// end inline asm
	st.global.v2.u16 	[%rd69+53312], {%rs421, %rs424};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs425, %f2473;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2474, %rs425;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs428, %f2476;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2477, %rs428;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs430, %f2477;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs427, %f2474;}

	// end inline asm
	st.global.v2.u16 	[%rd69+32864], {%rs427, %rs430};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs431, %f2479;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2480, %rs431;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs434, %f2482;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2483, %rs434;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs436, %f2483;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs433, %f2480;}

	// end inline asm
	st.global.v2.u16 	[%rd69+36960], {%rs433, %rs436};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs437, %f2485;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2486, %rs437;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs440, %f2488;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2489, %rs440;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs442, %f2489;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs439, %f2486;}

	// end inline asm
	st.global.v2.u16 	[%rd69+49248], {%rs439, %rs442};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs443, %f2491;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2492, %rs443;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs446, %f2494;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2495, %rs446;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs448, %f2495;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs445, %f2492;}

	// end inline asm
	st.global.v2.u16 	[%rd69+53344], {%rs445, %rs448};
	bar.sync 	0;
	// begin inline asm
	cp.async.cg.shared.global [%r3029], [%rd25], 16;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [%r3030], [%rd26], 16;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [%r3031], [%rd27], 16;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [%r3032], [%rd28], 16;
	// end inline asm
	// begin inline asm
	cp.async.commit_group;

	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [%r3849], [%rd29], 16;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [%r3850], [%rd30], 16;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [%r3851], [%rd31], 16;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [%r3852], [%rd32], 16;
	// end inline asm
	// begin inline asm
	cp.async.commit_group;

	// end inline asm
	add.s64 	%rd70, %rd58, %rd60;
	ld.global.nc.v4.u32 	{%r6308, %r6309, %r6310, %r6311}, [%rd70+32768];
	mov.b32 	{%rs449, %rs450}, %r6308;
	// begin inline asm
	{  cvt.f32.f16 %f2497, %rs449;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2498, %rs450;}

	// end inline asm
	mov.b32 	{%rs451, %rs452}, %r6309;
	// begin inline asm
	{  cvt.f32.f16 %f2499, %rs451;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2500, %rs452;}

	// end inline asm
	mov.b32 	{%rs453, %rs454}, %r6310;
	// begin inline asm
	{  cvt.f32.f16 %f2501, %rs453;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2502, %rs454;}

	// end inline asm
	mov.b32 	{%rs455, %rs456}, %r6311;
	// begin inline asm
	{  cvt.f32.f16 %f2503, %rs455;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2504, %rs456;}

	// end inline asm
	mul.f32 	%f2505, %f2497, 0f3E000000;
	mul.f32 	%f2508, %f2498, 0f3E000000;
	mul.f32 	%f2511, %f2499, 0f3E000000;
	mul.f32 	%f2514, %f2500, 0f3E000000;
	mul.f32 	%f2517, %f2501, 0f3E000000;
	mul.f32 	%f2520, %f2502, 0f3E000000;
	mul.f32 	%f2523, %f2503, 0f3E000000;
	mul.f32 	%f2526, %f2504, 0f3E000000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs457, %f2505;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2506, %rs457;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs460, %f2508;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2509, %rs460;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs463, %f2511;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2512, %rs463;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs466, %f2514;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2515, %rs466;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs469, %f2517;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2518, %rs469;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs472, %f2520;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2521, %rs472;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs475, %f2523;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2524, %rs475;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs478, %f2526;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2527, %rs478;}

	// end inline asm
	shl.b32 	%r6316, %r6034, 6;
	shl.b32 	%r6317, %r6040, 5;
	and.b32  	%r6318, %r6317, 32;
	shl.b32 	%r6319, %r6046, 4;
	and.b32  	%r6320, %r6319, 16;
	shl.b32 	%r6321, %r6051, 3;
	and.b32  	%r6322, %r6321, 8;
	or.b32  	%r6323, %r6322, %r6320;
	or.b32  	%r6324, %r6323, %r6316;
	or.b32  	%r6325, %r6324, %r6318;
	shl.b32 	%r6326, %r6325, 1;
	add.s32 	%r6327, %r6069, %r6326;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs462, %f2509;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs459, %f2506;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs468, %f2515;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs465, %f2512;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs474, %f2521;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs471, %f2518;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs480, %f2527;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs477, %f2524;}

	// end inline asm
	mov.b32 	%r6328, {%rs477, %rs480};
	mov.b32 	%r6329, {%rs471, %rs474};
	mov.b32 	%r6330, {%rs465, %rs468};
	mov.b32 	%r6331, {%rs459, %rs462};
	st.shared.v4.u32 	[%r6327+32768], {%r6331, %r6330, %r6329, %r6328};
	ld.global.nc.v4.u32 	{%r6332, %r6333, %r6334, %r6335}, [%rd70+40960];
	mov.b32 	{%rs481, %rs482}, %r6332;
	// begin inline asm
	{  cvt.f32.f16 %f2529, %rs481;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2530, %rs482;}

	// end inline asm
	mov.b32 	{%rs483, %rs484}, %r6333;
	// begin inline asm
	{  cvt.f32.f16 %f2531, %rs483;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2532, %rs484;}

	// end inline asm
	mov.b32 	{%rs485, %rs486}, %r6334;
	// begin inline asm
	{  cvt.f32.f16 %f2533, %rs485;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2534, %rs486;}

	// end inline asm
	mov.b32 	{%rs487, %rs488}, %r6335;
	// begin inline asm
	{  cvt.f32.f16 %f2535, %rs487;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2536, %rs488;}

	// end inline asm
	mul.f32 	%f2537, %f2529, 0f3E000000;
	mul.f32 	%f2540, %f2530, 0f3E000000;
	mul.f32 	%f2543, %f2531, 0f3E000000;
	mul.f32 	%f2546, %f2532, 0f3E000000;
	mul.f32 	%f2549, %f2533, 0f3E000000;
	mul.f32 	%f2552, %f2534, 0f3E000000;
	mul.f32 	%f2555, %f2535, 0f3E000000;
	mul.f32 	%f2558, %f2536, 0f3E000000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs489, %f2537;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2538, %rs489;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs492, %f2540;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2541, %rs492;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs495, %f2543;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2544, %rs495;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs498, %f2546;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2547, %rs498;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs501, %f2549;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2550, %rs501;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs504, %f2552;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2553, %rs504;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs507, %f2555;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2556, %rs507;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs510, %f2558;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2559, %rs510;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs494, %f2541;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs491, %f2538;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs500, %f2547;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs497, %f2544;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs506, %f2553;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs503, %f2550;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs512, %f2559;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs509, %f2556;}

	// end inline asm
	mov.b32 	%r6340, {%rs509, %rs512};
	mov.b32 	%r6341, {%rs503, %rs506};
	mov.b32 	%r6342, {%rs497, %rs500};
	mov.b32 	%r6343, {%rs491, %rs494};
	st.shared.v4.u32 	[%r6327+34816], {%r6343, %r6342, %r6341, %r6340};
	ld.global.nc.v4.u32 	{%r6344, %r6345, %r6346, %r6347}, [%rd70+49152];
	mov.b32 	{%rs513, %rs514}, %r6344;
	// begin inline asm
	{  cvt.f32.f16 %f2561, %rs513;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2562, %rs514;}

	// end inline asm
	mov.b32 	{%rs515, %rs516}, %r6345;
	// begin inline asm
	{  cvt.f32.f16 %f2563, %rs515;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2564, %rs516;}

	// end inline asm
	mov.b32 	{%rs517, %rs518}, %r6346;
	// begin inline asm
	{  cvt.f32.f16 %f2565, %rs517;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2566, %rs518;}

	// end inline asm
	mov.b32 	{%rs519, %rs520}, %r6347;
	// begin inline asm
	{  cvt.f32.f16 %f2567, %rs519;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2568, %rs520;}

	// end inline asm
	mul.f32 	%f2569, %f2561, 0f3E000000;
	mul.f32 	%f2572, %f2562, 0f3E000000;
	mul.f32 	%f2575, %f2563, 0f3E000000;
	mul.f32 	%f2578, %f2564, 0f3E000000;
	mul.f32 	%f2581, %f2565, 0f3E000000;
	mul.f32 	%f2584, %f2566, 0f3E000000;
	mul.f32 	%f2587, %f2567, 0f3E000000;
	mul.f32 	%f2590, %f2568, 0f3E000000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs521, %f2569;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2570, %rs521;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs524, %f2572;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2573, %rs524;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs527, %f2575;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2576, %rs527;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs530, %f2578;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2579, %rs530;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs533, %f2581;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2582, %rs533;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs536, %f2584;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2585, %rs536;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs539, %f2587;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2588, %rs539;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs542, %f2590;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2591, %rs542;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs526, %f2573;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs523, %f2570;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs532, %f2579;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs529, %f2576;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs538, %f2585;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs535, %f2582;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs544, %f2591;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs541, %f2588;}

	// end inline asm
	mov.b32 	%r6352, {%rs541, %rs544};
	mov.b32 	%r6353, {%rs535, %rs538};
	mov.b32 	%r6354, {%rs529, %rs532};
	mov.b32 	%r6355, {%rs523, %rs526};
	st.shared.v4.u32 	[%r6327+36864], {%r6355, %r6354, %r6353, %r6352};
	ld.global.nc.v4.u32 	{%r6356, %r6357, %r6358, %r6359}, [%rd70+57344];
	mov.b32 	{%rs545, %rs546}, %r6356;
	// begin inline asm
	{  cvt.f32.f16 %f2593, %rs545;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2594, %rs546;}

	// end inline asm
	mov.b32 	{%rs547, %rs548}, %r6357;
	// begin inline asm
	{  cvt.f32.f16 %f2595, %rs547;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2596, %rs548;}

	// end inline asm
	mov.b32 	{%rs549, %rs550}, %r6358;
	// begin inline asm
	{  cvt.f32.f16 %f2597, %rs549;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2598, %rs550;}

	// end inline asm
	mov.b32 	{%rs551, %rs552}, %r6359;
	// begin inline asm
	{  cvt.f32.f16 %f2599, %rs551;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2600, %rs552;}

	// end inline asm
	mul.f32 	%f2601, %f2593, 0f3E000000;
	mul.f32 	%f2604, %f2594, 0f3E000000;
	mul.f32 	%f2607, %f2595, 0f3E000000;
	mul.f32 	%f2610, %f2596, 0f3E000000;
	mul.f32 	%f2613, %f2597, 0f3E000000;
	mul.f32 	%f2616, %f2598, 0f3E000000;
	mul.f32 	%f2619, %f2599, 0f3E000000;
	mul.f32 	%f2622, %f2600, 0f3E000000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs553, %f2601;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2602, %rs553;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs556, %f2604;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2605, %rs556;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs559, %f2607;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2608, %rs559;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs562, %f2610;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2611, %rs562;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs565, %f2613;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2614, %rs565;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs568, %f2616;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2617, %rs568;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs571, %f2619;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2620, %rs571;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs574, %f2622;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f2623, %rs574;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs558, %f2605;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs555, %f2602;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs564, %f2611;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs561, %f2608;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs570, %f2617;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs567, %f2614;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs576, %f2623;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs573, %f2620;}

	// end inline asm
	mov.b32 	%r6364, {%rs573, %rs576};
	mov.b32 	%r6365, {%rs567, %rs570};
	mov.b32 	%r6366, {%rs561, %rs564};
	mov.b32 	%r6367, {%rs555, %rs558};
	st.shared.v4.u32 	[%r6327+38912], {%r6367, %r6366, %r6365, %r6364};
	// begin inline asm
	cp.async.cg.shared.global [%r4125], [%rd33], 16;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [%r4126], [%rd34], 16;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [%r4127], [%rd35], 16;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [%r4128], [%rd36], 16;
	// end inline asm
	// begin inline asm
	cp.async.commit_group;

	// end inline asm
	// begin inline asm
	cp.async.wait_all;

	// end inline asm
	bar.sync 	0;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2213, %r2214, %r2215, %r2216}, [%r4677];

	// end inline asm
	add.s32 	%r4682, %r4677, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2218, %r2219, %r2220, %r2221}, [%r4682];

	// end inline asm
	add.s32 	%r4143, %r6132, %r6135;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2223, %r2224, %r2225, %r2226}, [%r4143];

	// end inline asm
	add.s32 	%r4148, %r4143, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2228, %r2229, %r2230, %r2231}, [%r4148];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2625,  %f2626,  %f2627,  %f2628},{%r2213,  %r2214,  %r2215,  %r2216},{%r2223,  %r2224},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2633,  %f2634,  %f2635,  %f2636},{%r2218,  %r2219,  %r2220,  %r2221},{%r2223,  %r2224},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2641,  %f2642,  %f2643,  %f2644},{%r2218,  %r2219,  %r2220,  %r2221},{%r2225,  %r2226},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2649,  %f2650,  %f2651,  %f2652},{%r2213,  %r2214,  %r2215,  %r2216},{%r2225,  %r2226},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2657,  %f2658,  %f2659,  %f2660},{%r2213,  %r2214,  %r2215,  %r2216},{%r2228,  %r2229},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2665,  %f2666,  %f2667,  %f2668},{%r2218,  %r2219,  %r2220,  %r2221},{%r2228,  %r2229},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2673,  %f2674,  %f2675,  %f2676},{%r2218,  %r2219,  %r2220,  %r2221},{%r2230,  %r2231},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2681,  %f2682,  %f2683,  %f2684},{%r2213,  %r2214,  %r2215,  %r2216},{%r2230,  %r2231},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	add.s32 	%r4745, %r4677, %r6136;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2281, %r2282, %r2283, %r2284}, [%r4745];

	// end inline asm
	add.s32 	%r4750, %r4745, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2286, %r2287, %r2288, %r2289}, [%r4750];

	// end inline asm
	add.s32 	%r4211, %r4143, %r6137;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2291, %r2292, %r2293, %r2294}, [%r4211];

	// end inline asm
	add.s32 	%r4216, %r4211, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2296, %r2297, %r2298, %r2299}, [%r4216];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2689,  %f2690,  %f2691,  %f2692},{%r2281,  %r2282,  %r2283,  %r2284},{%r2291,  %r2292},{%f2625, %f2626, %f2627, %f2628};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2697,  %f2698,  %f2699,  %f2700},{%r2286,  %r2287,  %r2288,  %r2289},{%r2291,  %r2292},{%f2633, %f2634, %f2635, %f2636};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2705,  %f2706,  %f2707,  %f2708},{%r2286,  %r2287,  %r2288,  %r2289},{%r2293,  %r2294},{%f2641, %f2642, %f2643, %f2644};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2713,  %f2714,  %f2715,  %f2716},{%r2281,  %r2282,  %r2283,  %r2284},{%r2293,  %r2294},{%f2649, %f2650, %f2651, %f2652};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2721,  %f2722,  %f2723,  %f2724},{%r2281,  %r2282,  %r2283,  %r2284},{%r2296,  %r2297},{%f2657, %f2658, %f2659, %f2660};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2729,  %f2730,  %f2731,  %f2732},{%r2286,  %r2287,  %r2288,  %r2289},{%r2296,  %r2297},{%f2665, %f2666, %f2667, %f2668};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2737,  %f2738,  %f2739,  %f2740},{%r2286,  %r2287,  %r2288,  %r2289},{%r2298,  %r2299},{%f2673, %f2674, %f2675, %f2676};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2745,  %f2746,  %f2747,  %f2748},{%r2281,  %r2282,  %r2283,  %r2284},{%r2298,  %r2299},{%f2681, %f2682, %f2683, %f2684};

	// end inline asm
	add.s32 	%r4813, %r4677, %r6138;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2349, %r2350, %r2351, %r2352}, [%r4813];

	// end inline asm
	add.s32 	%r4818, %r4813, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2354, %r2355, %r2356, %r2357}, [%r4818];

	// end inline asm
	add.s32 	%r4279, %r4143, %r6139;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2359, %r2360, %r2361, %r2362}, [%r4279];

	// end inline asm
	add.s32 	%r4284, %r4279, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2364, %r2365, %r2366, %r2367}, [%r4284];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2753,  %f2754,  %f2755,  %f2756},{%r2349,  %r2350,  %r2351,  %r2352},{%r2359,  %r2360},{%f2689, %f2690, %f2691, %f2692};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2761,  %f2762,  %f2763,  %f2764},{%r2354,  %r2355,  %r2356,  %r2357},{%r2359,  %r2360},{%f2697, %f2698, %f2699, %f2700};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2769,  %f2770,  %f2771,  %f2772},{%r2354,  %r2355,  %r2356,  %r2357},{%r2361,  %r2362},{%f2705, %f2706, %f2707, %f2708};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2777,  %f2778,  %f2779,  %f2780},{%r2349,  %r2350,  %r2351,  %r2352},{%r2361,  %r2362},{%f2713, %f2714, %f2715, %f2716};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2785,  %f2786,  %f2787,  %f2788},{%r2349,  %r2350,  %r2351,  %r2352},{%r2364,  %r2365},{%f2721, %f2722, %f2723, %f2724};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2793,  %f2794,  %f2795,  %f2796},{%r2354,  %r2355,  %r2356,  %r2357},{%r2364,  %r2365},{%f2729, %f2730, %f2731, %f2732};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2801,  %f2802,  %f2803,  %f2804},{%r2354,  %r2355,  %r2356,  %r2357},{%r2366,  %r2367},{%f2737, %f2738, %f2739, %f2740};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2809,  %f2810,  %f2811,  %f2812},{%r2349,  %r2350,  %r2351,  %r2352},{%r2366,  %r2367},{%f2745, %f2746, %f2747, %f2748};

	// end inline asm
	add.s32 	%r4881, %r4813, %r6136;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2417, %r2418, %r2419, %r2420}, [%r4881];

	// end inline asm
	add.s32 	%r4886, %r4881, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2422, %r2423, %r2424, %r2425}, [%r4886];

	// end inline asm
	add.s32 	%r4347, %r4279, %r6137;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2427, %r2428, %r2429, %r2430}, [%r4347];

	// end inline asm
	add.s32 	%r4352, %r4347, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2432, %r2433, %r2434, %r2435}, [%r4352];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2817,  %f2818,  %f2819,  %f2820},{%r2417,  %r2418,  %r2419,  %r2420},{%r2427,  %r2428},{%f2753, %f2754, %f2755, %f2756};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2825,  %f2826,  %f2827,  %f2828},{%r2422,  %r2423,  %r2424,  %r2425},{%r2427,  %r2428},{%f2761, %f2762, %f2763, %f2764};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2833,  %f2834,  %f2835,  %f2836},{%r2422,  %r2423,  %r2424,  %r2425},{%r2429,  %r2430},{%f2769, %f2770, %f2771, %f2772};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2841,  %f2842,  %f2843,  %f2844},{%r2417,  %r2418,  %r2419,  %r2420},{%r2429,  %r2430},{%f2777, %f2778, %f2779, %f2780};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2849,  %f2850,  %f2851,  %f2852},{%r2417,  %r2418,  %r2419,  %r2420},{%r2432,  %r2433},{%f2785, %f2786, %f2787, %f2788};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2857,  %f2858,  %f2859,  %f2860},{%r2422,  %r2423,  %r2424,  %r2425},{%r2432,  %r2433},{%f2793, %f2794, %f2795, %f2796};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2865,  %f2866,  %f2867,  %f2868},{%r2422,  %r2423,  %r2424,  %r2425},{%r2434,  %r2435},{%f2801, %f2802, %f2803, %f2804};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2873,  %f2874,  %f2875,  %f2876},{%r2417,  %r2418,  %r2419,  %r2420},{%r2434,  %r2435},{%f2809, %f2810, %f2811, %f2812};

	// end inline asm
	bar.sync 	0;
	selp.f32 	%f2881, 0f00000000, %f2817, %p6;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs577, %f2881;}

	// end inline asm
	st.shared.u16 	[%r6165+8192], %rs577;
	setp.gt.s32 	%p37, %r6148, %r6166;
	selp.f32 	%f2882, 0f00000000, %f2818, %p37;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs578, %f2882;}

	// end inline asm
	st.shared.u16 	[%r6177+8194], %rs578;
	selp.f32 	%f2883, 0f00000000, %f2819, %p8;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs579, %f2883;}

	// end inline asm
	st.shared.u16 	[%r6165+9216], %rs579;
	setp.gt.s32 	%p38, %r6178, %r6166;
	selp.f32 	%f2884, 0f00000000, %f2820, %p38;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs580, %f2884;}

	// end inline asm
	st.shared.u16 	[%r6177+9218], %rs580;
	selp.f32 	%f2885, 0f00000000, %f2825, %p10;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs581, %f2885;}

	// end inline asm
	st.shared.u16 	[%r6165+12288], %rs581;
	setp.gt.s32 	%p39, %r6179, %r6166;
	selp.f32 	%f2886, 0f00000000, %f2826, %p39;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs582, %f2886;}

	// end inline asm
	st.shared.u16 	[%r6177+12290], %rs582;
	selp.f32 	%f2887, 0f00000000, %f2827, %p12;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs583, %f2887;}

	// end inline asm
	st.shared.u16 	[%r6165+13312], %rs583;
	setp.gt.s32 	%p40, %r6180, %r6166;
	selp.f32 	%f2888, 0f00000000, %f2828, %p40;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs584, %f2888;}

	// end inline asm
	st.shared.u16 	[%r6177+13314], %rs584;
	setp.gt.s32 	%p41, %r6148, %r6181;
	selp.f32 	%f2889, 0f00000000, %f2841, %p41;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs585, %f2889;}

	// end inline asm
	st.shared.u16 	[%r6193+8192], %rs585;
	setp.gt.s32 	%p42, %r6148, %r6194;
	selp.f32 	%f2890, 0f00000000, %f2842, %p42;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs586, %f2890;}

	// end inline asm
	st.shared.u16 	[%r6205+8194], %rs586;
	setp.gt.s32 	%p43, %r6178, %r6181;
	selp.f32 	%f2891, 0f00000000, %f2843, %p43;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs587, %f2891;}

	// end inline asm
	st.shared.u16 	[%r6193+9216], %rs587;
	setp.gt.s32 	%p44, %r6178, %r6194;
	selp.f32 	%f2892, 0f00000000, %f2844, %p44;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs588, %f2892;}

	// end inline asm
	st.shared.u16 	[%r6205+9218], %rs588;
	setp.gt.s32 	%p45, %r6179, %r6181;
	selp.f32 	%f2893, 0f00000000, %f2833, %p45;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs589, %f2893;}

	// end inline asm
	st.shared.u16 	[%r6193+12288], %rs589;
	setp.gt.s32 	%p46, %r6179, %r6194;
	selp.f32 	%f2894, 0f00000000, %f2834, %p46;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs590, %f2894;}

	// end inline asm
	st.shared.u16 	[%r6205+12290], %rs590;
	setp.gt.s32 	%p47, %r6180, %r6181;
	selp.f32 	%f2895, 0f00000000, %f2835, %p47;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs591, %f2895;}

	// end inline asm
	st.shared.u16 	[%r6193+13312], %rs591;
	setp.gt.s32 	%p48, %r6180, %r6194;
	selp.f32 	%f2896, 0f00000000, %f2836, %p48;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs592, %f2896;}

	// end inline asm
	st.shared.u16 	[%r6205+13314], %rs592;
	setp.gt.s32 	%p49, %r6148, %r6206;
	selp.f32 	%f2897, 0f00000000, %f2849, %p49;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs593, %f2897;}

	// end inline asm
	st.shared.u16 	[%r6217+8192], %rs593;
	setp.gt.s32 	%p50, %r6148, %r6218;
	selp.f32 	%f2898, 0f00000000, %f2850, %p50;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs594, %f2898;}

	// end inline asm
	st.shared.u16 	[%r6229+8194], %rs594;
	setp.gt.s32 	%p51, %r6178, %r6206;
	selp.f32 	%f2899, 0f00000000, %f2851, %p51;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs595, %f2899;}

	// end inline asm
	st.shared.u16 	[%r6217+9216], %rs595;
	setp.gt.s32 	%p52, %r6178, %r6218;
	selp.f32 	%f2900, 0f00000000, %f2852, %p52;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs596, %f2900;}

	// end inline asm
	st.shared.u16 	[%r6229+9218], %rs596;
	setp.gt.s32 	%p53, %r6179, %r6206;
	selp.f32 	%f2901, 0f00000000, %f2857, %p53;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs597, %f2901;}

	// end inline asm
	st.shared.u16 	[%r6217+12288], %rs597;
	setp.gt.s32 	%p54, %r6179, %r6218;
	selp.f32 	%f2902, 0f00000000, %f2858, %p54;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs598, %f2902;}

	// end inline asm
	st.shared.u16 	[%r6229+12290], %rs598;
	setp.gt.s32 	%p55, %r6180, %r6206;
	selp.f32 	%f2903, 0f00000000, %f2859, %p55;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs599, %f2903;}

	// end inline asm
	st.shared.u16 	[%r6217+13312], %rs599;
	setp.gt.s32 	%p56, %r6180, %r6218;
	selp.f32 	%f2904, 0f00000000, %f2860, %p56;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs600, %f2904;}

	// end inline asm
	st.shared.u16 	[%r6229+13314], %rs600;
	setp.gt.s32 	%p57, %r6148, %r6230;
	selp.f32 	%f2905, 0f00000000, %f2873, %p57;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs601, %f2905;}

	// end inline asm
	st.shared.u16 	[%r6241+8192], %rs601;
	setp.gt.s32 	%p58, %r6148, %r6242;
	selp.f32 	%f2906, 0f00000000, %f2874, %p58;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs602, %f2906;}

	// end inline asm
	st.shared.u16 	[%r6253+8194], %rs602;
	setp.gt.s32 	%p59, %r6178, %r6230;
	selp.f32 	%f2907, 0f00000000, %f2875, %p59;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs603, %f2907;}

	// end inline asm
	st.shared.u16 	[%r6241+9216], %rs603;
	setp.gt.s32 	%p60, %r6178, %r6242;
	selp.f32 	%f2908, 0f00000000, %f2876, %p60;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs604, %f2908;}

	// end inline asm
	st.shared.u16 	[%r6253+9218], %rs604;
	setp.gt.s32 	%p61, %r6179, %r6230;
	selp.f32 	%f2909, 0f00000000, %f2865, %p61;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs605, %f2909;}

	// end inline asm
	st.shared.u16 	[%r6241+12288], %rs605;
	setp.gt.s32 	%p62, %r6179, %r6242;
	selp.f32 	%f2910, 0f00000000, %f2866, %p62;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs606, %f2910;}

	// end inline asm
	st.shared.u16 	[%r6253+12290], %rs606;
	setp.gt.s32 	%p63, %r6180, %r6230;
	selp.f32 	%f2911, 0f00000000, %f2867, %p63;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs607, %f2911;}

	// end inline asm
	st.shared.u16 	[%r6241+13312], %rs607;
	setp.gt.s32 	%p64, %r6180, %r6242;
	selp.f32 	%f2912, 0f00000000, %f2868, %p64;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs608, %f2912;}

	// end inline asm
	st.shared.u16 	[%r6253+13314], %rs608;
	// begin inline asm
	cp.async.wait_all;

	// end inline asm
	bar.sync 	0;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2485, %r2486, %r2487, %r2488}, [%r289];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2490, %r2491, %r2492, %r2493}, [%r294];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r2495, %r2496, %r2497, %r2498}, [%r4415];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r2500, %r2501, %r2502, %r2503}, [%r4420];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2913,  %f2914,  %f2915,  %f2916},{%r2485,  %r2486,  %r2487,  %r2488},{%r2495,  %r2496},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2921,  %f2922,  %f2923,  %f2924},{%r2490,  %r2491,  %r2492,  %r2493},{%r2495,  %r2496},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2929,  %f2930,  %f2931,  %f2932},{%r2490,  %r2491,  %r2492,  %r2493},{%r2497,  %r2498},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2937,  %f2938,  %f2939,  %f2940},{%r2485,  %r2486,  %r2487,  %r2488},{%r2497,  %r2498},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2945,  %f2946,  %f2947,  %f2948},{%r2485,  %r2486,  %r2487,  %r2488},{%r2500,  %r2501},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2953,  %f2954,  %f2955,  %f2956},{%r2490,  %r2491,  %r2492,  %r2493},{%r2500,  %r2501},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2961,  %f2962,  %f2963,  %f2964},{%r2490,  %r2491,  %r2492,  %r2493},{%r2502,  %r2503},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2969,  %f2970,  %f2971,  %f2972},{%r2485,  %r2486,  %r2487,  %r2488},{%r2502,  %r2503},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2553, %r2554, %r2555, %r2556}, [%r5289];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2558, %r2559, %r2560, %r2561}, [%r5294];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r2563, %r2564, %r2565, %r2566}, [%r4483];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r2568, %r2569, %r2570, %r2571}, [%r4488];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2977,  %f2978,  %f2979,  %f2980},{%r2553,  %r2554,  %r2555,  %r2556},{%r2563,  %r2564},{%f2913, %f2914, %f2915, %f2916};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2985,  %f2986,  %f2987,  %f2988},{%r2558,  %r2559,  %r2560,  %r2561},{%r2563,  %r2564},{%f2921, %f2922, %f2923, %f2924};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f2993,  %f2994,  %f2995,  %f2996},{%r2558,  %r2559,  %r2560,  %r2561},{%r2565,  %r2566},{%f2929, %f2930, %f2931, %f2932};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3001,  %f3002,  %f3003,  %f3004},{%r2553,  %r2554,  %r2555,  %r2556},{%r2565,  %r2566},{%f2937, %f2938, %f2939, %f2940};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3009,  %f3010,  %f3011,  %f3012},{%r2553,  %r2554,  %r2555,  %r2556},{%r2568,  %r2569},{%f2945, %f2946, %f2947, %f2948};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3017,  %f3018,  %f3019,  %f3020},{%r2558,  %r2559,  %r2560,  %r2561},{%r2568,  %r2569},{%f2953, %f2954, %f2955, %f2956};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3025,  %f3026,  %f3027,  %f3028},{%r2558,  %r2559,  %r2560,  %r2561},{%r2570,  %r2571},{%f2961, %f2962, %f2963, %f2964};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3033,  %f3034,  %f3035,  %f3036},{%r2553,  %r2554,  %r2555,  %r2556},{%r2570,  %r2571},{%f2969, %f2970, %f2971, %f2972};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2621, %r2622, %r2623, %r2624}, [%r5357];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2626, %r2627, %r2628, %r2629}, [%r5362];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r2631, %r2632, %r2633, %r2634}, [%r4551];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r2636, %r2637, %r2638, %r2639}, [%r4556];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3041,  %f3042,  %f3043,  %f3044},{%r2621,  %r2622,  %r2623,  %r2624},{%r2631,  %r2632},{%f2977, %f2978, %f2979, %f2980};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3049,  %f3050,  %f3051,  %f3052},{%r2626,  %r2627,  %r2628,  %r2629},{%r2631,  %r2632},{%f2985, %f2986, %f2987, %f2988};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3057,  %f3058,  %f3059,  %f3060},{%r2626,  %r2627,  %r2628,  %r2629},{%r2633,  %r2634},{%f2993, %f2994, %f2995, %f2996};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3065,  %f3066,  %f3067,  %f3068},{%r2621,  %r2622,  %r2623,  %r2624},{%r2633,  %r2634},{%f3001, %f3002, %f3003, %f3004};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3073,  %f3074,  %f3075,  %f3076},{%r2621,  %r2622,  %r2623,  %r2624},{%r2636,  %r2637},{%f3009, %f3010, %f3011, %f3012};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3081,  %f3082,  %f3083,  %f3084},{%r2626,  %r2627,  %r2628,  %r2629},{%r2636,  %r2637},{%f3017, %f3018, %f3019, %f3020};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3089,  %f3090,  %f3091,  %f3092},{%r2626,  %r2627,  %r2628,  %r2629},{%r2638,  %r2639},{%f3025, %f3026, %f3027, %f3028};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3097,  %f3098,  %f3099,  %f3100},{%r2621,  %r2622,  %r2623,  %r2624},{%r2638,  %r2639},{%f3033, %f3034, %f3035, %f3036};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2689, %r2690, %r2691, %r2692}, [%r5425];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2694, %r2695, %r2696, %r2697}, [%r5430];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r2699, %r2700, %r2701, %r2702}, [%r4619];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r2704, %r2705, %r2706, %r2707}, [%r4624];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3105,  %f3106,  %f3107,  %f3108},{%r2689,  %r2690,  %r2691,  %r2692},{%r2699,  %r2700},{%f3041, %f3042, %f3043, %f3044};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3113,  %f3114,  %f3115,  %f3116},{%r2694,  %r2695,  %r2696,  %r2697},{%r2699,  %r2700},{%f3049, %f3050, %f3051, %f3052};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3121,  %f3122,  %f3123,  %f3124},{%r2694,  %r2695,  %r2696,  %r2697},{%r2701,  %r2702},{%f3057, %f3058, %f3059, %f3060};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3129,  %f3130,  %f3131,  %f3132},{%r2689,  %r2690,  %r2691,  %r2692},{%r2701,  %r2702},{%f3065, %f3066, %f3067, %f3068};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3137,  %f3138,  %f3139,  %f3140},{%r2689,  %r2690,  %r2691,  %r2692},{%r2704,  %r2705},{%f3073, %f3074, %f3075, %f3076};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3145,  %f3146,  %f3147,  %f3148},{%r2694,  %r2695,  %r2696,  %r2697},{%r2704,  %r2705},{%f3081, %f3082, %f3083, %f3084};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3153,  %f3154,  %f3155,  %f3156},{%r2694,  %r2695,  %r2696,  %r2697},{%r2706,  %r2707},{%f3089, %f3090, %f3091, %f3092};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3161,  %f3162,  %f3163,  %f3164},{%r2689,  %r2690,  %r2691,  %r2692},{%r2706,  %r2707},{%f3097, %f3098, %f3099, %f3100};

	// end inline asm
	bar.sync 	0;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs609, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f3170, %rs609;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs612, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f3173, %rs612;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs614, %f3173;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs611, %f3170;}

	// end inline asm
	st.shared.v2.u16 	[%r6272+24576], {%rs611, %rs614};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs615, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f3176, %rs615;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs618, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f3179, %rs618;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs620, %f3179;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs617, %f3176;}

	// end inline asm
	st.shared.v2.u16 	[%r6272+25600], {%rs617, %rs620};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs621, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f3182, %rs621;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs624, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f3185, %rs624;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs626, %f3185;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs623, %f3182;}

	// end inline asm
	st.shared.v2.u16 	[%r6272+28672], {%rs623, %rs626};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs627, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f3188, %rs627;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs630, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f3191, %rs630;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs632, %f3191;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs629, %f3188;}

	// end inline asm
	st.shared.v2.u16 	[%r6272+29696], {%rs629, %rs632};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs633, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f3194, %rs633;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs636, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f3197, %rs636;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs638, %f3197;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs635, %f3194;}

	// end inline asm
	st.shared.v2.u16 	[%r6276+24576], {%rs635, %rs638};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs639, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f3200, %rs639;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs642, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f3203, %rs642;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs644, %f3203;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs641, %f3200;}

	// end inline asm
	st.shared.v2.u16 	[%r6276+25600], {%rs641, %rs644};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs645, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f3206, %rs645;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs648, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f3209, %rs648;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs650, %f3209;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs647, %f3206;}

	// end inline asm
	st.shared.v2.u16 	[%r6276+28672], {%rs647, %rs650};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs651, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f3212, %rs651;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs654, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f3215, %rs654;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs656, %f3215;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs653, %f3212;}

	// end inline asm
	st.shared.v2.u16 	[%r6276+29696], {%rs653, %rs656};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs657, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f3218, %rs657;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs660, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f3221, %rs660;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs662, %f3221;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs659, %f3218;}

	// end inline asm
	st.shared.v2.u16 	[%r6282+24576], {%rs659, %rs662};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs663, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f3224, %rs663;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs666, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f3227, %rs666;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs668, %f3227;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs665, %f3224;}

	// end inline asm
	st.shared.v2.u16 	[%r6282+25600], {%rs665, %rs668};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs669, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f3230, %rs669;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs672, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f3233, %rs672;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs674, %f3233;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs671, %f3230;}

	// end inline asm
	st.shared.v2.u16 	[%r6282+28672], {%rs671, %rs674};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs675, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f3236, %rs675;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs678, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f3239, %rs678;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs680, %f3239;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs677, %f3236;}

	// end inline asm
	st.shared.v2.u16 	[%r6282+29696], {%rs677, %rs680};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs681, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f3242, %rs681;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs684, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f3245, %rs684;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs686, %f3245;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs683, %f3242;}

	// end inline asm
	st.shared.v2.u16 	[%r6285+24576], {%rs683, %rs686};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs687, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f3248, %rs687;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs690, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f3251, %rs690;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs692, %f3251;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs689, %f3248;}

	// end inline asm
	st.shared.v2.u16 	[%r6285+25600], {%rs689, %rs692};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs693, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f3254, %rs693;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs696, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f3257, %rs696;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs698, %f3257;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs695, %f3254;}

	// end inline asm
	st.shared.v2.u16 	[%r6285+28672], {%rs695, %rs698};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs699, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f3260, %rs699;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs702, %f6144;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f3263, %rs702;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs704, %f3263;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs701, %f3260;}

	// end inline asm
	st.shared.v2.u16 	[%r6285+29696], {%rs701, %rs704};
	// begin inline asm
	cp.async.wait_group 2;

	// end inline asm
	bar.sync 	0;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2757, %r2758, %r2759, %r2760}, [%r4677];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2762, %r2763, %r2764, %r2765}, [%r4682];

	// end inline asm
	add.s32 	%r6368, %r6069, 24576;
	add.s32 	%r4687, %r6368, %r6135;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2767, %r2768, %r2769, %r2770}, [%r4687];

	// end inline asm
	add.s32 	%r4692, %r4687, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2772, %r2773, %r2774, %r2775}, [%r4692];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3265,  %f3266,  %f3267,  %f3268},{%r2757,  %r2758,  %r2759,  %r2760},{%r2767,  %r2768},{%f3105, %f3106, %f3107, %f3108};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3273,  %f3274,  %f3275,  %f3276},{%r2762,  %r2763,  %r2764,  %r2765},{%r2767,  %r2768},{%f3113, %f3114, %f3115, %f3116};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3281,  %f3282,  %f3283,  %f3284},{%r2762,  %r2763,  %r2764,  %r2765},{%r2769,  %r2770},{%f3121, %f3122, %f3123, %f3124};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3289,  %f3290,  %f3291,  %f3292},{%r2757,  %r2758,  %r2759,  %r2760},{%r2769,  %r2770},{%f3129, %f3130, %f3131, %f3132};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3297,  %f3298,  %f3299,  %f3300},{%r2757,  %r2758,  %r2759,  %r2760},{%r2772,  %r2773},{%f3137, %f3138, %f3139, %f3140};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3305,  %f3306,  %f3307,  %f3308},{%r2762,  %r2763,  %r2764,  %r2765},{%r2772,  %r2773},{%f3145, %f3146, %f3147, %f3148};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3313,  %f3314,  %f3315,  %f3316},{%r2762,  %r2763,  %r2764,  %r2765},{%r2774,  %r2775},{%f3153, %f3154, %f3155, %f3156};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3321,  %f3322,  %f3323,  %f3324},{%r2757,  %r2758,  %r2759,  %r2760},{%r2774,  %r2775},{%f3161, %f3162, %f3163, %f3164};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2825, %r2826, %r2827, %r2828}, [%r4745];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2830, %r2831, %r2832, %r2833}, [%r4750];

	// end inline asm
	add.s32 	%r4755, %r4687, %r6137;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2835, %r2836, %r2837, %r2838}, [%r4755];

	// end inline asm
	add.s32 	%r4760, %r4755, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2840, %r2841, %r2842, %r2843}, [%r4760];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3329,  %f3330,  %f3331,  %f3332},{%r2825,  %r2826,  %r2827,  %r2828},{%r2835,  %r2836},{%f3265, %f3266, %f3267, %f3268};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3337,  %f3338,  %f3339,  %f3340},{%r2830,  %r2831,  %r2832,  %r2833},{%r2835,  %r2836},{%f3273, %f3274, %f3275, %f3276};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3345,  %f3346,  %f3347,  %f3348},{%r2830,  %r2831,  %r2832,  %r2833},{%r2837,  %r2838},{%f3281, %f3282, %f3283, %f3284};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3353,  %f3354,  %f3355,  %f3356},{%r2825,  %r2826,  %r2827,  %r2828},{%r2837,  %r2838},{%f3289, %f3290, %f3291, %f3292};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3361,  %f3362,  %f3363,  %f3364},{%r2825,  %r2826,  %r2827,  %r2828},{%r2840,  %r2841},{%f3297, %f3298, %f3299, %f3300};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3369,  %f3370,  %f3371,  %f3372},{%r2830,  %r2831,  %r2832,  %r2833},{%r2840,  %r2841},{%f3305, %f3306, %f3307, %f3308};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3377,  %f3378,  %f3379,  %f3380},{%r2830,  %r2831,  %r2832,  %r2833},{%r2842,  %r2843},{%f3313, %f3314, %f3315, %f3316};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3385,  %f3386,  %f3387,  %f3388},{%r2825,  %r2826,  %r2827,  %r2828},{%r2842,  %r2843},{%f3321, %f3322, %f3323, %f3324};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2893, %r2894, %r2895, %r2896}, [%r4813];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2898, %r2899, %r2900, %r2901}, [%r4818];

	// end inline asm
	add.s32 	%r4823, %r4687, %r6139;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2903, %r2904, %r2905, %r2906}, [%r4823];

	// end inline asm
	add.s32 	%r4828, %r4823, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2908, %r2909, %r2910, %r2911}, [%r4828];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3393,  %f3394,  %f3395,  %f3396},{%r2893,  %r2894,  %r2895,  %r2896},{%r2903,  %r2904},{%f3329, %f3330, %f3331, %f3332};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3401,  %f3402,  %f3403,  %f3404},{%r2898,  %r2899,  %r2900,  %r2901},{%r2903,  %r2904},{%f3337, %f3338, %f3339, %f3340};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3409,  %f3410,  %f3411,  %f3412},{%r2898,  %r2899,  %r2900,  %r2901},{%r2905,  %r2906},{%f3345, %f3346, %f3347, %f3348};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3417,  %f3418,  %f3419,  %f3420},{%r2893,  %r2894,  %r2895,  %r2896},{%r2905,  %r2906},{%f3353, %f3354, %f3355, %f3356};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3425,  %f3426,  %f3427,  %f3428},{%r2893,  %r2894,  %r2895,  %r2896},{%r2908,  %r2909},{%f3361, %f3362, %f3363, %f3364};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3433,  %f3434,  %f3435,  %f3436},{%r2898,  %r2899,  %r2900,  %r2901},{%r2908,  %r2909},{%f3369, %f3370, %f3371, %f3372};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3441,  %f3442,  %f3443,  %f3444},{%r2898,  %r2899,  %r2900,  %r2901},{%r2910,  %r2911},{%f3377, %f3378, %f3379, %f3380};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3449,  %f3450,  %f3451,  %f3452},{%r2893,  %r2894,  %r2895,  %r2896},{%r2910,  %r2911},{%f3385, %f3386, %f3387, %f3388};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2961, %r2962, %r2963, %r2964}, [%r4881];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2966, %r2967, %r2968, %r2969}, [%r4886];

	// end inline asm
	add.s32 	%r4891, %r4823, %r6137;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2971, %r2972, %r2973, %r2974}, [%r4891];

	// end inline asm
	add.s32 	%r4896, %r4891, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r2976, %r2977, %r2978, %r2979}, [%r4896];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3457,  %f3458,  %f3459,  %f3460},{%r2961,  %r2962,  %r2963,  %r2964},{%r2971,  %r2972},{%f3393, %f3394, %f3395, %f3396};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3465,  %f3466,  %f3467,  %f3468},{%r2966,  %r2967,  %r2968,  %r2969},{%r2971,  %r2972},{%f3401, %f3402, %f3403, %f3404};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3473,  %f3474,  %f3475,  %f3476},{%r2966,  %r2967,  %r2968,  %r2969},{%r2973,  %r2974},{%f3409, %f3410, %f3411, %f3412};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3481,  %f3482,  %f3483,  %f3484},{%r2961,  %r2962,  %r2963,  %r2964},{%r2973,  %r2974},{%f3417, %f3418, %f3419, %f3420};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3489,  %f3490,  %f3491,  %f3492},{%r2961,  %r2962,  %r2963,  %r2964},{%r2976,  %r2977},{%f3425, %f3426, %f3427, %f3428};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3497,  %f3498,  %f3499,  %f3500},{%r2966,  %r2967,  %r2968,  %r2969},{%r2976,  %r2977},{%f3433, %f3434, %f3435, %f3436};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3505,  %f3506,  %f3507,  %f3508},{%r2966,  %r2967,  %r2968,  %r2969},{%r2978,  %r2979},{%f3441, %f3442, %f3443, %f3444};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3513,  %f3514,  %f3515,  %f3516},{%r2961,  %r2962,  %r2963,  %r2964},{%r2978,  %r2979},{%f3449, %f3450, %f3451, %f3452};

	// end inline asm
	bar.sync 	0;
	// begin inline asm
	cp.async.cg.shared.global [%r3029], [%rd37], 16;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [%r3030], [%rd38], 16;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [%r3031], [%rd39], 16;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [%r3032], [%rd40], 16;
	// end inline asm
	// begin inline asm
	cp.async.commit_group;

	// end inline asm
	// begin inline asm
	cp.async.wait_group 1;

	// end inline asm
	bar.sync 	0;
	add.s32 	%r5493, %r6263, %r6131;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r3033, %r3034, %r3035, %r3036}, [%r5493];

	// end inline asm
	add.s32 	%r5498, %r5493, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r3038, %r3039, %r3040, %r3041}, [%r5498];

	// end inline asm
	add.s32 	%r4959, %r6286, %r6135;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r3043, %r3044, %r3045, %r3046}, [%r4959];

	// end inline asm
	add.s32 	%r4964, %r4959, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r3048, %r3049, %r3050, %r3051}, [%r4964];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3521,  %f3522,  %f3523,  %f3524},{%r3033,  %r3034,  %r3035,  %r3036},{%r3043,  %r3044},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3529,  %f3530,  %f3531,  %f3532},{%r3038,  %r3039,  %r3040,  %r3041},{%r3043,  %r3044},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3537,  %f3538,  %f3539,  %f3540},{%r3038,  %r3039,  %r3040,  %r3041},{%r3045,  %r3046},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3545,  %f3546,  %f3547,  %f3548},{%r3033,  %r3034,  %r3035,  %r3036},{%r3045,  %r3046},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3553,  %f3554,  %f3555,  %f3556},{%r3033,  %r3034,  %r3035,  %r3036},{%r3048,  %r3049},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3561,  %f3562,  %f3563,  %f3564},{%r3038,  %r3039,  %r3040,  %r3041},{%r3048,  %r3049},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3569,  %f3570,  %f3571,  %f3572},{%r3038,  %r3039,  %r3040,  %r3041},{%r3050,  %r3051},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3577,  %f3578,  %f3579,  %f3580},{%r3033,  %r3034,  %r3035,  %r3036},{%r3050,  %r3051},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	add.s32 	%r5561, %r5493, %r6136;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r3101, %r3102, %r3103, %r3104}, [%r5561];

	// end inline asm
	add.s32 	%r5566, %r5561, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r3106, %r3107, %r3108, %r3109}, [%r5566];

	// end inline asm
	add.s32 	%r5027, %r4959, %r6137;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r3111, %r3112, %r3113, %r3114}, [%r5027];

	// end inline asm
	add.s32 	%r5032, %r5027, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r3116, %r3117, %r3118, %r3119}, [%r5032];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3585,  %f3586,  %f3587,  %f3588},{%r3101,  %r3102,  %r3103,  %r3104},{%r3111,  %r3112},{%f3521, %f3522, %f3523, %f3524};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3593,  %f3594,  %f3595,  %f3596},{%r3106,  %r3107,  %r3108,  %r3109},{%r3111,  %r3112},{%f3529, %f3530, %f3531, %f3532};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3601,  %f3602,  %f3603,  %f3604},{%r3106,  %r3107,  %r3108,  %r3109},{%r3113,  %r3114},{%f3537, %f3538, %f3539, %f3540};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3609,  %f3610,  %f3611,  %f3612},{%r3101,  %r3102,  %r3103,  %r3104},{%r3113,  %r3114},{%f3545, %f3546, %f3547, %f3548};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3617,  %f3618,  %f3619,  %f3620},{%r3101,  %r3102,  %r3103,  %r3104},{%r3116,  %r3117},{%f3553, %f3554, %f3555, %f3556};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3625,  %f3626,  %f3627,  %f3628},{%r3106,  %r3107,  %r3108,  %r3109},{%r3116,  %r3117},{%f3561, %f3562, %f3563, %f3564};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3633,  %f3634,  %f3635,  %f3636},{%r3106,  %r3107,  %r3108,  %r3109},{%r3118,  %r3119},{%f3569, %f3570, %f3571, %f3572};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3641,  %f3642,  %f3643,  %f3644},{%r3101,  %r3102,  %r3103,  %r3104},{%r3118,  %r3119},{%f3577, %f3578, %f3579, %f3580};

	// end inline asm
	add.s32 	%r5629, %r5493, %r6138;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r3169, %r3170, %r3171, %r3172}, [%r5629];

	// end inline asm
	add.s32 	%r5634, %r5629, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r3174, %r3175, %r3176, %r3177}, [%r5634];

	// end inline asm
	add.s32 	%r5095, %r4959, %r6139;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r3179, %r3180, %r3181, %r3182}, [%r5095];

	// end inline asm
	add.s32 	%r5100, %r5095, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r3184, %r3185, %r3186, %r3187}, [%r5100];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3649,  %f3650,  %f3651,  %f3652},{%r3169,  %r3170,  %r3171,  %r3172},{%r3179,  %r3180},{%f3585, %f3586, %f3587, %f3588};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3657,  %f3658,  %f3659,  %f3660},{%r3174,  %r3175,  %r3176,  %r3177},{%r3179,  %r3180},{%f3593, %f3594, %f3595, %f3596};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3665,  %f3666,  %f3667,  %f3668},{%r3174,  %r3175,  %r3176,  %r3177},{%r3181,  %r3182},{%f3601, %f3602, %f3603, %f3604};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3673,  %f3674,  %f3675,  %f3676},{%r3169,  %r3170,  %r3171,  %r3172},{%r3181,  %r3182},{%f3609, %f3610, %f3611, %f3612};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3681,  %f3682,  %f3683,  %f3684},{%r3169,  %r3170,  %r3171,  %r3172},{%r3184,  %r3185},{%f3617, %f3618, %f3619, %f3620};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3689,  %f3690,  %f3691,  %f3692},{%r3174,  %r3175,  %r3176,  %r3177},{%r3184,  %r3185},{%f3625, %f3626, %f3627, %f3628};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3697,  %f3698,  %f3699,  %f3700},{%r3174,  %r3175,  %r3176,  %r3177},{%r3186,  %r3187},{%f3633, %f3634, %f3635, %f3636};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3705,  %f3706,  %f3707,  %f3708},{%r3169,  %r3170,  %r3171,  %r3172},{%r3186,  %r3187},{%f3641, %f3642, %f3643, %f3644};

	// end inline asm
	add.s32 	%r5697, %r5629, %r6136;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r3237, %r3238, %r3239, %r3240}, [%r5697];

	// end inline asm
	add.s32 	%r5702, %r5697, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r3242, %r3243, %r3244, %r3245}, [%r5702];

	// end inline asm
	add.s32 	%r5163, %r5095, %r6137;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r3247, %r3248, %r3249, %r3250}, [%r5163];

	// end inline asm
	add.s32 	%r5168, %r5163, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r3252, %r3253, %r3254, %r3255}, [%r5168];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3713,  %f3714,  %f3715,  %f3716},{%r3237,  %r3238,  %r3239,  %r3240},{%r3247,  %r3248},{%f3649, %f3650, %f3651, %f3652};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3721,  %f3722,  %f3723,  %f3724},{%r3242,  %r3243,  %r3244,  %r3245},{%r3247,  %r3248},{%f3657, %f3658, %f3659, %f3660};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3729,  %f3730,  %f3731,  %f3732},{%r3242,  %r3243,  %r3244,  %r3245},{%r3249,  %r3250},{%f3665, %f3666, %f3667, %f3668};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3737,  %f3738,  %f3739,  %f3740},{%r3237,  %r3238,  %r3239,  %r3240},{%r3249,  %r3250},{%f3673, %f3674, %f3675, %f3676};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3745,  %f3746,  %f3747,  %f3748},{%r3237,  %r3238,  %r3239,  %r3240},{%r3252,  %r3253},{%f3681, %f3682, %f3683, %f3684};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3753,  %f3754,  %f3755,  %f3756},{%r3242,  %r3243,  %r3244,  %r3245},{%r3252,  %r3253},{%f3689, %f3690, %f3691, %f3692};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3761,  %f3762,  %f3763,  %f3764},{%r3242,  %r3243,  %r3244,  %r3245},{%r3254,  %r3255},{%f3697, %f3698, %f3699, %f3700};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3769,  %f3770,  %f3771,  %f3772},{%r3237,  %r3238,  %r3239,  %r3240},{%r3254,  %r3255},{%f3705, %f3706, %f3707, %f3708};

	// end inline asm
	bar.sync 	0;
	selp.f32 	%f3777, 0f00000000, %f3713, %p6;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs705, %f3777;}

	// end inline asm
	st.shared.u16 	[%r6165+8192], %rs705;
	selp.f32 	%f3778, 0f00000000, %f3714, %p37;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs706, %f3778;}

	// end inline asm
	st.shared.u16 	[%r6177+8194], %rs706;
	selp.f32 	%f3779, 0f00000000, %f3715, %p8;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs707, %f3779;}

	// end inline asm
	st.shared.u16 	[%r6165+9216], %rs707;
	selp.f32 	%f3780, 0f00000000, %f3716, %p38;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs708, %f3780;}

	// end inline asm
	st.shared.u16 	[%r6177+9218], %rs708;
	selp.f32 	%f3781, 0f00000000, %f3721, %p10;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs709, %f3781;}

	// end inline asm
	st.shared.u16 	[%r6165+12288], %rs709;
	selp.f32 	%f3782, 0f00000000, %f3722, %p39;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs710, %f3782;}

	// end inline asm
	st.shared.u16 	[%r6177+12290], %rs710;
	selp.f32 	%f3783, 0f00000000, %f3723, %p12;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs711, %f3783;}

	// end inline asm
	st.shared.u16 	[%r6165+13312], %rs711;
	selp.f32 	%f3784, 0f00000000, %f3724, %p40;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs712, %f3784;}

	// end inline asm
	st.shared.u16 	[%r6177+13314], %rs712;
	selp.f32 	%f3785, 0f00000000, %f3737, %p41;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs713, %f3785;}

	// end inline asm
	st.shared.u16 	[%r6193+8192], %rs713;
	selp.f32 	%f3786, 0f00000000, %f3738, %p42;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs714, %f3786;}

	// end inline asm
	st.shared.u16 	[%r6205+8194], %rs714;
	selp.f32 	%f3787, 0f00000000, %f3739, %p43;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs715, %f3787;}

	// end inline asm
	st.shared.u16 	[%r6193+9216], %rs715;
	selp.f32 	%f3788, 0f00000000, %f3740, %p44;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs716, %f3788;}

	// end inline asm
	st.shared.u16 	[%r6205+9218], %rs716;
	selp.f32 	%f3789, 0f00000000, %f3729, %p45;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs717, %f3789;}

	// end inline asm
	st.shared.u16 	[%r6193+12288], %rs717;
	selp.f32 	%f3790, 0f00000000, %f3730, %p46;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs718, %f3790;}

	// end inline asm
	st.shared.u16 	[%r6205+12290], %rs718;
	selp.f32 	%f3791, 0f00000000, %f3731, %p47;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs719, %f3791;}

	// end inline asm
	st.shared.u16 	[%r6193+13312], %rs719;
	selp.f32 	%f3792, 0f00000000, %f3732, %p48;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs720, %f3792;}

	// end inline asm
	st.shared.u16 	[%r6205+13314], %rs720;
	selp.f32 	%f3793, 0f00000000, %f3745, %p49;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs721, %f3793;}

	// end inline asm
	st.shared.u16 	[%r6217+8192], %rs721;
	selp.f32 	%f3794, 0f00000000, %f3746, %p50;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs722, %f3794;}

	// end inline asm
	st.shared.u16 	[%r6229+8194], %rs722;
	selp.f32 	%f3795, 0f00000000, %f3747, %p51;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs723, %f3795;}

	// end inline asm
	st.shared.u16 	[%r6217+9216], %rs723;
	selp.f32 	%f3796, 0f00000000, %f3748, %p52;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs724, %f3796;}

	// end inline asm
	st.shared.u16 	[%r6229+9218], %rs724;
	selp.f32 	%f3797, 0f00000000, %f3753, %p53;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs725, %f3797;}

	// end inline asm
	st.shared.u16 	[%r6217+12288], %rs725;
	selp.f32 	%f3798, 0f00000000, %f3754, %p54;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs726, %f3798;}

	// end inline asm
	st.shared.u16 	[%r6229+12290], %rs726;
	selp.f32 	%f3799, 0f00000000, %f3755, %p55;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs727, %f3799;}

	// end inline asm
	st.shared.u16 	[%r6217+13312], %rs727;
	selp.f32 	%f3800, 0f00000000, %f3756, %p56;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs728, %f3800;}

	// end inline asm
	st.shared.u16 	[%r6229+13314], %rs728;
	selp.f32 	%f3801, 0f00000000, %f3769, %p57;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs729, %f3801;}

	// end inline asm
	st.shared.u16 	[%r6241+8192], %rs729;
	selp.f32 	%f3802, 0f00000000, %f3770, %p58;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs730, %f3802;}

	// end inline asm
	st.shared.u16 	[%r6253+8194], %rs730;
	selp.f32 	%f3803, 0f00000000, %f3771, %p59;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs731, %f3803;}

	// end inline asm
	st.shared.u16 	[%r6241+9216], %rs731;
	selp.f32 	%f3804, 0f00000000, %f3772, %p60;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs732, %f3804;}

	// end inline asm
	st.shared.u16 	[%r6253+9218], %rs732;
	selp.f32 	%f3805, 0f00000000, %f3761, %p61;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs733, %f3805;}

	// end inline asm
	st.shared.u16 	[%r6241+12288], %rs733;
	selp.f32 	%f3806, 0f00000000, %f3762, %p62;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs734, %f3806;}

	// end inline asm
	st.shared.u16 	[%r6253+12290], %rs734;
	selp.f32 	%f3807, 0f00000000, %f3763, %p63;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs735, %f3807;}

	// end inline asm
	st.shared.u16 	[%r6241+13312], %rs735;
	selp.f32 	%f3808, 0f00000000, %f3764, %p64;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs736, %f3808;}

	// end inline asm
	st.shared.u16 	[%r6253+13314], %rs736;
	// begin inline asm
	cp.async.wait_group 1;

	// end inline asm
	bar.sync 	0;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r3305, %r3306, %r3307, %r3308}, [%r289];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r3310, %r3311, %r3312, %r3313}, [%r294];

	// end inline asm
	add.s32 	%r5775, %r6132, %r6262;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r3315, %r3316, %r3317, %r3318}, [%r5775];

	// end inline asm
	add.s32 	%r5780, %r5775, %r6138;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r3320, %r3321, %r3322, %r3323}, [%r5780];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3809,  %f3810,  %f3811,  %f3812},{%r3305,  %r3306,  %r3307,  %r3308},{%r3315,  %r3316},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3817,  %f3818,  %f3819,  %f3820},{%r3310,  %r3311,  %r3312,  %r3313},{%r3315,  %r3316},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3825,  %f3826,  %f3827,  %f3828},{%r3310,  %r3311,  %r3312,  %r3313},{%r3317,  %r3318},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3833,  %f3834,  %f3835,  %f3836},{%r3305,  %r3306,  %r3307,  %r3308},{%r3317,  %r3318},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3841,  %f3842,  %f3843,  %f3844},{%r3305,  %r3306,  %r3307,  %r3308},{%r3320,  %r3321},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3849,  %f3850,  %f3851,  %f3852},{%r3310,  %r3311,  %r3312,  %r3313},{%r3320,  %r3321},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3857,  %f3858,  %f3859,  %f3860},{%r3310,  %r3311,  %r3312,  %r3313},{%r3322,  %r3323},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3865,  %f3866,  %f3867,  %f3868},{%r3305,  %r3306,  %r3307,  %r3308},{%r3322,  %r3323},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r3373, %r3374, %r3375, %r3376}, [%r5289];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r3378, %r3379, %r3380, %r3381}, [%r5294];

	// end inline asm
	add.s32 	%r5843, %r5775, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r3383, %r3384, %r3385, %r3386}, [%r5843];

	// end inline asm
	add.s32 	%r5848, %r5843, %r6138;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r3388, %r3389, %r3390, %r3391}, [%r5848];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3873,  %f3874,  %f3875,  %f3876},{%r3373,  %r3374,  %r3375,  %r3376},{%r3383,  %r3384},{%f3809, %f3810, %f3811, %f3812};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3881,  %f3882,  %f3883,  %f3884},{%r3378,  %r3379,  %r3380,  %r3381},{%r3383,  %r3384},{%f3817, %f3818, %f3819, %f3820};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3889,  %f3890,  %f3891,  %f3892},{%r3378,  %r3379,  %r3380,  %r3381},{%r3385,  %r3386},{%f3825, %f3826, %f3827, %f3828};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3897,  %f3898,  %f3899,  %f3900},{%r3373,  %r3374,  %r3375,  %r3376},{%r3385,  %r3386},{%f3833, %f3834, %f3835, %f3836};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3905,  %f3906,  %f3907,  %f3908},{%r3373,  %r3374,  %r3375,  %r3376},{%r3388,  %r3389},{%f3841, %f3842, %f3843, %f3844};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3913,  %f3914,  %f3915,  %f3916},{%r3378,  %r3379,  %r3380,  %r3381},{%r3388,  %r3389},{%f3849, %f3850, %f3851, %f3852};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3921,  %f3922,  %f3923,  %f3924},{%r3378,  %r3379,  %r3380,  %r3381},{%r3390,  %r3391},{%f3857, %f3858, %f3859, %f3860};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3929,  %f3930,  %f3931,  %f3932},{%r3373,  %r3374,  %r3375,  %r3376},{%r3390,  %r3391},{%f3865, %f3866, %f3867, %f3868};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r3441, %r3442, %r3443, %r3444}, [%r5357];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r3446, %r3447, %r3448, %r3449}, [%r5362];

	// end inline asm
	add.s32 	%r5911, %r5775, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r3451, %r3452, %r3453, %r3454}, [%r5911];

	// end inline asm
	add.s32 	%r5916, %r5911, %r6138;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r3456, %r3457, %r3458, %r3459}, [%r5916];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3937,  %f3938,  %f3939,  %f3940},{%r3441,  %r3442,  %r3443,  %r3444},{%r3451,  %r3452},{%f3873, %f3874, %f3875, %f3876};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3945,  %f3946,  %f3947,  %f3948},{%r3446,  %r3447,  %r3448,  %r3449},{%r3451,  %r3452},{%f3881, %f3882, %f3883, %f3884};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3953,  %f3954,  %f3955,  %f3956},{%r3446,  %r3447,  %r3448,  %r3449},{%r3453,  %r3454},{%f3889, %f3890, %f3891, %f3892};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3961,  %f3962,  %f3963,  %f3964},{%r3441,  %r3442,  %r3443,  %r3444},{%r3453,  %r3454},{%f3897, %f3898, %f3899, %f3900};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3969,  %f3970,  %f3971,  %f3972},{%r3441,  %r3442,  %r3443,  %r3444},{%r3456,  %r3457},{%f3905, %f3906, %f3907, %f3908};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3977,  %f3978,  %f3979,  %f3980},{%r3446,  %r3447,  %r3448,  %r3449},{%r3456,  %r3457},{%f3913, %f3914, %f3915, %f3916};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3985,  %f3986,  %f3987,  %f3988},{%r3446,  %r3447,  %r3448,  %r3449},{%r3458,  %r3459},{%f3921, %f3922, %f3923, %f3924};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f3993,  %f3994,  %f3995,  %f3996},{%r3441,  %r3442,  %r3443,  %r3444},{%r3458,  %r3459},{%f3929, %f3930, %f3931, %f3932};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r3509, %r3510, %r3511, %r3512}, [%r5425];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r3514, %r3515, %r3516, %r3517}, [%r5430];

	// end inline asm
	add.s32 	%r5979, %r5775, 6144;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r3519, %r3520, %r3521, %r3522}, [%r5979];

	// end inline asm
	add.s32 	%r5984, %r5979, %r6138;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r3524, %r3525, %r3526, %r3527}, [%r5984];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4001,  %f4002,  %f4003,  %f4004},{%r3509,  %r3510,  %r3511,  %r3512},{%r3519,  %r3520},{%f3937, %f3938, %f3939, %f3940};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4009,  %f4010,  %f4011,  %f4012},{%r3514,  %r3515,  %r3516,  %r3517},{%r3519,  %r3520},{%f3945, %f3946, %f3947, %f3948};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4017,  %f4018,  %f4019,  %f4020},{%r3514,  %r3515,  %r3516,  %r3517},{%r3521,  %r3522},{%f3953, %f3954, %f3955, %f3956};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4025,  %f4026,  %f4027,  %f4028},{%r3509,  %r3510,  %r3511,  %r3512},{%r3521,  %r3522},{%f3961, %f3962, %f3963, %f3964};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4033,  %f4034,  %f4035,  %f4036},{%r3509,  %r3510,  %r3511,  %r3512},{%r3524,  %r3525},{%f3969, %f3970, %f3971, %f3972};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4041,  %f4042,  %f4043,  %f4044},{%r3514,  %r3515,  %r3516,  %r3517},{%r3524,  %r3525},{%f3977, %f3978, %f3979, %f3980};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4049,  %f4050,  %f4051,  %f4052},{%r3514,  %r3515,  %r3516,  %r3517},{%r3526,  %r3527},{%f3985, %f3986, %f3987, %f3988};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4057,  %f4058,  %f4059,  %f4060},{%r3509,  %r3510,  %r3511,  %r3512},{%r3526,  %r3527},{%f3993, %f3994, %f3995, %f3996};

	// end inline asm
	// begin inline asm
	cp.async.wait_group 2;

	// end inline asm
	bar.sync 	0;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r3577, %r3578, %r3579, %r3580}, [%r5493];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r3582, %r3583, %r3584, %r3585}, [%r5498];

	// end inline asm
	add.s32 	%r5503, %r6368, %r6262;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r3587, %r3588, %r3589, %r3590}, [%r5503];

	// end inline asm
	add.s32 	%r5508, %r5503, %r6138;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r3592, %r3593, %r3594, %r3595}, [%r5508];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4065,  %f4066,  %f4067,  %f4068},{%r3577,  %r3578,  %r3579,  %r3580},{%r3587,  %r3588},{%f4001, %f4002, %f4003, %f4004};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4073,  %f4074,  %f4075,  %f4076},{%r3582,  %r3583,  %r3584,  %r3585},{%r3587,  %r3588},{%f4009, %f4010, %f4011, %f4012};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4081,  %f4082,  %f4083,  %f4084},{%r3582,  %r3583,  %r3584,  %r3585},{%r3589,  %r3590},{%f4017, %f4018, %f4019, %f4020};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4089,  %f4090,  %f4091,  %f4092},{%r3577,  %r3578,  %r3579,  %r3580},{%r3589,  %r3590},{%f4025, %f4026, %f4027, %f4028};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4097,  %f4098,  %f4099,  %f4100},{%r3577,  %r3578,  %r3579,  %r3580},{%r3592,  %r3593},{%f4033, %f4034, %f4035, %f4036};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4105,  %f4106,  %f4107,  %f4108},{%r3582,  %r3583,  %r3584,  %r3585},{%r3592,  %r3593},{%f4041, %f4042, %f4043, %f4044};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4113,  %f4114,  %f4115,  %f4116},{%r3582,  %r3583,  %r3584,  %r3585},{%r3594,  %r3595},{%f4049, %f4050, %f4051, %f4052};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4121,  %f4122,  %f4123,  %f4124},{%r3577,  %r3578,  %r3579,  %r3580},{%r3594,  %r3595},{%f4057, %f4058, %f4059, %f4060};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r3645, %r3646, %r3647, %r3648}, [%r5561];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r3650, %r3651, %r3652, %r3653}, [%r5566];

	// end inline asm
	add.s32 	%r5571, %r5503, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r3655, %r3656, %r3657, %r3658}, [%r5571];

	// end inline asm
	add.s32 	%r5576, %r5571, %r6138;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r3660, %r3661, %r3662, %r3663}, [%r5576];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4129,  %f4130,  %f4131,  %f4132},{%r3645,  %r3646,  %r3647,  %r3648},{%r3655,  %r3656},{%f4065, %f4066, %f4067, %f4068};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4137,  %f4138,  %f4139,  %f4140},{%r3650,  %r3651,  %r3652,  %r3653},{%r3655,  %r3656},{%f4073, %f4074, %f4075, %f4076};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4145,  %f4146,  %f4147,  %f4148},{%r3650,  %r3651,  %r3652,  %r3653},{%r3657,  %r3658},{%f4081, %f4082, %f4083, %f4084};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4153,  %f4154,  %f4155,  %f4156},{%r3645,  %r3646,  %r3647,  %r3648},{%r3657,  %r3658},{%f4089, %f4090, %f4091, %f4092};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4161,  %f4162,  %f4163,  %f4164},{%r3645,  %r3646,  %r3647,  %r3648},{%r3660,  %r3661},{%f4097, %f4098, %f4099, %f4100};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4169,  %f4170,  %f4171,  %f4172},{%r3650,  %r3651,  %r3652,  %r3653},{%r3660,  %r3661},{%f4105, %f4106, %f4107, %f4108};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4177,  %f4178,  %f4179,  %f4180},{%r3650,  %r3651,  %r3652,  %r3653},{%r3662,  %r3663},{%f4113, %f4114, %f4115, %f4116};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4185,  %f4186,  %f4187,  %f4188},{%r3645,  %r3646,  %r3647,  %r3648},{%r3662,  %r3663},{%f4121, %f4122, %f4123, %f4124};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r3713, %r3714, %r3715, %r3716}, [%r5629];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r3718, %r3719, %r3720, %r3721}, [%r5634];

	// end inline asm
	add.s32 	%r5639, %r5503, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r3723, %r3724, %r3725, %r3726}, [%r5639];

	// end inline asm
	add.s32 	%r5644, %r5639, %r6138;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r3728, %r3729, %r3730, %r3731}, [%r5644];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4193,  %f4194,  %f4195,  %f4196},{%r3713,  %r3714,  %r3715,  %r3716},{%r3723,  %r3724},{%f4129, %f4130, %f4131, %f4132};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4201,  %f4202,  %f4203,  %f4204},{%r3718,  %r3719,  %r3720,  %r3721},{%r3723,  %r3724},{%f4137, %f4138, %f4139, %f4140};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4209,  %f4210,  %f4211,  %f4212},{%r3718,  %r3719,  %r3720,  %r3721},{%r3725,  %r3726},{%f4145, %f4146, %f4147, %f4148};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4217,  %f4218,  %f4219,  %f4220},{%r3713,  %r3714,  %r3715,  %r3716},{%r3725,  %r3726},{%f4153, %f4154, %f4155, %f4156};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4225,  %f4226,  %f4227,  %f4228},{%r3713,  %r3714,  %r3715,  %r3716},{%r3728,  %r3729},{%f4161, %f4162, %f4163, %f4164};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4233,  %f4234,  %f4235,  %f4236},{%r3718,  %r3719,  %r3720,  %r3721},{%r3728,  %r3729},{%f4169, %f4170, %f4171, %f4172};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4241,  %f4242,  %f4243,  %f4244},{%r3718,  %r3719,  %r3720,  %r3721},{%r3730,  %r3731},{%f4177, %f4178, %f4179, %f4180};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4249,  %f4250,  %f4251,  %f4252},{%r3713,  %r3714,  %r3715,  %r3716},{%r3730,  %r3731},{%f4185, %f4186, %f4187, %f4188};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r3781, %r3782, %r3783, %r3784}, [%r5697];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r3786, %r3787, %r3788, %r3789}, [%r5702];

	// end inline asm
	add.s32 	%r5707, %r5503, 6144;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r3791, %r3792, %r3793, %r3794}, [%r5707];

	// end inline asm
	add.s32 	%r5712, %r5707, %r6138;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r3796, %r3797, %r3798, %r3799}, [%r5712];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4257,  %f4258,  %f4259,  %f4260},{%r3781,  %r3782,  %r3783,  %r3784},{%r3791,  %r3792},{%f4193, %f4194, %f4195, %f4196};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4265,  %f4266,  %f4267,  %f4268},{%r3786,  %r3787,  %r3788,  %r3789},{%r3791,  %r3792},{%f4201, %f4202, %f4203, %f4204};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4273,  %f4274,  %f4275,  %f4276},{%r3786,  %r3787,  %r3788,  %r3789},{%r3793,  %r3794},{%f4209, %f4210, %f4211, %f4212};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4281,  %f4282,  %f4283,  %f4284},{%r3781,  %r3782,  %r3783,  %r3784},{%r3793,  %r3794},{%f4217, %f4218, %f4219, %f4220};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4289,  %f4290,  %f4291,  %f4292},{%r3781,  %r3782,  %r3783,  %r3784},{%r3796,  %r3797},{%f4225, %f4226, %f4227, %f4228};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4297,  %f4298,  %f4299,  %f4300},{%r3786,  %r3787,  %r3788,  %r3789},{%r3796,  %r3797},{%f4233, %f4234, %f4235, %f4236};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4305,  %f4306,  %f4307,  %f4308},{%r3786,  %r3787,  %r3788,  %r3789},{%r3798,  %r3799},{%f4241, %f4242, %f4243, %f4244};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4313,  %f4314,  %f4315,  %f4316},{%r3781,  %r3782,  %r3783,  %r3784},{%r3798,  %r3799},{%f4249, %f4250, %f4251, %f4252};

	// end inline asm
	bar.sync 	0;
	// begin inline asm
	cp.async.cg.shared.global [%r3849], [%rd41], 16;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [%r3850], [%rd42], 16;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [%r3851], [%rd43], 16;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [%r3852], [%rd44], 16;
	// end inline asm
	// begin inline asm
	cp.async.commit_group;

	// end inline asm
	// begin inline asm
	cp.async.wait_group 2;

	// end inline asm
	bar.sync 	0;
	add.s32 	%r5765, %r6286, %r6300;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r3853, %r3854, %r3855, %r3856}, [%r5765];

	// end inline asm
	add.s32 	%r5770, %r5765, %r6139;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r3858, %r3859, %r3860, %r3861}, [%r5770];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r3863, %r3864, %r3865, %r3866}, [%r5775];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r3868, %r3869, %r3870, %r3871}, [%r5780];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4321,  %f4322,  %f4323,  %f4324},{%r3853,  %r3854,  %r3855,  %r3856},{%r3863,  %r3864},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4329,  %f4330,  %f4331,  %f4332},{%r3858,  %r3859,  %r3860,  %r3861},{%r3863,  %r3864},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4337,  %f4338,  %f4339,  %f4340},{%r3858,  %r3859,  %r3860,  %r3861},{%r3865,  %r3866},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4345,  %f4346,  %f4347,  %f4348},{%r3853,  %r3854,  %r3855,  %r3856},{%r3865,  %r3866},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4353,  %f4354,  %f4355,  %f4356},{%r3853,  %r3854,  %r3855,  %r3856},{%r3868,  %r3869},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4361,  %f4362,  %f4363,  %f4364},{%r3858,  %r3859,  %r3860,  %r3861},{%r3868,  %r3869},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4369,  %f4370,  %f4371,  %f4372},{%r3858,  %r3859,  %r3860,  %r3861},{%r3870,  %r3871},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4377,  %f4378,  %f4379,  %f4380},{%r3853,  %r3854,  %r3855,  %r3856},{%r3870,  %r3871},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	add.s32 	%r5833, %r5765, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r3921, %r3922, %r3923, %r3924}, [%r5833];

	// end inline asm
	add.s32 	%r5838, %r5833, %r6139;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r3926, %r3927, %r3928, %r3929}, [%r5838];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r3931, %r3932, %r3933, %r3934}, [%r5843];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r3936, %r3937, %r3938, %r3939}, [%r5848];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4385,  %f4386,  %f4387,  %f4388},{%r3921,  %r3922,  %r3923,  %r3924},{%r3931,  %r3932},{%f4321, %f4322, %f4323, %f4324};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4393,  %f4394,  %f4395,  %f4396},{%r3926,  %r3927,  %r3928,  %r3929},{%r3931,  %r3932},{%f4329, %f4330, %f4331, %f4332};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4401,  %f4402,  %f4403,  %f4404},{%r3926,  %r3927,  %r3928,  %r3929},{%r3933,  %r3934},{%f4337, %f4338, %f4339, %f4340};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4409,  %f4410,  %f4411,  %f4412},{%r3921,  %r3922,  %r3923,  %r3924},{%r3933,  %r3934},{%f4345, %f4346, %f4347, %f4348};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4417,  %f4418,  %f4419,  %f4420},{%r3921,  %r3922,  %r3923,  %r3924},{%r3936,  %r3937},{%f4353, %f4354, %f4355, %f4356};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4425,  %f4426,  %f4427,  %f4428},{%r3926,  %r3927,  %r3928,  %r3929},{%r3936,  %r3937},{%f4361, %f4362, %f4363, %f4364};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4433,  %f4434,  %f4435,  %f4436},{%r3926,  %r3927,  %r3928,  %r3929},{%r3938,  %r3939},{%f4369, %f4370, %f4371, %f4372};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4441,  %f4442,  %f4443,  %f4444},{%r3921,  %r3922,  %r3923,  %r3924},{%r3938,  %r3939},{%f4377, %f4378, %f4379, %f4380};

	// end inline asm
	add.s32 	%r5901, %r5765, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r3989, %r3990, %r3991, %r3992}, [%r5901];

	// end inline asm
	add.s32 	%r5906, %r5901, %r6139;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r3994, %r3995, %r3996, %r3997}, [%r5906];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r3999, %r4000, %r4001, %r4002}, [%r5911];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r4004, %r4005, %r4006, %r4007}, [%r5916];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4449,  %f4450,  %f4451,  %f4452},{%r3989,  %r3990,  %r3991,  %r3992},{%r3999,  %r4000},{%f4385, %f4386, %f4387, %f4388};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4457,  %f4458,  %f4459,  %f4460},{%r3994,  %r3995,  %r3996,  %r3997},{%r3999,  %r4000},{%f4393, %f4394, %f4395, %f4396};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4465,  %f4466,  %f4467,  %f4468},{%r3994,  %r3995,  %r3996,  %r3997},{%r4001,  %r4002},{%f4401, %f4402, %f4403, %f4404};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4473,  %f4474,  %f4475,  %f4476},{%r3989,  %r3990,  %r3991,  %r3992},{%r4001,  %r4002},{%f4409, %f4410, %f4411, %f4412};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4481,  %f4482,  %f4483,  %f4484},{%r3989,  %r3990,  %r3991,  %r3992},{%r4004,  %r4005},{%f4417, %f4418, %f4419, %f4420};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4489,  %f4490,  %f4491,  %f4492},{%r3994,  %r3995,  %r3996,  %r3997},{%r4004,  %r4005},{%f4425, %f4426, %f4427, %f4428};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4497,  %f4498,  %f4499,  %f4500},{%r3994,  %r3995,  %r3996,  %r3997},{%r4006,  %r4007},{%f4433, %f4434, %f4435, %f4436};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4505,  %f4506,  %f4507,  %f4508},{%r3989,  %r3990,  %r3991,  %r3992},{%r4006,  %r4007},{%f4441, %f4442, %f4443, %f4444};

	// end inline asm
	add.s32 	%r5969, %r5765, 6144;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r4057, %r4058, %r4059, %r4060}, [%r5969];

	// end inline asm
	add.s32 	%r5974, %r5969, %r6139;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r4062, %r4063, %r4064, %r4065}, [%r5974];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r4067, %r4068, %r4069, %r4070}, [%r5979];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r4072, %r4073, %r4074, %r4075}, [%r5984];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4513,  %f4514,  %f4515,  %f4516},{%r4057,  %r4058,  %r4059,  %r4060},{%r4067,  %r4068},{%f4449, %f4450, %f4451, %f4452};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4521,  %f4522,  %f4523,  %f4524},{%r4062,  %r4063,  %r4064,  %r4065},{%r4067,  %r4068},{%f4457, %f4458, %f4459, %f4460};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4529,  %f4530,  %f4531,  %f4532},{%r4062,  %r4063,  %r4064,  %r4065},{%r4069,  %r4070},{%f4465, %f4466, %f4467, %f4468};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4537,  %f4538,  %f4539,  %f4540},{%r4057,  %r4058,  %r4059,  %r4060},{%r4069,  %r4070},{%f4473, %f4474, %f4475, %f4476};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4545,  %f4546,  %f4547,  %f4548},{%r4057,  %r4058,  %r4059,  %r4060},{%r4072,  %r4073},{%f4481, %f4482, %f4483, %f4484};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4553,  %f4554,  %f4555,  %f4556},{%r4062,  %r4063,  %r4064,  %r4065},{%r4072,  %r4073},{%f4489, %f4490, %f4491, %f4492};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4561,  %f4562,  %f4563,  %f4564},{%r4062,  %r4063,  %r4064,  %r4065},{%r4074,  %r4075},{%f4497, %f4498, %f4499, %f4500};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4569,  %f4570,  %f4571,  %f4572},{%r4057,  %r4058,  %r4059,  %r4060},{%r4074,  %r4075},{%f4505, %f4506, %f4507, %f4508};

	// end inline asm
	bar.sync 	0;
	ld.global.nc.v4.u32 	{%r6369, %r6370, %r6371, %r6372}, [%rd70];
	mov.b32 	{%rs737, %rs738}, %r6369;
	// begin inline asm
	{  cvt.f32.f16 %f4577, %rs737;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4578, %rs738;}

	// end inline asm
	mov.b32 	{%rs739, %rs740}, %r6370;
	// begin inline asm
	{  cvt.f32.f16 %f4579, %rs739;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4580, %rs740;}

	// end inline asm
	mov.b32 	{%rs741, %rs742}, %r6371;
	// begin inline asm
	{  cvt.f32.f16 %f4581, %rs741;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4582, %rs742;}

	// end inline asm
	mov.b32 	{%rs743, %rs744}, %r6372;
	// begin inline asm
	{  cvt.f32.f16 %f4583, %rs743;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4584, %rs744;}

	// end inline asm
	mul.f32 	%f4585, %f4577, 0f3E000000;
	mul.f32 	%f4588, %f4578, 0f3E000000;
	mul.f32 	%f4591, %f4579, 0f3E000000;
	mul.f32 	%f4594, %f4580, 0f3E000000;
	mul.f32 	%f4597, %f4581, 0f3E000000;
	mul.f32 	%f4600, %f4582, 0f3E000000;
	mul.f32 	%f4603, %f4583, 0f3E000000;
	mul.f32 	%f4606, %f4584, 0f3E000000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs745, %f4585;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4586, %rs745;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs748, %f4588;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4589, %rs748;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs751, %f4591;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4592, %rs751;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs754, %f4594;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4595, %rs754;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs757, %f4597;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4598, %rs757;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs760, %f4600;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4601, %rs760;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs763, %f4603;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4604, %rs763;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs766, %f4606;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4607, %rs766;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs750, %f4589;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs747, %f4586;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs756, %f4595;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs753, %f4592;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs762, %f4601;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs759, %f4598;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs768, %f4607;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs765, %f4604;}

	// end inline asm
	mov.b32 	%r6377, {%rs765, %rs768};
	mov.b32 	%r6378, {%rs759, %rs762};
	mov.b32 	%r6379, {%rs753, %rs756};
	mov.b32 	%r6380, {%rs747, %rs750};
	st.shared.v4.u32 	[%r6327+32768], {%r6380, %r6379, %r6378, %r6377};
	ld.global.nc.v4.u32 	{%r6381, %r6382, %r6383, %r6384}, [%rd70+8192];
	mov.b32 	{%rs769, %rs770}, %r6381;
	// begin inline asm
	{  cvt.f32.f16 %f4609, %rs769;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4610, %rs770;}

	// end inline asm
	mov.b32 	{%rs771, %rs772}, %r6382;
	// begin inline asm
	{  cvt.f32.f16 %f4611, %rs771;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4612, %rs772;}

	// end inline asm
	mov.b32 	{%rs773, %rs774}, %r6383;
	// begin inline asm
	{  cvt.f32.f16 %f4613, %rs773;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4614, %rs774;}

	// end inline asm
	mov.b32 	{%rs775, %rs776}, %r6384;
	// begin inline asm
	{  cvt.f32.f16 %f4615, %rs775;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4616, %rs776;}

	// end inline asm
	mul.f32 	%f4617, %f4609, 0f3E000000;
	mul.f32 	%f4620, %f4610, 0f3E000000;
	mul.f32 	%f4623, %f4611, 0f3E000000;
	mul.f32 	%f4626, %f4612, 0f3E000000;
	mul.f32 	%f4629, %f4613, 0f3E000000;
	mul.f32 	%f4632, %f4614, 0f3E000000;
	mul.f32 	%f4635, %f4615, 0f3E000000;
	mul.f32 	%f4638, %f4616, 0f3E000000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs777, %f4617;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4618, %rs777;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs780, %f4620;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4621, %rs780;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs783, %f4623;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4624, %rs783;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs786, %f4626;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4627, %rs786;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs789, %f4629;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4630, %rs789;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs792, %f4632;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4633, %rs792;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs795, %f4635;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4636, %rs795;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs798, %f4638;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4639, %rs798;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs782, %f4621;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs779, %f4618;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs788, %f4627;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs785, %f4624;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs794, %f4633;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs791, %f4630;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs800, %f4639;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs797, %f4636;}

	// end inline asm
	mov.b32 	%r6389, {%rs797, %rs800};
	mov.b32 	%r6390, {%rs791, %rs794};
	mov.b32 	%r6391, {%rs785, %rs788};
	mov.b32 	%r6392, {%rs779, %rs782};
	st.shared.v4.u32 	[%r6327+34816], {%r6392, %r6391, %r6390, %r6389};
	ld.global.nc.v4.u32 	{%r6393, %r6394, %r6395, %r6396}, [%rd70+16384];
	mov.b32 	{%rs801, %rs802}, %r6393;
	// begin inline asm
	{  cvt.f32.f16 %f4641, %rs801;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4642, %rs802;}

	// end inline asm
	mov.b32 	{%rs803, %rs804}, %r6394;
	// begin inline asm
	{  cvt.f32.f16 %f4643, %rs803;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4644, %rs804;}

	// end inline asm
	mov.b32 	{%rs805, %rs806}, %r6395;
	// begin inline asm
	{  cvt.f32.f16 %f4645, %rs805;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4646, %rs806;}

	// end inline asm
	mov.b32 	{%rs807, %rs808}, %r6396;
	// begin inline asm
	{  cvt.f32.f16 %f4647, %rs807;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4648, %rs808;}

	// end inline asm
	mul.f32 	%f4649, %f4641, 0f3E000000;
	mul.f32 	%f4652, %f4642, 0f3E000000;
	mul.f32 	%f4655, %f4643, 0f3E000000;
	mul.f32 	%f4658, %f4644, 0f3E000000;
	mul.f32 	%f4661, %f4645, 0f3E000000;
	mul.f32 	%f4664, %f4646, 0f3E000000;
	mul.f32 	%f4667, %f4647, 0f3E000000;
	mul.f32 	%f4670, %f4648, 0f3E000000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs809, %f4649;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4650, %rs809;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs812, %f4652;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4653, %rs812;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs815, %f4655;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4656, %rs815;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs818, %f4658;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4659, %rs818;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs821, %f4661;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4662, %rs821;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs824, %f4664;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4665, %rs824;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs827, %f4667;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4668, %rs827;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs830, %f4670;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4671, %rs830;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs814, %f4653;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs811, %f4650;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs820, %f4659;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs817, %f4656;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs826, %f4665;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs823, %f4662;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs832, %f4671;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs829, %f4668;}

	// end inline asm
	mov.b32 	%r6401, {%rs829, %rs832};
	mov.b32 	%r6402, {%rs823, %rs826};
	mov.b32 	%r6403, {%rs817, %rs820};
	mov.b32 	%r6404, {%rs811, %rs814};
	st.shared.v4.u32 	[%r6327+36864], {%r6404, %r6403, %r6402, %r6401};
	ld.global.nc.v4.u32 	{%r6405, %r6406, %r6407, %r6408}, [%rd70+24576];
	mov.b32 	{%rs833, %rs834}, %r6405;
	// begin inline asm
	{  cvt.f32.f16 %f4673, %rs833;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4674, %rs834;}

	// end inline asm
	mov.b32 	{%rs835, %rs836}, %r6406;
	// begin inline asm
	{  cvt.f32.f16 %f4675, %rs835;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4676, %rs836;}

	// end inline asm
	mov.b32 	{%rs837, %rs838}, %r6407;
	// begin inline asm
	{  cvt.f32.f16 %f4677, %rs837;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4678, %rs838;}

	// end inline asm
	mov.b32 	{%rs839, %rs840}, %r6408;
	// begin inline asm
	{  cvt.f32.f16 %f4679, %rs839;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4680, %rs840;}

	// end inline asm
	mul.f32 	%f4681, %f4673, 0f3E000000;
	mul.f32 	%f4684, %f4674, 0f3E000000;
	mul.f32 	%f4687, %f4675, 0f3E000000;
	mul.f32 	%f4690, %f4676, 0f3E000000;
	mul.f32 	%f4693, %f4677, 0f3E000000;
	mul.f32 	%f4696, %f4678, 0f3E000000;
	mul.f32 	%f4699, %f4679, 0f3E000000;
	mul.f32 	%f4702, %f4680, 0f3E000000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs841, %f4681;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4682, %rs841;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs844, %f4684;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4685, %rs844;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs847, %f4687;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4688, %rs847;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs850, %f4690;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4691, %rs850;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs853, %f4693;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4694, %rs853;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs856, %f4696;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4697, %rs856;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs859, %f4699;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4700, %rs859;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs862, %f4702;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4703, %rs862;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs846, %f4685;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs843, %f4682;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs852, %f4691;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs849, %f4688;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs858, %f4697;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs855, %f4694;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs864, %f4703;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs861, %f4700;}

	// end inline asm
	mov.b32 	%r6413, {%rs861, %rs864};
	mov.b32 	%r6414, {%rs855, %rs858};
	mov.b32 	%r6415, {%rs849, %rs852};
	mov.b32 	%r6416, {%rs843, %rs846};
	st.shared.v4.u32 	[%r6327+38912], {%r6416, %r6415, %r6414, %r6413};
	// begin inline asm
	cp.async.cg.shared.global [%r4125], [%rd45], 16;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [%r4126], [%rd46], 16;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [%r4127], [%rd47], 16;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [%r4128], [%rd48], 16;
	// end inline asm
	// begin inline asm
	cp.async.commit_group;

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs865, %f3457;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4706, %rs865;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs868, %f3458;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4709, %rs868;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs870, %f4709;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs867, %f4706;}

	// end inline asm
	add.s64 	%rd71, %rd57, %rd68;
	st.global.v2.u16 	[%rd71+32768], {%rs867, %rs870};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs871, %f3459;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4712, %rs871;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs874, %f3460;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4715, %rs874;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs876, %f4715;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs873, %f4712;}

	// end inline asm
	st.global.v2.u16 	[%rd71+36864], {%rs873, %rs876};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs877, %f3465;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4718, %rs877;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs880, %f3466;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4721, %rs880;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs882, %f4721;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs879, %f4718;}

	// end inline asm
	st.global.v2.u16 	[%rd71+49152], {%rs879, %rs882};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs883, %f3467;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4724, %rs883;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs886, %f3468;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4727, %rs886;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs888, %f4727;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs885, %f4724;}

	// end inline asm
	st.global.v2.u16 	[%rd71+53248], {%rs885, %rs888};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs889, %f3481;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4730, %rs889;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs892, %f3482;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4733, %rs892;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs894, %f4733;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs891, %f4730;}

	// end inline asm
	st.global.v2.u16 	[%rd71+32800], {%rs891, %rs894};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs895, %f3483;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4736, %rs895;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs898, %f3484;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4739, %rs898;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs900, %f4739;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs897, %f4736;}

	// end inline asm
	st.global.v2.u16 	[%rd71+36896], {%rs897, %rs900};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs901, %f3473;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4742, %rs901;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs904, %f3474;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4745, %rs904;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs906, %f4745;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs903, %f4742;}

	// end inline asm
	st.global.v2.u16 	[%rd71+49184], {%rs903, %rs906};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs907, %f3475;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4748, %rs907;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs910, %f3476;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4751, %rs910;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs912, %f4751;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs909, %f4748;}

	// end inline asm
	st.global.v2.u16 	[%rd71+53280], {%rs909, %rs912};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs913, %f3489;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4754, %rs913;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs916, %f3490;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4757, %rs916;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs918, %f4757;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs915, %f4754;}

	// end inline asm
	st.global.v2.u16 	[%rd71+32832], {%rs915, %rs918};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs919, %f3491;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4760, %rs919;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs922, %f3492;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4763, %rs922;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs924, %f4763;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs921, %f4760;}

	// end inline asm
	st.global.v2.u16 	[%rd71+36928], {%rs921, %rs924};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs925, %f3497;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4766, %rs925;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs928, %f3498;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4769, %rs928;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs930, %f4769;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs927, %f4766;}

	// end inline asm
	st.global.v2.u16 	[%rd71+49216], {%rs927, %rs930};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs931, %f3499;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4772, %rs931;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs934, %f3500;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4775, %rs934;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs936, %f4775;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs933, %f4772;}

	// end inline asm
	st.global.v2.u16 	[%rd71+53312], {%rs933, %rs936};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs937, %f3513;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4778, %rs937;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs940, %f3514;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4781, %rs940;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs942, %f4781;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs939, %f4778;}

	// end inline asm
	st.global.v2.u16 	[%rd71+32864], {%rs939, %rs942};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs943, %f3515;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4784, %rs943;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs946, %f3516;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4787, %rs946;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs948, %f4787;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs945, %f4784;}

	// end inline asm
	st.global.v2.u16 	[%rd71+36960], {%rs945, %rs948};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs949, %f3505;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4790, %rs949;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs952, %f3506;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4793, %rs952;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs954, %f4793;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs951, %f4790;}

	// end inline asm
	st.global.v2.u16 	[%rd71+49248], {%rs951, %rs954};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs955, %f3507;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4796, %rs955;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs958, %f3508;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4799, %rs958;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs960, %f4799;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs957, %f4796;}

	// end inline asm
	st.global.v2.u16 	[%rd71+53344], {%rs957, %rs960};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs961, %f4257;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4802, %rs961;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs964, %f4258;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4805, %rs964;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs966, %f4805;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs963, %f4802;}

	// end inline asm
	add.s64 	%rd72, %rd59, %rd68;
	st.global.v2.u16 	[%rd72+32768], {%rs963, %rs966};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs967, %f4259;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4808, %rs967;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs970, %f4260;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4811, %rs970;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs972, %f4811;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs969, %f4808;}

	// end inline asm
	st.global.v2.u16 	[%rd72+36864], {%rs969, %rs972};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs973, %f4265;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4814, %rs973;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs976, %f4266;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4817, %rs976;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs978, %f4817;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs975, %f4814;}

	// end inline asm
	st.global.v2.u16 	[%rd72+49152], {%rs975, %rs978};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs979, %f4267;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4820, %rs979;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs982, %f4268;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4823, %rs982;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs984, %f4823;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs981, %f4820;}

	// end inline asm
	st.global.v2.u16 	[%rd72+53248], {%rs981, %rs984};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs985, %f4281;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4826, %rs985;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs988, %f4282;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4829, %rs988;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs990, %f4829;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs987, %f4826;}

	// end inline asm
	st.global.v2.u16 	[%rd72+32800], {%rs987, %rs990};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs991, %f4283;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4832, %rs991;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs994, %f4284;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4835, %rs994;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs996, %f4835;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs993, %f4832;}

	// end inline asm
	st.global.v2.u16 	[%rd72+36896], {%rs993, %rs996};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs997, %f4273;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4838, %rs997;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1000, %f4274;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4841, %rs1000;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1002, %f4841;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs999, %f4838;}

	// end inline asm
	st.global.v2.u16 	[%rd72+49184], {%rs999, %rs1002};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1003, %f4275;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4844, %rs1003;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1006, %f4276;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4847, %rs1006;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1008, %f4847;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1005, %f4844;}

	// end inline asm
	st.global.v2.u16 	[%rd72+53280], {%rs1005, %rs1008};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1009, %f4289;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4850, %rs1009;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1012, %f4290;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4853, %rs1012;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1014, %f4853;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1011, %f4850;}

	// end inline asm
	st.global.v2.u16 	[%rd72+32832], {%rs1011, %rs1014};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1015, %f4291;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4856, %rs1015;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1018, %f4292;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4859, %rs1018;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1020, %f4859;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1017, %f4856;}

	// end inline asm
	st.global.v2.u16 	[%rd72+36928], {%rs1017, %rs1020};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1021, %f4297;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4862, %rs1021;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1024, %f4298;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4865, %rs1024;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1026, %f4865;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1023, %f4862;}

	// end inline asm
	st.global.v2.u16 	[%rd72+49216], {%rs1023, %rs1026};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1027, %f4299;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4868, %rs1027;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1030, %f4300;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4871, %rs1030;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1032, %f4871;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1029, %f4868;}

	// end inline asm
	st.global.v2.u16 	[%rd72+53312], {%rs1029, %rs1032};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1033, %f4313;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4874, %rs1033;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1036, %f4314;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4877, %rs1036;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1038, %f4877;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1035, %f4874;}

	// end inline asm
	st.global.v2.u16 	[%rd72+32864], {%rs1035, %rs1038};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1039, %f4315;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4880, %rs1039;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1042, %f4316;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4883, %rs1042;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1044, %f4883;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1041, %f4880;}

	// end inline asm
	st.global.v2.u16 	[%rd72+36960], {%rs1041, %rs1044};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1045, %f4305;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4886, %rs1045;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1048, %f4306;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4889, %rs1048;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1050, %f4889;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1047, %f4886;}

	// end inline asm
	st.global.v2.u16 	[%rd72+49248], {%rs1047, %rs1050};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1051, %f4307;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4892, %rs1051;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1054, %f4308;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f4895, %rs1054;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1056, %f4895;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1053, %f4892;}

	// end inline asm
	st.global.v2.u16 	[%rd72+53344], {%rs1053, %rs1056};
	// begin inline asm
	cp.async.wait_all;

	// end inline asm
	bar.sync 	0;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r4129, %r4130, %r4131, %r4132}, [%r4677];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r4134, %r4135, %r4136, %r4137}, [%r4682];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r4139, %r4140, %r4141, %r4142}, [%r4143];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r4144, %r4145, %r4146, %r4147}, [%r4148];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4897,  %f4898,  %f4899,  %f4900},{%r4129,  %r4130,  %r4131,  %r4132},{%r4139,  %r4140},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4905,  %f4906,  %f4907,  %f4908},{%r4134,  %r4135,  %r4136,  %r4137},{%r4139,  %r4140},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4913,  %f4914,  %f4915,  %f4916},{%r4134,  %r4135,  %r4136,  %r4137},{%r4141,  %r4142},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4921,  %f4922,  %f4923,  %f4924},{%r4129,  %r4130,  %r4131,  %r4132},{%r4141,  %r4142},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4929,  %f4930,  %f4931,  %f4932},{%r4129,  %r4130,  %r4131,  %r4132},{%r4144,  %r4145},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4937,  %f4938,  %f4939,  %f4940},{%r4134,  %r4135,  %r4136,  %r4137},{%r4144,  %r4145},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4945,  %f4946,  %f4947,  %f4948},{%r4134,  %r4135,  %r4136,  %r4137},{%r4146,  %r4147},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4953,  %f4954,  %f4955,  %f4956},{%r4129,  %r4130,  %r4131,  %r4132},{%r4146,  %r4147},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r4197, %r4198, %r4199, %r4200}, [%r4745];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r4202, %r4203, %r4204, %r4205}, [%r4750];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r4207, %r4208, %r4209, %r4210}, [%r4211];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r4212, %r4213, %r4214, %r4215}, [%r4216];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4961,  %f4962,  %f4963,  %f4964},{%r4197,  %r4198,  %r4199,  %r4200},{%r4207,  %r4208},{%f4897, %f4898, %f4899, %f4900};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4969,  %f4970,  %f4971,  %f4972},{%r4202,  %r4203,  %r4204,  %r4205},{%r4207,  %r4208},{%f4905, %f4906, %f4907, %f4908};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4977,  %f4978,  %f4979,  %f4980},{%r4202,  %r4203,  %r4204,  %r4205},{%r4209,  %r4210},{%f4913, %f4914, %f4915, %f4916};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4985,  %f4986,  %f4987,  %f4988},{%r4197,  %r4198,  %r4199,  %r4200},{%r4209,  %r4210},{%f4921, %f4922, %f4923, %f4924};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f4993,  %f4994,  %f4995,  %f4996},{%r4197,  %r4198,  %r4199,  %r4200},{%r4212,  %r4213},{%f4929, %f4930, %f4931, %f4932};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5001,  %f5002,  %f5003,  %f5004},{%r4202,  %r4203,  %r4204,  %r4205},{%r4212,  %r4213},{%f4937, %f4938, %f4939, %f4940};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5009,  %f5010,  %f5011,  %f5012},{%r4202,  %r4203,  %r4204,  %r4205},{%r4214,  %r4215},{%f4945, %f4946, %f4947, %f4948};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5017,  %f5018,  %f5019,  %f5020},{%r4197,  %r4198,  %r4199,  %r4200},{%r4214,  %r4215},{%f4953, %f4954, %f4955, %f4956};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r4265, %r4266, %r4267, %r4268}, [%r4813];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r4270, %r4271, %r4272, %r4273}, [%r4818];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r4275, %r4276, %r4277, %r4278}, [%r4279];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r4280, %r4281, %r4282, %r4283}, [%r4284];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5025,  %f5026,  %f5027,  %f5028},{%r4265,  %r4266,  %r4267,  %r4268},{%r4275,  %r4276},{%f4961, %f4962, %f4963, %f4964};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5033,  %f5034,  %f5035,  %f5036},{%r4270,  %r4271,  %r4272,  %r4273},{%r4275,  %r4276},{%f4969, %f4970, %f4971, %f4972};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5041,  %f5042,  %f5043,  %f5044},{%r4270,  %r4271,  %r4272,  %r4273},{%r4277,  %r4278},{%f4977, %f4978, %f4979, %f4980};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5049,  %f5050,  %f5051,  %f5052},{%r4265,  %r4266,  %r4267,  %r4268},{%r4277,  %r4278},{%f4985, %f4986, %f4987, %f4988};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5057,  %f5058,  %f5059,  %f5060},{%r4265,  %r4266,  %r4267,  %r4268},{%r4280,  %r4281},{%f4993, %f4994, %f4995, %f4996};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5065,  %f5066,  %f5067,  %f5068},{%r4270,  %r4271,  %r4272,  %r4273},{%r4280,  %r4281},{%f5001, %f5002, %f5003, %f5004};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5073,  %f5074,  %f5075,  %f5076},{%r4270,  %r4271,  %r4272,  %r4273},{%r4282,  %r4283},{%f5009, %f5010, %f5011, %f5012};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5081,  %f5082,  %f5083,  %f5084},{%r4265,  %r4266,  %r4267,  %r4268},{%r4282,  %r4283},{%f5017, %f5018, %f5019, %f5020};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r4333, %r4334, %r4335, %r4336}, [%r4881];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r4338, %r4339, %r4340, %r4341}, [%r4886];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r4343, %r4344, %r4345, %r4346}, [%r4347];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r4348, %r4349, %r4350, %r4351}, [%r4352];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5089,  %f5090,  %f5091,  %f5092},{%r4333,  %r4334,  %r4335,  %r4336},{%r4343,  %r4344},{%f5025, %f5026, %f5027, %f5028};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5097,  %f5098,  %f5099,  %f5100},{%r4338,  %r4339,  %r4340,  %r4341},{%r4343,  %r4344},{%f5033, %f5034, %f5035, %f5036};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5105,  %f5106,  %f5107,  %f5108},{%r4338,  %r4339,  %r4340,  %r4341},{%r4345,  %r4346},{%f5041, %f5042, %f5043, %f5044};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5113,  %f5114,  %f5115,  %f5116},{%r4333,  %r4334,  %r4335,  %r4336},{%r4345,  %r4346},{%f5049, %f5050, %f5051, %f5052};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5121,  %f5122,  %f5123,  %f5124},{%r4333,  %r4334,  %r4335,  %r4336},{%r4348,  %r4349},{%f5057, %f5058, %f5059, %f5060};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5129,  %f5130,  %f5131,  %f5132},{%r4338,  %r4339,  %r4340,  %r4341},{%r4348,  %r4349},{%f5065, %f5066, %f5067, %f5068};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5137,  %f5138,  %f5139,  %f5140},{%r4338,  %r4339,  %r4340,  %r4341},{%r4350,  %r4351},{%f5073, %f5074, %f5075, %f5076};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5145,  %f5146,  %f5147,  %f5148},{%r4333,  %r4334,  %r4335,  %r4336},{%r4350,  %r4351},{%f5081, %f5082, %f5083, %f5084};

	// end inline asm
	bar.sync 	0;
	selp.f32 	%f5153, 0f00000000, %f5089, %p6;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1057, %f5153;}

	// end inline asm
	st.shared.u16 	[%r6165+8192], %rs1057;
	selp.f32 	%f5154, 0f00000000, %f5090, %p37;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1058, %f5154;}

	// end inline asm
	st.shared.u16 	[%r6177+8194], %rs1058;
	selp.f32 	%f5155, 0f00000000, %f5091, %p8;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1059, %f5155;}

	// end inline asm
	st.shared.u16 	[%r6165+9216], %rs1059;
	selp.f32 	%f5156, 0f00000000, %f5092, %p38;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1060, %f5156;}

	// end inline asm
	st.shared.u16 	[%r6177+9218], %rs1060;
	selp.f32 	%f5157, 0f00000000, %f5097, %p10;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1061, %f5157;}

	// end inline asm
	st.shared.u16 	[%r6165+12288], %rs1061;
	selp.f32 	%f5158, 0f00000000, %f5098, %p39;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1062, %f5158;}

	// end inline asm
	st.shared.u16 	[%r6177+12290], %rs1062;
	selp.f32 	%f5159, 0f00000000, %f5099, %p12;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1063, %f5159;}

	// end inline asm
	st.shared.u16 	[%r6165+13312], %rs1063;
	selp.f32 	%f5160, 0f00000000, %f5100, %p40;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1064, %f5160;}

	// end inline asm
	st.shared.u16 	[%r6177+13314], %rs1064;
	selp.f32 	%f5161, 0f00000000, %f5113, %p41;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1065, %f5161;}

	// end inline asm
	st.shared.u16 	[%r6193+8192], %rs1065;
	selp.f32 	%f5162, 0f00000000, %f5114, %p42;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1066, %f5162;}

	// end inline asm
	st.shared.u16 	[%r6205+8194], %rs1066;
	selp.f32 	%f5163, 0f00000000, %f5115, %p43;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1067, %f5163;}

	// end inline asm
	st.shared.u16 	[%r6193+9216], %rs1067;
	selp.f32 	%f5164, 0f00000000, %f5116, %p44;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1068, %f5164;}

	// end inline asm
	st.shared.u16 	[%r6205+9218], %rs1068;
	selp.f32 	%f5165, 0f00000000, %f5105, %p45;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1069, %f5165;}

	// end inline asm
	st.shared.u16 	[%r6193+12288], %rs1069;
	selp.f32 	%f5166, 0f00000000, %f5106, %p46;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1070, %f5166;}

	// end inline asm
	st.shared.u16 	[%r6205+12290], %rs1070;
	selp.f32 	%f5167, 0f00000000, %f5107, %p47;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1071, %f5167;}

	// end inline asm
	st.shared.u16 	[%r6193+13312], %rs1071;
	selp.f32 	%f5168, 0f00000000, %f5108, %p48;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1072, %f5168;}

	// end inline asm
	st.shared.u16 	[%r6205+13314], %rs1072;
	selp.f32 	%f5169, 0f00000000, %f5121, %p49;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1073, %f5169;}

	// end inline asm
	st.shared.u16 	[%r6217+8192], %rs1073;
	selp.f32 	%f5170, 0f00000000, %f5122, %p50;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1074, %f5170;}

	// end inline asm
	st.shared.u16 	[%r6229+8194], %rs1074;
	selp.f32 	%f5171, 0f00000000, %f5123, %p51;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1075, %f5171;}

	// end inline asm
	st.shared.u16 	[%r6217+9216], %rs1075;
	selp.f32 	%f5172, 0f00000000, %f5124, %p52;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1076, %f5172;}

	// end inline asm
	st.shared.u16 	[%r6229+9218], %rs1076;
	selp.f32 	%f5173, 0f00000000, %f5129, %p53;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1077, %f5173;}

	// end inline asm
	st.shared.u16 	[%r6217+12288], %rs1077;
	selp.f32 	%f5174, 0f00000000, %f5130, %p54;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1078, %f5174;}

	// end inline asm
	st.shared.u16 	[%r6229+12290], %rs1078;
	selp.f32 	%f5175, 0f00000000, %f5131, %p55;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1079, %f5175;}

	// end inline asm
	st.shared.u16 	[%r6217+13312], %rs1079;
	selp.f32 	%f5176, 0f00000000, %f5132, %p56;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1080, %f5176;}

	// end inline asm
	st.shared.u16 	[%r6229+13314], %rs1080;
	selp.f32 	%f5177, 0f00000000, %f5145, %p57;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1081, %f5177;}

	// end inline asm
	st.shared.u16 	[%r6241+8192], %rs1081;
	selp.f32 	%f5178, 0f00000000, %f5146, %p58;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1082, %f5178;}

	// end inline asm
	st.shared.u16 	[%r6253+8194], %rs1082;
	selp.f32 	%f5179, 0f00000000, %f5147, %p59;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1083, %f5179;}

	// end inline asm
	st.shared.u16 	[%r6241+9216], %rs1083;
	selp.f32 	%f5180, 0f00000000, %f5148, %p60;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1084, %f5180;}

	// end inline asm
	st.shared.u16 	[%r6253+9218], %rs1084;
	selp.f32 	%f5181, 0f00000000, %f5137, %p61;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1085, %f5181;}

	// end inline asm
	st.shared.u16 	[%r6241+12288], %rs1085;
	selp.f32 	%f5182, 0f00000000, %f5138, %p62;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1086, %f5182;}

	// end inline asm
	st.shared.u16 	[%r6253+12290], %rs1086;
	selp.f32 	%f5183, 0f00000000, %f5139, %p63;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1087, %f5183;}

	// end inline asm
	st.shared.u16 	[%r6241+13312], %rs1087;
	selp.f32 	%f5184, 0f00000000, %f5140, %p64;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1088, %f5184;}

	// end inline asm
	st.shared.u16 	[%r6253+13314], %rs1088;
	// begin inline asm
	cp.async.wait_all;

	// end inline asm
	bar.sync 	0;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r4401, %r4402, %r4403, %r4404}, [%r289];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r4406, %r4407, %r4408, %r4409}, [%r294];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r4411, %r4412, %r4413, %r4414}, [%r4415];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r4416, %r4417, %r4418, %r4419}, [%r4420];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5185,  %f5186,  %f5187,  %f5188},{%r4401,  %r4402,  %r4403,  %r4404},{%r4411,  %r4412},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5193,  %f5194,  %f5195,  %f5196},{%r4406,  %r4407,  %r4408,  %r4409},{%r4411,  %r4412},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5201,  %f5202,  %f5203,  %f5204},{%r4406,  %r4407,  %r4408,  %r4409},{%r4413,  %r4414},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5209,  %f5210,  %f5211,  %f5212},{%r4401,  %r4402,  %r4403,  %r4404},{%r4413,  %r4414},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5217,  %f5218,  %f5219,  %f5220},{%r4401,  %r4402,  %r4403,  %r4404},{%r4416,  %r4417},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5225,  %f5226,  %f5227,  %f5228},{%r4406,  %r4407,  %r4408,  %r4409},{%r4416,  %r4417},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5233,  %f5234,  %f5235,  %f5236},{%r4406,  %r4407,  %r4408,  %r4409},{%r4418,  %r4419},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5241,  %f5242,  %f5243,  %f5244},{%r4401,  %r4402,  %r4403,  %r4404},{%r4418,  %r4419},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r4469, %r4470, %r4471, %r4472}, [%r5289];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r4474, %r4475, %r4476, %r4477}, [%r5294];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r4479, %r4480, %r4481, %r4482}, [%r4483];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r4484, %r4485, %r4486, %r4487}, [%r4488];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5249,  %f5250,  %f5251,  %f5252},{%r4469,  %r4470,  %r4471,  %r4472},{%r4479,  %r4480},{%f5185, %f5186, %f5187, %f5188};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5257,  %f5258,  %f5259,  %f5260},{%r4474,  %r4475,  %r4476,  %r4477},{%r4479,  %r4480},{%f5193, %f5194, %f5195, %f5196};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5265,  %f5266,  %f5267,  %f5268},{%r4474,  %r4475,  %r4476,  %r4477},{%r4481,  %r4482},{%f5201, %f5202, %f5203, %f5204};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5273,  %f5274,  %f5275,  %f5276},{%r4469,  %r4470,  %r4471,  %r4472},{%r4481,  %r4482},{%f5209, %f5210, %f5211, %f5212};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5281,  %f5282,  %f5283,  %f5284},{%r4469,  %r4470,  %r4471,  %r4472},{%r4484,  %r4485},{%f5217, %f5218, %f5219, %f5220};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5289,  %f5290,  %f5291,  %f5292},{%r4474,  %r4475,  %r4476,  %r4477},{%r4484,  %r4485},{%f5225, %f5226, %f5227, %f5228};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5297,  %f5298,  %f5299,  %f5300},{%r4474,  %r4475,  %r4476,  %r4477},{%r4486,  %r4487},{%f5233, %f5234, %f5235, %f5236};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5305,  %f5306,  %f5307,  %f5308},{%r4469,  %r4470,  %r4471,  %r4472},{%r4486,  %r4487},{%f5241, %f5242, %f5243, %f5244};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r4537, %r4538, %r4539, %r4540}, [%r5357];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r4542, %r4543, %r4544, %r4545}, [%r5362];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r4547, %r4548, %r4549, %r4550}, [%r4551];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r4552, %r4553, %r4554, %r4555}, [%r4556];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5313,  %f5314,  %f5315,  %f5316},{%r4537,  %r4538,  %r4539,  %r4540},{%r4547,  %r4548},{%f5249, %f5250, %f5251, %f5252};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5321,  %f5322,  %f5323,  %f5324},{%r4542,  %r4543,  %r4544,  %r4545},{%r4547,  %r4548},{%f5257, %f5258, %f5259, %f5260};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5329,  %f5330,  %f5331,  %f5332},{%r4542,  %r4543,  %r4544,  %r4545},{%r4549,  %r4550},{%f5265, %f5266, %f5267, %f5268};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5337,  %f5338,  %f5339,  %f5340},{%r4537,  %r4538,  %r4539,  %r4540},{%r4549,  %r4550},{%f5273, %f5274, %f5275, %f5276};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5345,  %f5346,  %f5347,  %f5348},{%r4537,  %r4538,  %r4539,  %r4540},{%r4552,  %r4553},{%f5281, %f5282, %f5283, %f5284};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5353,  %f5354,  %f5355,  %f5356},{%r4542,  %r4543,  %r4544,  %r4545},{%r4552,  %r4553},{%f5289, %f5290, %f5291, %f5292};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5361,  %f5362,  %f5363,  %f5364},{%r4542,  %r4543,  %r4544,  %r4545},{%r4554,  %r4555},{%f5297, %f5298, %f5299, %f5300};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5369,  %f5370,  %f5371,  %f5372},{%r4537,  %r4538,  %r4539,  %r4540},{%r4554,  %r4555},{%f5305, %f5306, %f5307, %f5308};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r4605, %r4606, %r4607, %r4608}, [%r5425];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r4610, %r4611, %r4612, %r4613}, [%r5430];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r4615, %r4616, %r4617, %r4618}, [%r4619];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r4620, %r4621, %r4622, %r4623}, [%r4624];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5377,  %f5378,  %f5379,  %f5380},{%r4605,  %r4606,  %r4607,  %r4608},{%r4615,  %r4616},{%f5313, %f5314, %f5315, %f5316};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5385,  %f5386,  %f5387,  %f5388},{%r4610,  %r4611,  %r4612,  %r4613},{%r4615,  %r4616},{%f5321, %f5322, %f5323, %f5324};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5393,  %f5394,  %f5395,  %f5396},{%r4610,  %r4611,  %r4612,  %r4613},{%r4617,  %r4618},{%f5329, %f5330, %f5331, %f5332};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5401,  %f5402,  %f5403,  %f5404},{%r4605,  %r4606,  %r4607,  %r4608},{%r4617,  %r4618},{%f5337, %f5338, %f5339, %f5340};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5409,  %f5410,  %f5411,  %f5412},{%r4605,  %r4606,  %r4607,  %r4608},{%r4620,  %r4621},{%f5345, %f5346, %f5347, %f5348};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5417,  %f5418,  %f5419,  %f5420},{%r4610,  %r4611,  %r4612,  %r4613},{%r4620,  %r4621},{%f5353, %f5354, %f5355, %f5356};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5425,  %f5426,  %f5427,  %f5428},{%r4610,  %r4611,  %r4612,  %r4613},{%r4622,  %r4623},{%f5361, %f5362, %f5363, %f5364};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5433,  %f5434,  %f5435,  %f5436},{%r4605,  %r4606,  %r4607,  %r4608},{%r4622,  %r4623},{%f5369, %f5370, %f5371, %f5372};

	// end inline asm
	bar.sync 	0;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1089, %f4513;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f5442, %rs1089;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1092, %f4514;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f5445, %rs1092;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1094, %f5445;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1091, %f5442;}

	// end inline asm
	st.shared.v2.u16 	[%r6272+24576], {%rs1091, %rs1094};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1095, %f4515;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f5448, %rs1095;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1098, %f4516;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f5451, %rs1098;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1100, %f5451;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1097, %f5448;}

	// end inline asm
	st.shared.v2.u16 	[%r6272+25600], {%rs1097, %rs1100};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1101, %f4521;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f5454, %rs1101;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1104, %f4522;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f5457, %rs1104;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1106, %f5457;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1103, %f5454;}

	// end inline asm
	st.shared.v2.u16 	[%r6272+28672], {%rs1103, %rs1106};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1107, %f4523;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f5460, %rs1107;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1110, %f4524;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f5463, %rs1110;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1112, %f5463;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1109, %f5460;}

	// end inline asm
	st.shared.v2.u16 	[%r6272+29696], {%rs1109, %rs1112};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1113, %f4537;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f5466, %rs1113;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1116, %f4538;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f5469, %rs1116;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1118, %f5469;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1115, %f5466;}

	// end inline asm
	st.shared.v2.u16 	[%r6276+24576], {%rs1115, %rs1118};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1119, %f4539;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f5472, %rs1119;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1122, %f4540;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f5475, %rs1122;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1124, %f5475;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1121, %f5472;}

	// end inline asm
	st.shared.v2.u16 	[%r6276+25600], {%rs1121, %rs1124};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1125, %f4529;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f5478, %rs1125;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1128, %f4530;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f5481, %rs1128;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1130, %f5481;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1127, %f5478;}

	// end inline asm
	st.shared.v2.u16 	[%r6276+28672], {%rs1127, %rs1130};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1131, %f4531;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f5484, %rs1131;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1134, %f4532;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f5487, %rs1134;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1136, %f5487;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1133, %f5484;}

	// end inline asm
	st.shared.v2.u16 	[%r6276+29696], {%rs1133, %rs1136};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1137, %f4545;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f5490, %rs1137;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1140, %f4546;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f5493, %rs1140;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1142, %f5493;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1139, %f5490;}

	// end inline asm
	st.shared.v2.u16 	[%r6282+24576], {%rs1139, %rs1142};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1143, %f4547;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f5496, %rs1143;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1146, %f4548;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f5499, %rs1146;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1148, %f5499;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1145, %f5496;}

	// end inline asm
	st.shared.v2.u16 	[%r6282+25600], {%rs1145, %rs1148};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1149, %f4553;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f5502, %rs1149;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1152, %f4554;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f5505, %rs1152;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1154, %f5505;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1151, %f5502;}

	// end inline asm
	st.shared.v2.u16 	[%r6282+28672], {%rs1151, %rs1154};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1155, %f4555;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f5508, %rs1155;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1158, %f4556;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f5511, %rs1158;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1160, %f5511;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1157, %f5508;}

	// end inline asm
	st.shared.v2.u16 	[%r6282+29696], {%rs1157, %rs1160};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1161, %f4569;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f5514, %rs1161;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1164, %f4570;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f5517, %rs1164;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1166, %f5517;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1163, %f5514;}

	// end inline asm
	st.shared.v2.u16 	[%r6285+24576], {%rs1163, %rs1166};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1167, %f4571;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f5520, %rs1167;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1170, %f4572;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f5523, %rs1170;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1172, %f5523;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1169, %f5520;}

	// end inline asm
	st.shared.v2.u16 	[%r6285+25600], {%rs1169, %rs1172};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1173, %f4561;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f5526, %rs1173;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1176, %f4562;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f5529, %rs1176;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1178, %f5529;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1175, %f5526;}

	// end inline asm
	st.shared.v2.u16 	[%r6285+28672], {%rs1175, %rs1178};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1179, %f4563;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f5532, %rs1179;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1182, %f4564;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f5535, %rs1182;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1184, %f5535;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1181, %f5532;}

	// end inline asm
	st.shared.v2.u16 	[%r6285+29696], {%rs1181, %rs1184};
	// begin inline asm
	cp.async.wait_group 2;

	// end inline asm
	bar.sync 	0;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r4673, %r4674, %r4675, %r4676}, [%r4677];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r4678, %r4679, %r4680, %r4681}, [%r4682];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r4683, %r4684, %r4685, %r4686}, [%r4687];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r4688, %r4689, %r4690, %r4691}, [%r4692];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5537,  %f5538,  %f5539,  %f5540},{%r4673,  %r4674,  %r4675,  %r4676},{%r4683,  %r4684},{%f5377, %f5378, %f5379, %f5380};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5545,  %f5546,  %f5547,  %f5548},{%r4678,  %r4679,  %r4680,  %r4681},{%r4683,  %r4684},{%f5385, %f5386, %f5387, %f5388};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5553,  %f5554,  %f5555,  %f5556},{%r4678,  %r4679,  %r4680,  %r4681},{%r4685,  %r4686},{%f5393, %f5394, %f5395, %f5396};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5561,  %f5562,  %f5563,  %f5564},{%r4673,  %r4674,  %r4675,  %r4676},{%r4685,  %r4686},{%f5401, %f5402, %f5403, %f5404};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5569,  %f5570,  %f5571,  %f5572},{%r4673,  %r4674,  %r4675,  %r4676},{%r4688,  %r4689},{%f5409, %f5410, %f5411, %f5412};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5577,  %f5578,  %f5579,  %f5580},{%r4678,  %r4679,  %r4680,  %r4681},{%r4688,  %r4689},{%f5417, %f5418, %f5419, %f5420};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5585,  %f5586,  %f5587,  %f5588},{%r4678,  %r4679,  %r4680,  %r4681},{%r4690,  %r4691},{%f5425, %f5426, %f5427, %f5428};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5593,  %f5594,  %f5595,  %f5596},{%r4673,  %r4674,  %r4675,  %r4676},{%r4690,  %r4691},{%f5433, %f5434, %f5435, %f5436};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r4741, %r4742, %r4743, %r4744}, [%r4745];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r4746, %r4747, %r4748, %r4749}, [%r4750];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r4751, %r4752, %r4753, %r4754}, [%r4755];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r4756, %r4757, %r4758, %r4759}, [%r4760];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5601,  %f5602,  %f5603,  %f5604},{%r4741,  %r4742,  %r4743,  %r4744},{%r4751,  %r4752},{%f5537, %f5538, %f5539, %f5540};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5609,  %f5610,  %f5611,  %f5612},{%r4746,  %r4747,  %r4748,  %r4749},{%r4751,  %r4752},{%f5545, %f5546, %f5547, %f5548};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5617,  %f5618,  %f5619,  %f5620},{%r4746,  %r4747,  %r4748,  %r4749},{%r4753,  %r4754},{%f5553, %f5554, %f5555, %f5556};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5625,  %f5626,  %f5627,  %f5628},{%r4741,  %r4742,  %r4743,  %r4744},{%r4753,  %r4754},{%f5561, %f5562, %f5563, %f5564};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5633,  %f5634,  %f5635,  %f5636},{%r4741,  %r4742,  %r4743,  %r4744},{%r4756,  %r4757},{%f5569, %f5570, %f5571, %f5572};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5641,  %f5642,  %f5643,  %f5644},{%r4746,  %r4747,  %r4748,  %r4749},{%r4756,  %r4757},{%f5577, %f5578, %f5579, %f5580};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5649,  %f5650,  %f5651,  %f5652},{%r4746,  %r4747,  %r4748,  %r4749},{%r4758,  %r4759},{%f5585, %f5586, %f5587, %f5588};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5657,  %f5658,  %f5659,  %f5660},{%r4741,  %r4742,  %r4743,  %r4744},{%r4758,  %r4759},{%f5593, %f5594, %f5595, %f5596};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r4809, %r4810, %r4811, %r4812}, [%r4813];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r4814, %r4815, %r4816, %r4817}, [%r4818];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r4819, %r4820, %r4821, %r4822}, [%r4823];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r4824, %r4825, %r4826, %r4827}, [%r4828];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5665,  %f5666,  %f5667,  %f5668},{%r4809,  %r4810,  %r4811,  %r4812},{%r4819,  %r4820},{%f5601, %f5602, %f5603, %f5604};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5673,  %f5674,  %f5675,  %f5676},{%r4814,  %r4815,  %r4816,  %r4817},{%r4819,  %r4820},{%f5609, %f5610, %f5611, %f5612};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5681,  %f5682,  %f5683,  %f5684},{%r4814,  %r4815,  %r4816,  %r4817},{%r4821,  %r4822},{%f5617, %f5618, %f5619, %f5620};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5689,  %f5690,  %f5691,  %f5692},{%r4809,  %r4810,  %r4811,  %r4812},{%r4821,  %r4822},{%f5625, %f5626, %f5627, %f5628};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5697,  %f5698,  %f5699,  %f5700},{%r4809,  %r4810,  %r4811,  %r4812},{%r4824,  %r4825},{%f5633, %f5634, %f5635, %f5636};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5705,  %f5706,  %f5707,  %f5708},{%r4814,  %r4815,  %r4816,  %r4817},{%r4824,  %r4825},{%f5641, %f5642, %f5643, %f5644};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5713,  %f5714,  %f5715,  %f5716},{%r4814,  %r4815,  %r4816,  %r4817},{%r4826,  %r4827},{%f5649, %f5650, %f5651, %f5652};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5721,  %f5722,  %f5723,  %f5724},{%r4809,  %r4810,  %r4811,  %r4812},{%r4826,  %r4827},{%f5657, %f5658, %f5659, %f5660};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r4877, %r4878, %r4879, %r4880}, [%r4881];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r4882, %r4883, %r4884, %r4885}, [%r4886];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r4887, %r4888, %r4889, %r4890}, [%r4891];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r4892, %r4893, %r4894, %r4895}, [%r4896];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5729,  %f5730,  %f5731,  %f5732},{%r4877,  %r4878,  %r4879,  %r4880},{%r4887,  %r4888},{%f5665, %f5666, %f5667, %f5668};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5737,  %f5738,  %f5739,  %f5740},{%r4882,  %r4883,  %r4884,  %r4885},{%r4887,  %r4888},{%f5673, %f5674, %f5675, %f5676};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5745,  %f5746,  %f5747,  %f5748},{%r4882,  %r4883,  %r4884,  %r4885},{%r4889,  %r4890},{%f5681, %f5682, %f5683, %f5684};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5753,  %f5754,  %f5755,  %f5756},{%r4877,  %r4878,  %r4879,  %r4880},{%r4889,  %r4890},{%f5689, %f5690, %f5691, %f5692};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5761,  %f5762,  %f5763,  %f5764},{%r4877,  %r4878,  %r4879,  %r4880},{%r4892,  %r4893},{%f5697, %f5698, %f5699, %f5700};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5769,  %f5770,  %f5771,  %f5772},{%r4882,  %r4883,  %r4884,  %r4885},{%r4892,  %r4893},{%f5705, %f5706, %f5707, %f5708};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5777,  %f5778,  %f5779,  %f5780},{%r4882,  %r4883,  %r4884,  %r4885},{%r4894,  %r4895},{%f5713, %f5714, %f5715, %f5716};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5785,  %f5786,  %f5787,  %f5788},{%r4877,  %r4878,  %r4879,  %r4880},{%r4894,  %r4895},{%f5721, %f5722, %f5723, %f5724};

	// end inline asm
	// begin inline asm
	cp.async.wait_all;

	// end inline asm
	bar.sync 	0;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r4945, %r4946, %r4947, %r4948}, [%r5493];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r4950, %r4951, %r4952, %r4953}, [%r5498];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r4955, %r4956, %r4957, %r4958}, [%r4959];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r4960, %r4961, %r4962, %r4963}, [%r4964];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5793,  %f5794,  %f5795,  %f5796},{%r4945,  %r4946,  %r4947,  %r4948},{%r4955,  %r4956},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5801,  %f5802,  %f5803,  %f5804},{%r4950,  %r4951,  %r4952,  %r4953},{%r4955,  %r4956},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5809,  %f5810,  %f5811,  %f5812},{%r4950,  %r4951,  %r4952,  %r4953},{%r4957,  %r4958},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5817,  %f5818,  %f5819,  %f5820},{%r4945,  %r4946,  %r4947,  %r4948},{%r4957,  %r4958},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5825,  %f5826,  %f5827,  %f5828},{%r4945,  %r4946,  %r4947,  %r4948},{%r4960,  %r4961},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5833,  %f5834,  %f5835,  %f5836},{%r4950,  %r4951,  %r4952,  %r4953},{%r4960,  %r4961},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5841,  %f5842,  %f5843,  %f5844},{%r4950,  %r4951,  %r4952,  %r4953},{%r4962,  %r4963},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5849,  %f5850,  %f5851,  %f5852},{%r4945,  %r4946,  %r4947,  %r4948},{%r4962,  %r4963},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r5013, %r5014, %r5015, %r5016}, [%r5561];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r5018, %r5019, %r5020, %r5021}, [%r5566];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r5023, %r5024, %r5025, %r5026}, [%r5027];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r5028, %r5029, %r5030, %r5031}, [%r5032];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5857,  %f5858,  %f5859,  %f5860},{%r5013,  %r5014,  %r5015,  %r5016},{%r5023,  %r5024},{%f5793, %f5794, %f5795, %f5796};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5865,  %f5866,  %f5867,  %f5868},{%r5018,  %r5019,  %r5020,  %r5021},{%r5023,  %r5024},{%f5801, %f5802, %f5803, %f5804};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5873,  %f5874,  %f5875,  %f5876},{%r5018,  %r5019,  %r5020,  %r5021},{%r5025,  %r5026},{%f5809, %f5810, %f5811, %f5812};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5881,  %f5882,  %f5883,  %f5884},{%r5013,  %r5014,  %r5015,  %r5016},{%r5025,  %r5026},{%f5817, %f5818, %f5819, %f5820};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5889,  %f5890,  %f5891,  %f5892},{%r5013,  %r5014,  %r5015,  %r5016},{%r5028,  %r5029},{%f5825, %f5826, %f5827, %f5828};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5897,  %f5898,  %f5899,  %f5900},{%r5018,  %r5019,  %r5020,  %r5021},{%r5028,  %r5029},{%f5833, %f5834, %f5835, %f5836};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5905,  %f5906,  %f5907,  %f5908},{%r5018,  %r5019,  %r5020,  %r5021},{%r5030,  %r5031},{%f5841, %f5842, %f5843, %f5844};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5913,  %f5914,  %f5915,  %f5916},{%r5013,  %r5014,  %r5015,  %r5016},{%r5030,  %r5031},{%f5849, %f5850, %f5851, %f5852};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r5081, %r5082, %r5083, %r5084}, [%r5629];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r5086, %r5087, %r5088, %r5089}, [%r5634];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r5091, %r5092, %r5093, %r5094}, [%r5095];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r5096, %r5097, %r5098, %r5099}, [%r5100];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5921,  %f5922,  %f5923,  %f5924},{%r5081,  %r5082,  %r5083,  %r5084},{%r5091,  %r5092},{%f5857, %f5858, %f5859, %f5860};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5929,  %f5930,  %f5931,  %f5932},{%r5086,  %r5087,  %r5088,  %r5089},{%r5091,  %r5092},{%f5865, %f5866, %f5867, %f5868};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5937,  %f5938,  %f5939,  %f5940},{%r5086,  %r5087,  %r5088,  %r5089},{%r5093,  %r5094},{%f5873, %f5874, %f5875, %f5876};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5945,  %f5946,  %f5947,  %f5948},{%r5081,  %r5082,  %r5083,  %r5084},{%r5093,  %r5094},{%f5881, %f5882, %f5883, %f5884};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5953,  %f5954,  %f5955,  %f5956},{%r5081,  %r5082,  %r5083,  %r5084},{%r5096,  %r5097},{%f5889, %f5890, %f5891, %f5892};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5961,  %f5962,  %f5963,  %f5964},{%r5086,  %r5087,  %r5088,  %r5089},{%r5096,  %r5097},{%f5897, %f5898, %f5899, %f5900};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5969,  %f5970,  %f5971,  %f5972},{%r5086,  %r5087,  %r5088,  %r5089},{%r5098,  %r5099},{%f5905, %f5906, %f5907, %f5908};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5977,  %f5978,  %f5979,  %f5980},{%r5081,  %r5082,  %r5083,  %r5084},{%r5098,  %r5099},{%f5913, %f5914, %f5915, %f5916};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r5149, %r5150, %r5151, %r5152}, [%r5697];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r5154, %r5155, %r5156, %r5157}, [%r5702];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r5159, %r5160, %r5161, %r5162}, [%r5163];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r5164, %r5165, %r5166, %r5167}, [%r5168];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5985,  %f5986,  %f5987,  %f5988},{%r5149,  %r5150,  %r5151,  %r5152},{%r5159,  %r5160},{%f5921, %f5922, %f5923, %f5924};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f5993,  %f5994,  %f5995,  %f5996},{%r5154,  %r5155,  %r5156,  %r5157},{%r5159,  %r5160},{%f5929, %f5930, %f5931, %f5932};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6001,  %f6002,  %f6003,  %f6004},{%r5154,  %r5155,  %r5156,  %r5157},{%r5161,  %r5162},{%f5937, %f5938, %f5939, %f5940};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6009,  %f6010,  %f6011,  %f6012},{%r5149,  %r5150,  %r5151,  %r5152},{%r5161,  %r5162},{%f5945, %f5946, %f5947, %f5948};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6017,  %f6018,  %f6019,  %f6020},{%r5149,  %r5150,  %r5151,  %r5152},{%r5164,  %r5165},{%f5953, %f5954, %f5955, %f5956};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6025,  %f6026,  %f6027,  %f6028},{%r5154,  %r5155,  %r5156,  %r5157},{%r5164,  %r5165},{%f5961, %f5962, %f5963, %f5964};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6033,  %f6034,  %f6035,  %f6036},{%r5154,  %r5155,  %r5156,  %r5157},{%r5166,  %r5167},{%f5969, %f5970, %f5971, %f5972};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6041,  %f6042,  %f6043,  %f6044},{%r5149,  %r5150,  %r5151,  %r5152},{%r5166,  %r5167},{%f5977, %f5978, %f5979, %f5980};

	// end inline asm
	bar.sync 	0;
	selp.f32 	%f6049, 0f00000000, %f5985, %p6;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1185, %f6049;}

	// end inline asm
	st.shared.u16 	[%r6165+8192], %rs1185;
	selp.f32 	%f6050, 0f00000000, %f5986, %p37;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1186, %f6050;}

	// end inline asm
	st.shared.u16 	[%r6177+8194], %rs1186;
	selp.f32 	%f6051, 0f00000000, %f5987, %p8;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1187, %f6051;}

	// end inline asm
	st.shared.u16 	[%r6165+9216], %rs1187;
	selp.f32 	%f6052, 0f00000000, %f5988, %p38;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1188, %f6052;}

	// end inline asm
	st.shared.u16 	[%r6177+9218], %rs1188;
	selp.f32 	%f6053, 0f00000000, %f5993, %p10;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1189, %f6053;}

	// end inline asm
	st.shared.u16 	[%r6165+12288], %rs1189;
	selp.f32 	%f6054, 0f00000000, %f5994, %p39;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1190, %f6054;}

	// end inline asm
	st.shared.u16 	[%r6177+12290], %rs1190;
	selp.f32 	%f6055, 0f00000000, %f5995, %p12;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1191, %f6055;}

	// end inline asm
	st.shared.u16 	[%r6165+13312], %rs1191;
	selp.f32 	%f6056, 0f00000000, %f5996, %p40;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1192, %f6056;}

	// end inline asm
	st.shared.u16 	[%r6177+13314], %rs1192;
	selp.f32 	%f6057, 0f00000000, %f6009, %p41;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1193, %f6057;}

	// end inline asm
	st.shared.u16 	[%r6193+8192], %rs1193;
	selp.f32 	%f6058, 0f00000000, %f6010, %p42;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1194, %f6058;}

	// end inline asm
	st.shared.u16 	[%r6205+8194], %rs1194;
	selp.f32 	%f6059, 0f00000000, %f6011, %p43;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1195, %f6059;}

	// end inline asm
	st.shared.u16 	[%r6193+9216], %rs1195;
	selp.f32 	%f6060, 0f00000000, %f6012, %p44;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1196, %f6060;}

	// end inline asm
	st.shared.u16 	[%r6205+9218], %rs1196;
	selp.f32 	%f6061, 0f00000000, %f6001, %p45;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1197, %f6061;}

	// end inline asm
	st.shared.u16 	[%r6193+12288], %rs1197;
	selp.f32 	%f6062, 0f00000000, %f6002, %p46;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1198, %f6062;}

	// end inline asm
	st.shared.u16 	[%r6205+12290], %rs1198;
	selp.f32 	%f6063, 0f00000000, %f6003, %p47;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1199, %f6063;}

	// end inline asm
	st.shared.u16 	[%r6193+13312], %rs1199;
	selp.f32 	%f6064, 0f00000000, %f6004, %p48;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1200, %f6064;}

	// end inline asm
	st.shared.u16 	[%r6205+13314], %rs1200;
	selp.f32 	%f6065, 0f00000000, %f6017, %p49;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1201, %f6065;}

	// end inline asm
	st.shared.u16 	[%r6217+8192], %rs1201;
	selp.f32 	%f6066, 0f00000000, %f6018, %p50;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1202, %f6066;}

	// end inline asm
	st.shared.u16 	[%r6229+8194], %rs1202;
	selp.f32 	%f6067, 0f00000000, %f6019, %p51;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1203, %f6067;}

	// end inline asm
	st.shared.u16 	[%r6217+9216], %rs1203;
	selp.f32 	%f6068, 0f00000000, %f6020, %p52;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1204, %f6068;}

	// end inline asm
	st.shared.u16 	[%r6229+9218], %rs1204;
	selp.f32 	%f6069, 0f00000000, %f6025, %p53;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1205, %f6069;}

	// end inline asm
	st.shared.u16 	[%r6217+12288], %rs1205;
	selp.f32 	%f6070, 0f00000000, %f6026, %p54;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1206, %f6070;}

	// end inline asm
	st.shared.u16 	[%r6229+12290], %rs1206;
	selp.f32 	%f6071, 0f00000000, %f6027, %p55;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1207, %f6071;}

	// end inline asm
	st.shared.u16 	[%r6217+13312], %rs1207;
	selp.f32 	%f6072, 0f00000000, %f6028, %p56;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1208, %f6072;}

	// end inline asm
	st.shared.u16 	[%r6229+13314], %rs1208;
	selp.f32 	%f6073, 0f00000000, %f6041, %p57;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1209, %f6073;}

	// end inline asm
	st.shared.u16 	[%r6241+8192], %rs1209;
	selp.f32 	%f6074, 0f00000000, %f6042, %p58;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1210, %f6074;}

	// end inline asm
	st.shared.u16 	[%r6253+8194], %rs1210;
	selp.f32 	%f6075, 0f00000000, %f6043, %p59;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1211, %f6075;}

	// end inline asm
	st.shared.u16 	[%r6241+9216], %rs1211;
	selp.f32 	%f6076, 0f00000000, %f6044, %p60;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1212, %f6076;}

	// end inline asm
	st.shared.u16 	[%r6253+9218], %rs1212;
	selp.f32 	%f6077, 0f00000000, %f6033, %p61;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1213, %f6077;}

	// end inline asm
	st.shared.u16 	[%r6241+12288], %rs1213;
	selp.f32 	%f6078, 0f00000000, %f6034, %p62;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1214, %f6078;}

	// end inline asm
	st.shared.u16 	[%r6253+12290], %rs1214;
	selp.f32 	%f6079, 0f00000000, %f6035, %p63;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1215, %f6079;}

	// end inline asm
	st.shared.u16 	[%r6241+13312], %rs1215;
	selp.f32 	%f6080, 0f00000000, %f6036, %p64;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1216, %f6080;}

	// end inline asm
	st.shared.u16 	[%r6253+13314], %rs1216;
	// begin inline asm
	cp.async.wait_all;

	// end inline asm
	bar.sync 	0;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r5217, %r5218, %r5219, %r5220}, [%r289];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r5222, %r5223, %r5224, %r5225}, [%r294];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r5227, %r5228, %r5229, %r5230}, [%r5775];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r5232, %r5233, %r5234, %r5235}, [%r5780];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6081,  %f6082,  %f6083,  %f6084},{%r5217,  %r5218,  %r5219,  %r5220},{%r5227,  %r5228},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6089,  %f6090,  %f6091,  %f6092},{%r5222,  %r5223,  %r5224,  %r5225},{%r5227,  %r5228},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6097,  %f6098,  %f6099,  %f6100},{%r5222,  %r5223,  %r5224,  %r5225},{%r5229,  %r5230},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6105,  %f6106,  %f6107,  %f6108},{%r5217,  %r5218,  %r5219,  %r5220},{%r5229,  %r5230},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6113,  %f6114,  %f6115,  %f6116},{%r5217,  %r5218,  %r5219,  %r5220},{%r5232,  %r5233},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6121,  %f6122,  %f6123,  %f6124},{%r5222,  %r5223,  %r5224,  %r5225},{%r5232,  %r5233},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6129,  %f6130,  %f6131,  %f6132},{%r5222,  %r5223,  %r5224,  %r5225},{%r5234,  %r5235},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6137,  %f6138,  %f6139,  %f6140},{%r5217,  %r5218,  %r5219,  %r5220},{%r5234,  %r5235},{%f6144, %f6144, %f6144, %f6144};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r5285, %r5286, %r5287, %r5288}, [%r5289];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r5290, %r5291, %r5292, %r5293}, [%r5294];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r5295, %r5296, %r5297, %r5298}, [%r5843];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r5300, %r5301, %r5302, %r5303}, [%r5848];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6145,  %f6146,  %f6147,  %f6148},{%r5285,  %r5286,  %r5287,  %r5288},{%r5295,  %r5296},{%f6081, %f6082, %f6083, %f6084};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6153,  %f6154,  %f6155,  %f6156},{%r5290,  %r5291,  %r5292,  %r5293},{%r5295,  %r5296},{%f6089, %f6090, %f6091, %f6092};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6161,  %f6162,  %f6163,  %f6164},{%r5290,  %r5291,  %r5292,  %r5293},{%r5297,  %r5298},{%f6097, %f6098, %f6099, %f6100};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6169,  %f6170,  %f6171,  %f6172},{%r5285,  %r5286,  %r5287,  %r5288},{%r5297,  %r5298},{%f6105, %f6106, %f6107, %f6108};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6177,  %f6178,  %f6179,  %f6180},{%r5285,  %r5286,  %r5287,  %r5288},{%r5300,  %r5301},{%f6113, %f6114, %f6115, %f6116};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6185,  %f6186,  %f6187,  %f6188},{%r5290,  %r5291,  %r5292,  %r5293},{%r5300,  %r5301},{%f6121, %f6122, %f6123, %f6124};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6193,  %f6194,  %f6195,  %f6196},{%r5290,  %r5291,  %r5292,  %r5293},{%r5302,  %r5303},{%f6129, %f6130, %f6131, %f6132};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6201,  %f6202,  %f6203,  %f6204},{%r5285,  %r5286,  %r5287,  %r5288},{%r5302,  %r5303},{%f6137, %f6138, %f6139, %f6140};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r5353, %r5354, %r5355, %r5356}, [%r5357];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r5358, %r5359, %r5360, %r5361}, [%r5362];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r5363, %r5364, %r5365, %r5366}, [%r5911];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r5368, %r5369, %r5370, %r5371}, [%r5916];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6209,  %f6210,  %f6211,  %f6212},{%r5353,  %r5354,  %r5355,  %r5356},{%r5363,  %r5364},{%f6145, %f6146, %f6147, %f6148};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6217,  %f6218,  %f6219,  %f6220},{%r5358,  %r5359,  %r5360,  %r5361},{%r5363,  %r5364},{%f6153, %f6154, %f6155, %f6156};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6225,  %f6226,  %f6227,  %f6228},{%r5358,  %r5359,  %r5360,  %r5361},{%r5365,  %r5366},{%f6161, %f6162, %f6163, %f6164};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6233,  %f6234,  %f6235,  %f6236},{%r5353,  %r5354,  %r5355,  %r5356},{%r5365,  %r5366},{%f6169, %f6170, %f6171, %f6172};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6241,  %f6242,  %f6243,  %f6244},{%r5353,  %r5354,  %r5355,  %r5356},{%r5368,  %r5369},{%f6177, %f6178, %f6179, %f6180};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6249,  %f6250,  %f6251,  %f6252},{%r5358,  %r5359,  %r5360,  %r5361},{%r5368,  %r5369},{%f6185, %f6186, %f6187, %f6188};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6257,  %f6258,  %f6259,  %f6260},{%r5358,  %r5359,  %r5360,  %r5361},{%r5370,  %r5371},{%f6193, %f6194, %f6195, %f6196};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6265,  %f6266,  %f6267,  %f6268},{%r5353,  %r5354,  %r5355,  %r5356},{%r5370,  %r5371},{%f6201, %f6202, %f6203, %f6204};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r5421, %r5422, %r5423, %r5424}, [%r5425];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r5426, %r5427, %r5428, %r5429}, [%r5430];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r5431, %r5432, %r5433, %r5434}, [%r5979];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r5436, %r5437, %r5438, %r5439}, [%r5984];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6273,  %f6274,  %f6275,  %f6276},{%r5421,  %r5422,  %r5423,  %r5424},{%r5431,  %r5432},{%f6209, %f6210, %f6211, %f6212};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6281,  %f6282,  %f6283,  %f6284},{%r5426,  %r5427,  %r5428,  %r5429},{%r5431,  %r5432},{%f6217, %f6218, %f6219, %f6220};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6289,  %f6290,  %f6291,  %f6292},{%r5426,  %r5427,  %r5428,  %r5429},{%r5433,  %r5434},{%f6225, %f6226, %f6227, %f6228};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6297,  %f6298,  %f6299,  %f6300},{%r5421,  %r5422,  %r5423,  %r5424},{%r5433,  %r5434},{%f6233, %f6234, %f6235, %f6236};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6305,  %f6306,  %f6307,  %f6308},{%r5421,  %r5422,  %r5423,  %r5424},{%r5436,  %r5437},{%f6241, %f6242, %f6243, %f6244};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6313,  %f6314,  %f6315,  %f6316},{%r5426,  %r5427,  %r5428,  %r5429},{%r5436,  %r5437},{%f6249, %f6250, %f6251, %f6252};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6321,  %f6322,  %f6323,  %f6324},{%r5426,  %r5427,  %r5428,  %r5429},{%r5438,  %r5439},{%f6257, %f6258, %f6259, %f6260};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6329,  %f6330,  %f6331,  %f6332},{%r5421,  %r5422,  %r5423,  %r5424},{%r5438,  %r5439},{%f6265, %f6266, %f6267, %f6268};

	// end inline asm
	// begin inline asm
	cp.async.wait_group 1;

	// end inline asm
	bar.sync 	0;
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r5489, %r5490, %r5491, %r5492}, [%r5493];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r5494, %r5495, %r5496, %r5497}, [%r5498];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r5499, %r5500, %r5501, %r5502}, [%r5503];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r5504, %r5505, %r5506, %r5507}, [%r5508];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6337,  %f6338,  %f6339,  %f6340},{%r5489,  %r5490,  %r5491,  %r5492},{%r5499,  %r5500},{%f6273, %f6274, %f6275, %f6276};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6345,  %f6346,  %f6347,  %f6348},{%r5494,  %r5495,  %r5496,  %r5497},{%r5499,  %r5500},{%f6281, %f6282, %f6283, %f6284};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6353,  %f6354,  %f6355,  %f6356},{%r5494,  %r5495,  %r5496,  %r5497},{%r5501,  %r5502},{%f6289, %f6290, %f6291, %f6292};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6361,  %f6362,  %f6363,  %f6364},{%r5489,  %r5490,  %r5491,  %r5492},{%r5501,  %r5502},{%f6297, %f6298, %f6299, %f6300};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6369,  %f6370,  %f6371,  %f6372},{%r5489,  %r5490,  %r5491,  %r5492},{%r5504,  %r5505},{%f6305, %f6306, %f6307, %f6308};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6377,  %f6378,  %f6379,  %f6380},{%r5494,  %r5495,  %r5496,  %r5497},{%r5504,  %r5505},{%f6313, %f6314, %f6315, %f6316};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6385,  %f6386,  %f6387,  %f6388},{%r5494,  %r5495,  %r5496,  %r5497},{%r5506,  %r5507},{%f6321, %f6322, %f6323, %f6324};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6393,  %f6394,  %f6395,  %f6396},{%r5489,  %r5490,  %r5491,  %r5492},{%r5506,  %r5507},{%f6329, %f6330, %f6331, %f6332};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r5557, %r5558, %r5559, %r5560}, [%r5561];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r5562, %r5563, %r5564, %r5565}, [%r5566];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r5567, %r5568, %r5569, %r5570}, [%r5571];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r5572, %r5573, %r5574, %r5575}, [%r5576];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6401,  %f6402,  %f6403,  %f6404},{%r5557,  %r5558,  %r5559,  %r5560},{%r5567,  %r5568},{%f6337, %f6338, %f6339, %f6340};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6409,  %f6410,  %f6411,  %f6412},{%r5562,  %r5563,  %r5564,  %r5565},{%r5567,  %r5568},{%f6345, %f6346, %f6347, %f6348};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6417,  %f6418,  %f6419,  %f6420},{%r5562,  %r5563,  %r5564,  %r5565},{%r5569,  %r5570},{%f6353, %f6354, %f6355, %f6356};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6425,  %f6426,  %f6427,  %f6428},{%r5557,  %r5558,  %r5559,  %r5560},{%r5569,  %r5570},{%f6361, %f6362, %f6363, %f6364};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6433,  %f6434,  %f6435,  %f6436},{%r5557,  %r5558,  %r5559,  %r5560},{%r5572,  %r5573},{%f6369, %f6370, %f6371, %f6372};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6441,  %f6442,  %f6443,  %f6444},{%r5562,  %r5563,  %r5564,  %r5565},{%r5572,  %r5573},{%f6377, %f6378, %f6379, %f6380};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6449,  %f6450,  %f6451,  %f6452},{%r5562,  %r5563,  %r5564,  %r5565},{%r5574,  %r5575},{%f6385, %f6386, %f6387, %f6388};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6457,  %f6458,  %f6459,  %f6460},{%r5557,  %r5558,  %r5559,  %r5560},{%r5574,  %r5575},{%f6393, %f6394, %f6395, %f6396};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r5625, %r5626, %r5627, %r5628}, [%r5629];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r5630, %r5631, %r5632, %r5633}, [%r5634];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r5635, %r5636, %r5637, %r5638}, [%r5639];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r5640, %r5641, %r5642, %r5643}, [%r5644];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6465,  %f6466,  %f6467,  %f6468},{%r5625,  %r5626,  %r5627,  %r5628},{%r5635,  %r5636},{%f6401, %f6402, %f6403, %f6404};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6473,  %f6474,  %f6475,  %f6476},{%r5630,  %r5631,  %r5632,  %r5633},{%r5635,  %r5636},{%f6409, %f6410, %f6411, %f6412};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6481,  %f6482,  %f6483,  %f6484},{%r5630,  %r5631,  %r5632,  %r5633},{%r5637,  %r5638},{%f6417, %f6418, %f6419, %f6420};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6489,  %f6490,  %f6491,  %f6492},{%r5625,  %r5626,  %r5627,  %r5628},{%r5637,  %r5638},{%f6425, %f6426, %f6427, %f6428};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6497,  %f6498,  %f6499,  %f6500},{%r5625,  %r5626,  %r5627,  %r5628},{%r5640,  %r5641},{%f6433, %f6434, %f6435, %f6436};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6505,  %f6506,  %f6507,  %f6508},{%r5630,  %r5631,  %r5632,  %r5633},{%r5640,  %r5641},{%f6441, %f6442, %f6443, %f6444};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6513,  %f6514,  %f6515,  %f6516},{%r5630,  %r5631,  %r5632,  %r5633},{%r5642,  %r5643},{%f6449, %f6450, %f6451, %f6452};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6521,  %f6522,  %f6523,  %f6524},{%r5625,  %r5626,  %r5627,  %r5628},{%r5642,  %r5643},{%f6457, %f6458, %f6459, %f6460};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r5693, %r5694, %r5695, %r5696}, [%r5697];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.m8n8.shared.b16 {%r5698, %r5699, %r5700, %r5701}, [%r5702];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r5703, %r5704, %r5705, %r5706}, [%r5707];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r5708, %r5709, %r5710, %r5711}, [%r5712];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6529,  %f6530,  %f6531,  %f6532},{%r5693,  %r5694,  %r5695,  %r5696},{%r5703,  %r5704},{%f6465, %f6466, %f6467, %f6468};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6537,  %f6538,  %f6539,  %f6540},{%r5698,  %r5699,  %r5700,  %r5701},{%r5703,  %r5704},{%f6473, %f6474, %f6475, %f6476};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6545,  %f6546,  %f6547,  %f6548},{%r5698,  %r5699,  %r5700,  %r5701},{%r5705,  %r5706},{%f6481, %f6482, %f6483, %f6484};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6553,  %f6554,  %f6555,  %f6556},{%r5693,  %r5694,  %r5695,  %r5696},{%r5705,  %r5706},{%f6489, %f6490, %f6491, %f6492};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6561,  %f6562,  %f6563,  %f6564},{%r5693,  %r5694,  %r5695,  %r5696},{%r5708,  %r5709},{%f6497, %f6498, %f6499, %f6500};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6569,  %f6570,  %f6571,  %f6572},{%r5698,  %r5699,  %r5700,  %r5701},{%r5708,  %r5709},{%f6505, %f6506, %f6507, %f6508};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6577,  %f6578,  %f6579,  %f6580},{%r5698,  %r5699,  %r5700,  %r5701},{%r5710,  %r5711},{%f6513, %f6514, %f6515, %f6516};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6585,  %f6586,  %f6587,  %f6588},{%r5693,  %r5694,  %r5695,  %r5696},{%r5710,  %r5711},{%f6521, %f6522, %f6523, %f6524};

	// end inline asm
	// begin inline asm
	cp.async.wait_all;

	// end inline asm
	bar.sync 	0;
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r5761, %r5762, %r5763, %r5764}, [%r5765];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r5766, %r5767, %r5768, %r5769}, [%r5770];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r5771, %r5772, %r5773, %r5774}, [%r5775];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r5776, %r5777, %r5778, %r5779}, [%r5780];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6593,  %f6594,  %f6595,  %f6596},{%r5761,  %r5762,  %r5763,  %r5764},{%r5771,  %r5772},{%f4513, %f4514, %f4515, %f4516};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6601,  %f6602,  %f6603,  %f6604},{%r5766,  %r5767,  %r5768,  %r5769},{%r5771,  %r5772},{%f4521, %f4522, %f4523, %f4524};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6609,  %f6610,  %f6611,  %f6612},{%r5766,  %r5767,  %r5768,  %r5769},{%r5773,  %r5774},{%f4529, %f4530, %f4531, %f4532};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6617,  %f6618,  %f6619,  %f6620},{%r5761,  %r5762,  %r5763,  %r5764},{%r5773,  %r5774},{%f4537, %f4538, %f4539, %f4540};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6625,  %f6626,  %f6627,  %f6628},{%r5761,  %r5762,  %r5763,  %r5764},{%r5776,  %r5777},{%f4545, %f4546, %f4547, %f4548};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6633,  %f6634,  %f6635,  %f6636},{%r5766,  %r5767,  %r5768,  %r5769},{%r5776,  %r5777},{%f4553, %f4554, %f4555, %f4556};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6641,  %f6642,  %f6643,  %f6644},{%r5766,  %r5767,  %r5768,  %r5769},{%r5778,  %r5779},{%f4561, %f4562, %f4563, %f4564};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6649,  %f6650,  %f6651,  %f6652},{%r5761,  %r5762,  %r5763,  %r5764},{%r5778,  %r5779},{%f4569, %f4570, %f4571, %f4572};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r5829, %r5830, %r5831, %r5832}, [%r5833];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r5834, %r5835, %r5836, %r5837}, [%r5838];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r5839, %r5840, %r5841, %r5842}, [%r5843];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r5844, %r5845, %r5846, %r5847}, [%r5848];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6657,  %f6658,  %f6659,  %f6660},{%r5829,  %r5830,  %r5831,  %r5832},{%r5839,  %r5840},{%f6593, %f6594, %f6595, %f6596};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6665,  %f6666,  %f6667,  %f6668},{%r5834,  %r5835,  %r5836,  %r5837},{%r5839,  %r5840},{%f6601, %f6602, %f6603, %f6604};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6673,  %f6674,  %f6675,  %f6676},{%r5834,  %r5835,  %r5836,  %r5837},{%r5841,  %r5842},{%f6609, %f6610, %f6611, %f6612};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6681,  %f6682,  %f6683,  %f6684},{%r5829,  %r5830,  %r5831,  %r5832},{%r5841,  %r5842},{%f6617, %f6618, %f6619, %f6620};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6689,  %f6690,  %f6691,  %f6692},{%r5829,  %r5830,  %r5831,  %r5832},{%r5844,  %r5845},{%f6625, %f6626, %f6627, %f6628};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6697,  %f6698,  %f6699,  %f6700},{%r5834,  %r5835,  %r5836,  %r5837},{%r5844,  %r5845},{%f6633, %f6634, %f6635, %f6636};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6705,  %f6706,  %f6707,  %f6708},{%r5834,  %r5835,  %r5836,  %r5837},{%r5846,  %r5847},{%f6641, %f6642, %f6643, %f6644};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6713,  %f6714,  %f6715,  %f6716},{%r5829,  %r5830,  %r5831,  %r5832},{%r5846,  %r5847},{%f6649, %f6650, %f6651, %f6652};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r5897, %r5898, %r5899, %r5900}, [%r5901];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r5902, %r5903, %r5904, %r5905}, [%r5906];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r5907, %r5908, %r5909, %r5910}, [%r5911];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r5912, %r5913, %r5914, %r5915}, [%r5916];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6721,  %f6722,  %f6723,  %f6724},{%r5897,  %r5898,  %r5899,  %r5900},{%r5907,  %r5908},{%f6657, %f6658, %f6659, %f6660};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6729,  %f6730,  %f6731,  %f6732},{%r5902,  %r5903,  %r5904,  %r5905},{%r5907,  %r5908},{%f6665, %f6666, %f6667, %f6668};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6737,  %f6738,  %f6739,  %f6740},{%r5902,  %r5903,  %r5904,  %r5905},{%r5909,  %r5910},{%f6673, %f6674, %f6675, %f6676};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6745,  %f6746,  %f6747,  %f6748},{%r5897,  %r5898,  %r5899,  %r5900},{%r5909,  %r5910},{%f6681, %f6682, %f6683, %f6684};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6753,  %f6754,  %f6755,  %f6756},{%r5897,  %r5898,  %r5899,  %r5900},{%r5912,  %r5913},{%f6689, %f6690, %f6691, %f6692};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6761,  %f6762,  %f6763,  %f6764},{%r5902,  %r5903,  %r5904,  %r5905},{%r5912,  %r5913},{%f6697, %f6698, %f6699, %f6700};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6769,  %f6770,  %f6771,  %f6772},{%r5902,  %r5903,  %r5904,  %r5905},{%r5914,  %r5915},{%f6705, %f6706, %f6707, %f6708};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6777,  %f6778,  %f6779,  %f6780},{%r5897,  %r5898,  %r5899,  %r5900},{%r5914,  %r5915},{%f6713, %f6714, %f6715, %f6716};

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r5965, %r5966, %r5967, %r5968}, [%r5969];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r5970, %r5971, %r5972, %r5973}, [%r5974];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r5975, %r5976, %r5977, %r5978}, [%r5979];

	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.x4.trans.m8n8.shared.b16 {%r5980, %r5981, %r5982, %r5983}, [%r5984];

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6785,  %f6786,  %f6787,  %f6788},{%r5965,  %r5966,  %r5967,  %r5968},{%r5975,  %r5976},{%f6721, %f6722, %f6723, %f6724};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6793,  %f6794,  %f6795,  %f6796},{%r5970,  %r5971,  %r5972,  %r5973},{%r5975,  %r5976},{%f6729, %f6730, %f6731, %f6732};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6801,  %f6802,  %f6803,  %f6804},{%r5970,  %r5971,  %r5972,  %r5973},{%r5977,  %r5978},{%f6737, %f6738, %f6739, %f6740};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6809,  %f6810,  %f6811,  %f6812},{%r5965,  %r5966,  %r5967,  %r5968},{%r5977,  %r5978},{%f6745, %f6746, %f6747, %f6748};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6817,  %f6818,  %f6819,  %f6820},{%r5965,  %r5966,  %r5967,  %r5968},{%r5980,  %r5981},{%f6753, %f6754, %f6755, %f6756};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6825,  %f6826,  %f6827,  %f6828},{%r5970,  %r5971,  %r5972,  %r5973},{%r5980,  %r5981},{%f6761, %f6762, %f6763, %f6764};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6833,  %f6834,  %f6835,  %f6836},{%r5970,  %r5971,  %r5972,  %r5973},{%r5982,  %r5983},{%f6769, %f6770, %f6771, %f6772};

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 {%f6841,  %f6842,  %f6843,  %f6844},{%r5965,  %r5966,  %r5967,  %r5968},{%r5982,  %r5983},{%f6777, %f6778, %f6779, %f6780};

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1217, %f5729;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f6850, %rs1217;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1220, %f5730;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f6853, %rs1220;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1222, %f6853;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1219, %f6850;}

	// end inline asm
	st.global.v2.u16 	[%rd71], {%rs1219, %rs1222};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1223, %f5731;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f6856, %rs1223;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1226, %f5732;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f6859, %rs1226;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1228, %f6859;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1225, %f6856;}

	// end inline asm
	st.global.v2.u16 	[%rd71+4096], {%rs1225, %rs1228};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1229, %f5737;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f6862, %rs1229;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1232, %f5738;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f6865, %rs1232;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1234, %f6865;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1231, %f6862;}

	// end inline asm
	st.global.v2.u16 	[%rd71+16384], {%rs1231, %rs1234};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1235, %f5739;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f6868, %rs1235;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1238, %f5740;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f6871, %rs1238;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1240, %f6871;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1237, %f6868;}

	// end inline asm
	st.global.v2.u16 	[%rd71+20480], {%rs1237, %rs1240};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1241, %f5753;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f6874, %rs1241;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1244, %f5754;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f6877, %rs1244;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1246, %f6877;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1243, %f6874;}

	// end inline asm
	st.global.v2.u16 	[%rd71+32], {%rs1243, %rs1246};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1247, %f5755;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f6880, %rs1247;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1250, %f5756;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f6883, %rs1250;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1252, %f6883;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1249, %f6880;}

	// end inline asm
	st.global.v2.u16 	[%rd71+4128], {%rs1249, %rs1252};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1253, %f5745;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f6886, %rs1253;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1256, %f5746;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f6889, %rs1256;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1258, %f6889;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1255, %f6886;}

	// end inline asm
	st.global.v2.u16 	[%rd71+16416], {%rs1255, %rs1258};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1259, %f5747;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f6892, %rs1259;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1262, %f5748;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f6895, %rs1262;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1264, %f6895;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1261, %f6892;}

	// end inline asm
	st.global.v2.u16 	[%rd71+20512], {%rs1261, %rs1264};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1265, %f5761;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f6898, %rs1265;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1268, %f5762;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f6901, %rs1268;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1270, %f6901;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1267, %f6898;}

	// end inline asm
	st.global.v2.u16 	[%rd71+64], {%rs1267, %rs1270};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1271, %f5763;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f6904, %rs1271;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1274, %f5764;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f6907, %rs1274;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1276, %f6907;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1273, %f6904;}

	// end inline asm
	st.global.v2.u16 	[%rd71+4160], {%rs1273, %rs1276};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1277, %f5769;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f6910, %rs1277;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1280, %f5770;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f6913, %rs1280;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1282, %f6913;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1279, %f6910;}

	// end inline asm
	st.global.v2.u16 	[%rd71+16448], {%rs1279, %rs1282};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1283, %f5771;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f6916, %rs1283;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1286, %f5772;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f6919, %rs1286;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1288, %f6919;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1285, %f6916;}

	// end inline asm
	st.global.v2.u16 	[%rd71+20544], {%rs1285, %rs1288};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1289, %f5785;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f6922, %rs1289;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1292, %f5786;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f6925, %rs1292;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1294, %f6925;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1291, %f6922;}

	// end inline asm
	st.global.v2.u16 	[%rd71+96], {%rs1291, %rs1294};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1295, %f5787;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f6928, %rs1295;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1298, %f5788;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f6931, %rs1298;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1300, %f6931;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1297, %f6928;}

	// end inline asm
	st.global.v2.u16 	[%rd71+4192], {%rs1297, %rs1300};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1301, %f5777;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f6934, %rs1301;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1304, %f5778;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f6937, %rs1304;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1306, %f6937;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1303, %f6934;}

	// end inline asm
	st.global.v2.u16 	[%rd71+16480], {%rs1303, %rs1306};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1307, %f5779;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f6940, %rs1307;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1310, %f5780;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f6943, %rs1310;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1312, %f6943;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1309, %f6940;}

	// end inline asm
	st.global.v2.u16 	[%rd71+20576], {%rs1309, %rs1312};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1313, %f6529;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f6946, %rs1313;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1316, %f6530;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f6949, %rs1316;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1318, %f6949;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1315, %f6946;}

	// end inline asm
	st.global.v2.u16 	[%rd72], {%rs1315, %rs1318};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1319, %f6531;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f6952, %rs1319;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1322, %f6532;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f6955, %rs1322;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1324, %f6955;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1321, %f6952;}

	// end inline asm
	st.global.v2.u16 	[%rd72+4096], {%rs1321, %rs1324};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1325, %f6537;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f6958, %rs1325;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1328, %f6538;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f6961, %rs1328;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1330, %f6961;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1327, %f6958;}

	// end inline asm
	st.global.v2.u16 	[%rd72+16384], {%rs1327, %rs1330};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1331, %f6539;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f6964, %rs1331;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1334, %f6540;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f6967, %rs1334;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1336, %f6967;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1333, %f6964;}

	// end inline asm
	st.global.v2.u16 	[%rd72+20480], {%rs1333, %rs1336};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1337, %f6553;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f6970, %rs1337;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1340, %f6554;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f6973, %rs1340;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1342, %f6973;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1339, %f6970;}

	// end inline asm
	st.global.v2.u16 	[%rd72+32], {%rs1339, %rs1342};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1343, %f6555;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f6976, %rs1343;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1346, %f6556;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f6979, %rs1346;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1348, %f6979;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1345, %f6976;}

	// end inline asm
	st.global.v2.u16 	[%rd72+4128], {%rs1345, %rs1348};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1349, %f6545;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f6982, %rs1349;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1352, %f6546;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f6985, %rs1352;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1354, %f6985;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1351, %f6982;}

	// end inline asm
	st.global.v2.u16 	[%rd72+16416], {%rs1351, %rs1354};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1355, %f6547;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f6988, %rs1355;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1358, %f6548;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f6991, %rs1358;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1360, %f6991;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1357, %f6988;}

	// end inline asm
	st.global.v2.u16 	[%rd72+20512], {%rs1357, %rs1360};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1361, %f6561;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f6994, %rs1361;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1364, %f6562;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f6997, %rs1364;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1366, %f6997;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1363, %f6994;}

	// end inline asm
	st.global.v2.u16 	[%rd72+64], {%rs1363, %rs1366};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1367, %f6563;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f7000, %rs1367;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1370, %f6564;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f7003, %rs1370;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1372, %f7003;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1369, %f7000;}

	// end inline asm
	st.global.v2.u16 	[%rd72+4160], {%rs1369, %rs1372};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1373, %f6569;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f7006, %rs1373;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1376, %f6570;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f7009, %rs1376;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1378, %f7009;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1375, %f7006;}

	// end inline asm
	st.global.v2.u16 	[%rd72+16448], {%rs1375, %rs1378};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1379, %f6571;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f7012, %rs1379;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1382, %f6572;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f7015, %rs1382;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1384, %f7015;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1381, %f7012;}

	// end inline asm
	st.global.v2.u16 	[%rd72+20544], {%rs1381, %rs1384};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1385, %f6585;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f7018, %rs1385;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1388, %f6586;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f7021, %rs1388;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1390, %f7021;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1387, %f7018;}

	// end inline asm
	st.global.v2.u16 	[%rd72+96], {%rs1387, %rs1390};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1391, %f6587;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f7024, %rs1391;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1394, %f6588;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f7027, %rs1394;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1396, %f7027;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1393, %f7024;}

	// end inline asm
	st.global.v2.u16 	[%rd72+4192], {%rs1393, %rs1396};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1397, %f6577;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f7030, %rs1397;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1400, %f6578;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f7033, %rs1400;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1402, %f7033;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1399, %f7030;}

	// end inline asm
	st.global.v2.u16 	[%rd72+16480], {%rs1399, %rs1402};
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1403, %f6579;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f7036, %rs1403;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1406, %f6580;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f7039, %rs1406;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1408, %f7039;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs1405, %f7036;}

	// end inline asm
	st.global.v2.u16 	[%rd72+20576], {%rs1405, %rs1408};
	ret;

}

